--- a/grsecurity-2.1.9-2.6.17.4-200607120947.patch
+++ b/grsecurity-2.1.9-2.6.17.4-200607120947.patch
@@ -1,18 +1,4 @@
-diff --git a/Makefile b/Makefile
-index abcf2d76933fc75ff0a5dc445ca31b7b46e9c9e0..f4583096d177caca832174742d5dec298c064055 100644
---- a/Makefile
-+++ b/Makefile
-@@ -518,7 +518,7 @@ export MODLIB
- 
- 
- ifeq ($(KBUILD_EXTMOD),)
--core-y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/
-+core-y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/ grsecurity/
- 
- vmlinux-dirs	:= $(patsubst %/,%,$(filter %/, $(init-y) $(init-m) \
- 		     $(core-y) $(core-m) $(drivers-y) $(drivers-m) \
-diff --git a/arch/alpha/kernel/module.c b/arch/alpha/kernel/module.c
-index aac6d4b22f7a23dd81a2f954fb380778708a0cf9..167b1a0295f0674ca81ff2438971df9df676f903 100644
---- a/arch/alpha/kernel/module.c
-+++ b/arch/alpha/kernel/module.c
-@@ -177,7 +177,7 @@ apply_relocate_add(Elf64_Shdr *sechdrs, const char *strtab,
+diff -urNp linux-2.6.17.4/arch/alpha/kernel/module.c linux-2.6.17.4/arch/alpha/kernel/module.c
+--- linux-2.6.17.4/arch/alpha/kernel/module.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/alpha/kernel/module.c	2006-07-01 14:35:29.000000000 -0400
+@@ -177,7 +177,7 @@ apply_relocate_add(Elf64_Shdr *sechdrs, 
@@ -27,5 +13,4 @@
-diff --git a/arch/alpha/kernel/osf_sys.c b/arch/alpha/kernel/osf_sys.c
-index 31afe3d91ac6fd3fcd7df09635184ff0113c2fa6..c6a80ab46d9ac3f0cb90d36962036b718c059c4a 100644
---- a/arch/alpha/kernel/osf_sys.c
-+++ b/arch/alpha/kernel/osf_sys.c
-@@ -1273,6 +1273,10 @@ arch_get_unmapped_area(struct file *filp, unsigned long addr,
+diff -urNp linux-2.6.17.4/arch/alpha/kernel/osf_sys.c linux-2.6.17.4/arch/alpha/kernel/osf_sys.c
+--- linux-2.6.17.4/arch/alpha/kernel/osf_sys.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/alpha/kernel/osf_sys.c	2006-07-01 14:35:29.000000000 -0400
+@@ -1273,6 +1273,10 @@ arch_get_unmapped_area(struct file *filp
@@ -42 +27 @@
-@@ -1280,8 +1284,8 @@ arch_get_unmapped_area(struct file *filp, unsigned long addr,
+@@ -1280,8 +1284,8 @@ arch_get_unmapped_area(struct file *filp
@@ -53,4 +38,3 @@
-diff --git a/arch/alpha/kernel/ptrace.c b/arch/alpha/kernel/ptrace.c
-index 0cd060598f9aa25aee8d86a6629cc4d8514542ed..e7599582ba53cdefa52291d73a643f75efebbe54 100644
---- a/arch/alpha/kernel/ptrace.c
-+++ b/arch/alpha/kernel/ptrace.c
+diff -urNp linux-2.6.17.4/arch/alpha/kernel/ptrace.c linux-2.6.17.4/arch/alpha/kernel/ptrace.c
+--- linux-2.6.17.4/arch/alpha/kernel/ptrace.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/alpha/kernel/ptrace.c	2006-07-01 15:38:54.000000000 -0400
@@ -65 +49 @@
-@@ -283,6 +284,9 @@ do_sys_ptrace(long request, long pid, long addr, long data,
+@@ -283,6 +284,9 @@ do_sys_ptrace(long request, long pid, lo
@@ -75,4 +59,3 @@
-diff --git a/arch/alpha/mm/fault.c b/arch/alpha/mm/fault.c
-index 64ace5a9cd3d1383159992d0bdff9363fbf13238..8287e893e219822c67768a8b74ad33dbd4b6ca20 100644
---- a/arch/alpha/mm/fault.c
-+++ b/arch/alpha/mm/fault.c
+diff -urNp linux-2.6.17.4/arch/alpha/mm/fault.c linux-2.6.17.4/arch/alpha/mm/fault.c
+--- linux-2.6.17.4/arch/alpha/mm/fault.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/alpha/mm/fault.c	2006-07-01 14:35:29.000000000 -0400
@@ -87 +70 @@
-@@ -56,6 +57,124 @@ __load_new_mm_context(struct mm_struct *next_mm)
+@@ -56,6 +57,124 @@ __load_new_mm_context(struct mm_struct *
@@ -212 +195 @@
-@@ -133,8 +252,29 @@ do_page_fault(unsigned long address, unsigned long mmcsr,
+@@ -133,8 +252,29 @@ do_page_fault(unsigned long address, uns
@@ -243,5 +226,4 @@
-diff --git a/arch/arm/mm/mmap.c b/arch/arm/mm/mmap.c
-index 3de7f84b53c25e3cdd5f8d44da252336fb55645a..139b5ff52d768bd3f24d15a8eeb1df9c4956f12c 100644
---- a/arch/arm/mm/mmap.c
-+++ b/arch/arm/mm/mmap.c
-@@ -62,6 +62,10 @@ arch_get_unmapped_area(struct file *filp, unsigned long addr,
+diff -urNp linux-2.6.17.4/arch/arm/mm/mmap.c linux-2.6.17.4/arch/arm/mm/mmap.c
+--- linux-2.6.17.4/arch/arm/mm/mmap.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/arm/mm/mmap.c	2006-07-01 14:35:29.000000000 -0400
+@@ -62,6 +62,10 @@ arch_get_unmapped_area(struct file *filp
@@ -258 +240 @@
-@@ -76,7 +80,7 @@ arch_get_unmapped_area(struct file *filp, unsigned long addr,
+@@ -76,7 +80,7 @@ arch_get_unmapped_area(struct file *filp
@@ -278,4 +260,20 @@
-diff --git a/arch/i386/Kconfig b/arch/i386/Kconfig
-index 8dfa3054f10fb0ce83576277f080caccf7644535..0b6f2beacf19c4cc80061a9e86b3f6f3de5dd2d5 100644
---- a/arch/i386/Kconfig
-+++ b/arch/i386/Kconfig
+diff -urNp linux-2.6.17.4/arch/i386/boot/compressed/head.S linux-2.6.17.4/arch/i386/boot/compressed/head.S
+--- linux-2.6.17.4/arch/i386/boot/compressed/head.S	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/boot/compressed/head.S	2006-07-01 14:35:29.000000000 -0400
+@@ -39,11 +39,13 @@ startup_32:
+ 	movl %eax,%gs
+ 
+ 	lss stack_start,%esp
++	movl 0x000000,%ecx
+ 	xorl %eax,%eax
+ 1:	incl %eax		# check that A20 really IS enabled
+ 	movl %eax,0x000000	# loop forever if it isn't
+ 	cmpl %eax,0x100000
+ 	je 1b
++	movl %ecx,0x000000
+ 
+ /*
+  * Initialize eflags.  Some BIOS's leave bits like NT set.  This would
+diff -urNp linux-2.6.17.4/arch/i386/Kconfig linux-2.6.17.4/arch/i386/Kconfig
+--- linux-2.6.17.4/arch/i386/Kconfig	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/Kconfig	2006-07-01 15:38:54.000000000 -0400
@@ -291,4 +289,3 @@
-diff --git a/arch/i386/Kconfig.cpu b/arch/i386/Kconfig.cpu
-index eb130482ba186663a6411fa1b7d48fff652f3e72..7ae300c108820f8b08a564cb29d76bf9703762cd 100644
---- a/arch/i386/Kconfig.cpu
-+++ b/arch/i386/Kconfig.cpu
+diff -urNp linux-2.6.17.4/arch/i386/Kconfig.cpu linux-2.6.17.4/arch/i386/Kconfig.cpu
+--- linux-2.6.17.4/arch/i386/Kconfig.cpu	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/Kconfig.cpu	2006-07-01 14:35:29.000000000 -0400
@@ -313,4 +310,3 @@
-diff --git a/arch/i386/Kconfig.debug b/arch/i386/Kconfig.debug
-index c92191b1fb672935527bccbadfdd129065306edb..abdb0298cff1586b037a81a733f8c8892bcafd19 100644
---- a/arch/i386/Kconfig.debug
-+++ b/arch/i386/Kconfig.debug
+diff -urNp linux-2.6.17.4/arch/i386/Kconfig.debug linux-2.6.17.4/arch/i386/Kconfig.debug
+--- linux-2.6.17.4/arch/i386/Kconfig.debug	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/Kconfig.debug	2006-07-01 14:35:29.000000000 -0400
@@ -326,22 +322,3 @@
-diff --git a/arch/i386/boot/compressed/head.S b/arch/i386/boot/compressed/head.S
-index b5893e4ecd376b54a3044c09e035ff82bf5e923c..5188aba7fab84ae1d47aaf55c2ec98b5cd4b6f11 100644
---- a/arch/i386/boot/compressed/head.S
-+++ b/arch/i386/boot/compressed/head.S
-@@ -39,11 +39,13 @@ startup_32:
- 	movl %eax,%gs
- 
- 	lss stack_start,%esp
-+	movl 0x000000,%ecx
- 	xorl %eax,%eax
- 1:	incl %eax		# check that A20 really IS enabled
- 	movl %eax,0x000000	# loop forever if it isn't
- 	cmpl %eax,0x100000
- 	je 1b
-+	movl %ecx,0x000000
- 
- /*
-  * Initialize eflags.  Some BIOS's leave bits like NT set.  This would
-diff --git a/arch/i386/kernel/acpi/sleep.c b/arch/i386/kernel/acpi/sleep.c
-index 1cb2b186a3aff9ac0cbdc8f4540154a4f5e78e26..aafd08ea6107b9fae2decbbec30b8633c55b3d4d 100644
---- a/arch/i386/kernel/acpi/sleep.c
-+++ b/arch/i386/kernel/acpi/sleep.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/acpi/sleep.c linux-2.6.17.4/arch/i386/kernel/acpi/sleep.c
+--- linux-2.6.17.4/arch/i386/kernel/acpi/sleep.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/acpi/sleep.c	2006-07-01 14:35:29.000000000 -0400
@@ -356 +333 @@
-@@ -24,11 +25,22 @@ static void init_low_mapping(pgd_t * pgd, int pgd_limit)
+@@ -24,11 +25,22 @@ static void init_low_mapping(pgd_t * pgd
@@ -398,4 +375,3 @@
-diff --git a/arch/i386/kernel/alternative.c b/arch/i386/kernel/alternative.c
-index 5cbd6f99fb2afb53c8c1c4835df28ae86fc883ec..a5d71144fd7e016dd1623160fa4686306749a1c0 100644
---- a/arch/i386/kernel/alternative.c
-+++ b/arch/i386/kernel/alternative.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/alternative.c linux-2.6.17.4/arch/i386/kernel/alternative.c
+--- linux-2.6.17.4/arch/i386/kernel/alternative.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/alternative.c	2006-07-01 14:35:29.000000000 -0400
@@ -410 +386 @@
-@@ -101,71 +102,128 @@ void apply_alternatives(struct alt_instr *start, struct alt_instr *end)
+@@ -101,71 +102,128 @@ void apply_alternatives(struct alt_instr
@@ -494,0 +471,3 @@
++
++#ifdef CONFIG_PAX_KERNEXEC
++	unsigned long cr0;
@@ -498,3 +476,0 @@
-+#ifdef CONFIG_PAX_KERNEXEC
-+	unsigned long cr0;
-+
@@ -526,3 +502 @@
- 
--	for (ptr = start; ptr < end; ptr++) {
--		if (*ptr < text)
++
@@ -534 +508,3 @@
-+
+ 
+-	for (ptr = start; ptr < end; ptr++) {
+-		if (*ptr < text)
@@ -553,5 +529,4 @@
-diff --git a/arch/i386/kernel/apic.c b/arch/i386/kernel/apic.c
-index 3d4b2f3d116a796ffad8ef911353b6a71a2f43b7..e68993bcd8c3d3eca8484c5da3ac22e257700bf6 100644
---- a/arch/i386/kernel/apic.c
-+++ b/arch/i386/kernel/apic.c
-@@ -1176,7 +1176,7 @@ inline void smp_local_timer_interrupt(struct pt_regs * regs)
+diff -urNp linux-2.6.17.4/arch/i386/kernel/apic.c linux-2.6.17.4/arch/i386/kernel/apic.c
+--- linux-2.6.17.4/arch/i386/kernel/apic.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/apic.c	2006-07-01 14:35:29.000000000 -0400
+@@ -1176,7 +1176,7 @@ inline void smp_local_timer_interrupt(st
@@ -566,5 +541,4 @@
-diff --git a/arch/i386/kernel/apm.c b/arch/i386/kernel/apm.c
-index df0e1745f189764174a70bb3d5430e36a290a0f1..4b0458116e5bc2a47a625352716302a6b9c54125 100644
---- a/arch/i386/kernel/apm.c
-+++ b/arch/i386/kernel/apm.c
-@@ -589,9 +589,18 @@ static u8 apm_bios_call(u32 func, u32 ebx_in, u32 ecx_in,
+diff -urNp linux-2.6.17.4/arch/i386/kernel/apm.c linux-2.6.17.4/arch/i386/kernel/apm.c
+--- linux-2.6.17.4/arch/i386/kernel/apm.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/apm.c	2006-07-01 14:35:29.000000000 -0400
+@@ -589,9 +589,18 @@ static u8 apm_bios_call(u32 func, u32 eb
@@ -589 +563 @@
-@@ -603,6 +612,11 @@ static u8 apm_bios_call(u32 func, u32 ebx_in, u32 ecx_in,
+@@ -603,6 +612,11 @@ static u8 apm_bios_call(u32 func, u32 eb
@@ -601 +575 @@
-@@ -633,9 +647,18 @@ static u8 apm_bios_call_simple(u32 func, u32 ebx_in, u32 ecx_in, u32 *eax)
+@@ -633,9 +647,18 @@ static u8 apm_bios_call_simple(u32 func,
@@ -620 +594 @@
-@@ -647,6 +670,11 @@ static u8 apm_bios_call_simple(u32 func, u32 ebx_in, u32 ecx_in, u32 *eax)
+@@ -647,6 +670,11 @@ static u8 apm_bios_call_simple(u32 func,
@@ -632,4 +606,3 @@
-diff --git a/arch/i386/kernel/asm-offsets.c b/arch/i386/kernel/asm-offsets.c
-index 36d66e2077d0495be04b435eb7602520e967cbe5..208f923ae647d3a5a670c1c0ed29cc54a8fee25b 100644
---- a/arch/i386/kernel/asm-offsets.c
-+++ b/arch/i386/kernel/asm-offsets.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/asm-offsets.c linux-2.6.17.4/arch/i386/kernel/asm-offsets.c
+--- linux-2.6.17.4/arch/i386/kernel/asm-offsets.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/asm-offsets.c	2006-07-01 14:35:29.000000000 -0400
@@ -643,4 +616,3 @@
-diff --git a/arch/i386/kernel/cpu/common.c b/arch/i386/kernel/cpu/common.c
-index a06a49075f107ec47e45aa8db6a91e214bfc1d1e..28a21b333eeec4ed14abfeb4ef488afe13c106c7 100644
---- a/arch/i386/kernel/cpu/common.c
-+++ b/arch/i386/kernel/cpu/common.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/cpu/common.c linux-2.6.17.4/arch/i386/kernel/cpu/common.c
+--- linux-2.6.17.4/arch/i386/kernel/cpu/common.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/cpu/common.c	2006-07-01 14:35:29.000000000 -0400
@@ -665 +637 @@
-@@ -401,6 +397,10 @@ void __cpuinit identify_cpu(struct cpuinfo_x86 *c)
+@@ -401,6 +397,10 @@ void __cpuinit identify_cpu(struct cpuin
@@ -754,5 +726,4 @@
-diff --git a/arch/i386/kernel/crash.c b/arch/i386/kernel/crash.c
-index 2b0cfce24a619af5105e11705adb771f5298c0a1..fa88a0d77779e82ddd092081119adc1661de82f9 100644
---- a/arch/i386/kernel/crash.c
-+++ b/arch/i386/kernel/crash.c
-@@ -105,7 +105,7 @@ static int crash_nmi_callback(struct pt_regs *regs, int cpu)
+diff -urNp linux-2.6.17.4/arch/i386/kernel/crash.c linux-2.6.17.4/arch/i386/kernel/crash.c
+--- linux-2.6.17.4/arch/i386/kernel/crash.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/crash.c	2006-07-01 14:35:29.000000000 -0400
+@@ -105,7 +105,7 @@ static int crash_nmi_callback(struct pt_
@@ -767,4 +738,3 @@
-diff --git a/arch/i386/kernel/doublefault.c b/arch/i386/kernel/doublefault.c
-index 5edb1d379add9d24bd353e2ade6c176d0a3cdca5..54a8ca85b39f3dbcb3a80dd999ebcf9251196032 100644
---- a/arch/i386/kernel/doublefault.c
-+++ b/arch/i386/kernel/doublefault.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/doublefault.c linux-2.6.17.4/arch/i386/kernel/doublefault.c
+--- linux-2.6.17.4/arch/i386/kernel/doublefault.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/doublefault.c	2006-07-01 14:35:29.000000000 -0400
@@ -780 +750 @@
-@@ -56,10 +56,10 @@ struct tss_struct doublefault_tss __cacheline_aligned = {
+@@ -56,10 +56,10 @@ struct tss_struct doublefault_tss __cach
@@ -793,5 +763,4 @@
-diff --git a/arch/i386/kernel/efi.c b/arch/i386/kernel/efi.c
-index 9202b67c4b2e5cc925b0670d0b3e804dc719abbc..87e1ac71dc7116af34e22bb4879822ddd12caba5 100644
---- a/arch/i386/kernel/efi.c
-+++ b/arch/i386/kernel/efi.c
-@@ -64,82 +64,58 @@ extern void * boot_ioremap(unsigned long, unsigned long);
+diff -urNp linux-2.6.17.4/arch/i386/kernel/efi.c linux-2.6.17.4/arch/i386/kernel/efi.c
+--- linux-2.6.17.4/arch/i386/kernel/efi.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/efi.c	2006-07-01 14:35:29.000000000 -0400
+@@ -64,82 +64,58 @@ extern void * boot_ioremap(unsigned long
@@ -866,0 +836,3 @@
+-
+-	cpu_gdt_descr->address = (unsigned long)__va(cpu_gdt_descr->address);
+-	load_gdt(cpu_gdt_descr);
@@ -871,2 +843 @@
--	cpu_gdt_descr->address = (unsigned long)__va(cpu_gdt_descr->address);
--	load_gdt(cpu_gdt_descr);
+-	cr4 = read_cr4();
@@ -875,2 +845,0 @@
--	cr4 = read_cr4();
--
@@ -907 +876 @@
-@@ -155,7 +131,7 @@ phys_efi_set_virtual_address_map(unsigned long memory_map_size,
+@@ -155,7 +131,7 @@ phys_efi_set_virtual_address_map(unsigne
@@ -916,4 +885,3 @@
-diff --git a/arch/i386/kernel/efi_stub.S b/arch/i386/kernel/efi_stub.S
-index 08c0312d9b6cfa1f1141ca997fd1ff072dc73e05..a0df96b4fbdd50759d569f79af7b6df12924da1e 100644
---- a/arch/i386/kernel/efi_stub.S
-+++ b/arch/i386/kernel/efi_stub.S
+diff -urNp linux-2.6.17.4/arch/i386/kernel/efi_stub.S linux-2.6.17.4/arch/i386/kernel/efi_stub.S
+--- linux-2.6.17.4/arch/i386/kernel/efi_stub.S	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/efi_stub.S	2006-07-01 14:35:29.000000000 -0400
@@ -1022,4 +990,3 @@
-diff --git a/arch/i386/kernel/entry.S b/arch/i386/kernel/entry.S
-index cfc683f153b916b1d57e27769fd8f8de132bbb7f..aca4139b8a900a1a6fdd5c66926117c920a67d85 100644
---- a/arch/i386/kernel/entry.S
-+++ b/arch/i386/kernel/entry.S
+diff -urNp linux-2.6.17.4/arch/i386/kernel/entry.S linux-2.6.17.4/arch/i386/kernel/entry.S
+--- linux-2.6.17.4/arch/i386/kernel/entry.S	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/entry.S	2006-07-01 21:49:34.000000000 -0400
@@ -1201,4 +1168,3 @@
-diff --git a/arch/i386/kernel/head.S b/arch/i386/kernel/head.S
-index 3debc2e26542f36f58b3b7834d3a4fbc294d42c2..c1208f8c18c4177209c45d6b7e50f8bedb338062 100644
---- a/arch/i386/kernel/head.S
-+++ b/arch/i386/kernel/head.S
+diff -urNp linux-2.6.17.4/arch/i386/kernel/head.S linux-2.6.17.4/arch/i386/kernel/head.S
+--- linux-2.6.17.4/arch/i386/kernel/head.S	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/head.S	2006-07-01 22:03:39.000000000 -0400
@@ -1426,0 +1393,2 @@
+- */
+-.data
@@ -1430,2 +1398 @@
-  */
--.data
++ */
@@ -1524,4 +1491,3 @@
-diff --git a/arch/i386/kernel/i386_ksyms.c b/arch/i386/kernel/i386_ksyms.c
-index 036a9857936fa26816ca97b3a74021399909a0e8..a5776e1e936f171a52c95eae70f9f9ca86214494 100644
---- a/arch/i386/kernel/i386_ksyms.c
-+++ b/arch/i386/kernel/i386_ksyms.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/i386_ksyms.c linux-2.6.17.4/arch/i386/kernel/i386_ksyms.c
+--- linux-2.6.17.4/arch/i386/kernel/i386_ksyms.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/i386_ksyms.c	2006-07-01 14:35:29.000000000 -0400
@@ -1537,4 +1503,3 @@
-diff --git a/arch/i386/kernel/init_task.c b/arch/i386/kernel/init_task.c
-index cff95d10a4d8251173ee8ceac7351d774279cbbb..665b0135855262acc19245d4f48f40ddb80b5765 100644
---- a/arch/i386/kernel/init_task.c
-+++ b/arch/i386/kernel/init_task.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/init_task.c linux-2.6.17.4/arch/i386/kernel/init_task.c
+--- linux-2.6.17.4/arch/i386/kernel/init_task.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/init_task.c	2006-07-01 14:35:29.000000000 -0400
@@ -1548,4 +1513,3 @@
-diff --git a/arch/i386/kernel/ioport.c b/arch/i386/kernel/ioport.c
-index 79026f026b85401ee42c3e83bd55c1029e3286e8..7fed813d5bc4a339bae3adc4b116d3fabbe08174 100644
---- a/arch/i386/kernel/ioport.c
-+++ b/arch/i386/kernel/ioport.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/ioport.c linux-2.6.17.4/arch/i386/kernel/ioport.c
+--- linux-2.6.17.4/arch/i386/kernel/ioport.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/ioport.c	2006-07-01 15:38:54.000000000 -0400
@@ -1560 +1524 @@
-@@ -64,9 +65,16 @@ asmlinkage long sys_ioperm(unsigned long from, unsigned long num, int turn_on)
+@@ -64,9 +65,16 @@ asmlinkage long sys_ioperm(unsigned long
@@ -1578 +1542 @@
-@@ -88,7 +96,7 @@ asmlinkage long sys_ioperm(unsigned long from, unsigned long num, int turn_on)
+@@ -88,7 +96,7 @@ asmlinkage long sys_ioperm(unsigned long
@@ -1587 +1551 @@
-@@ -142,8 +150,13 @@ asmlinkage long sys_iopl(unsigned long unused)
+@@ -142,8 +150,13 @@ asmlinkage long sys_iopl(unsigned long u
@@ -1601,5 +1565,4 @@
-diff --git a/arch/i386/kernel/irq.c b/arch/i386/kernel/irq.c
-index f3a9c78c4a24412cfea2cddbe8d1c1e51eb00bea..f1f0e8ef92c8a3e5fee71e0c6fcfbd6d1e14c559 100644
---- a/arch/i386/kernel/irq.c
-+++ b/arch/i386/kernel/irq.c
-@@ -91,7 +91,7 @@ fastcall unsigned int do_IRQ(struct pt_regs *regs)
+diff -urNp linux-2.6.17.4/arch/i386/kernel/irq.c linux-2.6.17.4/arch/i386/kernel/irq.c
+--- linux-2.6.17.4/arch/i386/kernel/irq.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/irq.c	2006-07-01 14:35:29.000000000 -0400
+@@ -91,7 +91,7 @@ fastcall unsigned int do_IRQ(struct pt_r
@@ -1614 +1577 @@
-@@ -119,10 +119,10 @@ fastcall unsigned int do_IRQ(struct pt_regs *regs)
+@@ -119,10 +119,10 @@ fastcall unsigned int do_IRQ(struct pt_r
@@ -1636,5 +1599,4 @@
-diff --git a/arch/i386/kernel/ldt.c b/arch/i386/kernel/ldt.c
-index 983f95707e1169f75c761bdfd7c43e87479f7c67..42a48cec3b19f2e20565962993965ff924e7dfbc 100644
---- a/arch/i386/kernel/ldt.c
-+++ b/arch/i386/kernel/ldt.c
-@@ -103,6 +103,19 @@ int init_new_context(struct task_struct *tsk, struct mm_struct *mm)
+diff -urNp linux-2.6.17.4/arch/i386/kernel/ldt.c linux-2.6.17.4/arch/i386/kernel/ldt.c
+--- linux-2.6.17.4/arch/i386/kernel/ldt.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/ldt.c	2006-07-01 14:35:29.000000000 -0400
+@@ -103,6 +103,19 @@ int init_new_context(struct task_struct 
@@ -1660 +1622 @@
-@@ -160,7 +173,7 @@ static int read_default_ldt(void __user * ptr, unsigned long bytecount)
+@@ -160,7 +173,7 @@ static int read_default_ldt(void __user 
@@ -1669 +1631 @@
-@@ -215,6 +228,13 @@ static int write_ldt(void __user * ptr, unsigned long bytecount, int oldmode)
+@@ -215,6 +228,13 @@ static int write_ldt(void __user * ptr, 
@@ -1683,4 +1645,3 @@
-diff --git a/arch/i386/kernel/module.c b/arch/i386/kernel/module.c
-index 470cf97e7cd3104bbfd6eb2de379d0bd0be9c460..96f3b144365ac5f0693024a2c1c0bddb7396589a 100644
---- a/arch/i386/kernel/module.c
-+++ b/arch/i386/kernel/module.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/module.c linux-2.6.17.4/arch/i386/kernel/module.c
+--- linux-2.6.17.4/arch/i386/kernel/module.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/module.c	2006-07-01 14:35:29.000000000 -0400
@@ -1726 +1687 @@
-@@ -44,6 +66,45 @@ void module_free(struct module *mod, void *module_region)
+@@ -44,6 +66,45 @@ void module_free(struct module *mod, voi
@@ -1806,5 +1767,4 @@
-diff --git a/arch/i386/kernel/process.c b/arch/i386/kernel/process.c
-index 6259afea46d17db4eeda2ea1234c714540b4cadc..939204cfb79dbaab0c4df789666e92ebc6ae070f 100644
---- a/arch/i386/kernel/process.c
-+++ b/arch/i386/kernel/process.c
-@@ -69,7 +69,7 @@ EXPORT_SYMBOL(boot_option_idle_override);
+diff -urNp linux-2.6.17.4/arch/i386/kernel/process.c linux-2.6.17.4/arch/i386/kernel/process.c
+--- linux-2.6.17.4/arch/i386/kernel/process.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/process.c	2006-07-01 14:35:29.000000000 -0400
+@@ -69,7 +69,7 @@ EXPORT_SYMBOL(boot_option_idle_override)
@@ -1828 +1788 @@
-@@ -343,8 +343,8 @@ int kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)
+@@ -343,8 +343,8 @@ int kernel_thread(int (*fn)(void *), voi
@@ -1858 +1818 @@
-@@ -418,7 +421,7 @@ int copy_thread(int nr, unsigned long clone_flags, unsigned long esp,
+@@ -418,7 +421,7 @@ int copy_thread(int nr, unsigned long cl
@@ -1867 +1827 @@
-@@ -461,6 +464,11 @@ int copy_thread(int nr, unsigned long clone_flags, unsigned long esp,
+@@ -461,6 +464,11 @@ int copy_thread(int nr, unsigned long cl
@@ -1879 +1839 @@
-@@ -625,7 +633,11 @@ struct task_struct fastcall * __switch_to(struct task_struct *prev_p, struct tas
+@@ -625,7 +633,11 @@ struct task_struct fastcall * __switch_t
@@ -1892 +1852 @@
-@@ -648,11 +660,23 @@ struct task_struct fastcall * __switch_to(struct task_struct *prev_p, struct tas
+@@ -648,11 +660,23 @@ struct task_struct fastcall * __switch_t
@@ -1916 +1876 @@
-@@ -806,8 +830,18 @@ asmlinkage int sys_set_thread_area(struct user_desc __user *u_info)
+@@ -806,8 +830,18 @@ asmlinkage int sys_set_thread_area(struc
@@ -1935 +1895 @@
-@@ -839,8 +873,17 @@ asmlinkage int sys_set_thread_area(struct user_desc __user *u_info)
+@@ -839,8 +873,17 @@ asmlinkage int sys_set_thread_area(struc
@@ -1953 +1913 @@
-@@ -896,9 +939,27 @@ asmlinkage int sys_get_thread_area(struct user_desc __user *u_info)
+@@ -896,9 +939,27 @@ asmlinkage int sys_get_thread_area(struc
@@ -1985,4 +1945,3 @@
-diff --git a/arch/i386/kernel/ptrace.c b/arch/i386/kernel/ptrace.c
-index fd7eaf7866e0e118cd6852ade5122e4f6ef14051..ad6409d4cea3faac122eb6ada0d443a3b9df85e7 100644
---- a/arch/i386/kernel/ptrace.c
-+++ b/arch/i386/kernel/ptrace.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/ptrace.c linux-2.6.17.4/arch/i386/kernel/ptrace.c
+--- linux-2.6.17.4/arch/i386/kernel/ptrace.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/ptrace.c	2006-07-01 15:38:54.000000000 -0400
@@ -1997 +1956 @@
-@@ -342,6 +343,11 @@ ptrace_set_thread_area(struct task_struct *child,
+@@ -342,6 +343,11 @@ ptrace_set_thread_area(struct task_struc
@@ -2009 +1968 @@
-@@ -432,6 +438,17 @@ long arch_ptrace(struct task_struct *child, long request, long addr, long data)
+@@ -432,6 +438,17 @@ long arch_ptrace(struct task_struct *chi
@@ -2027 +1986 @@
-@@ -645,7 +662,7 @@ void send_sigtrap(struct task_struct *tsk, struct pt_regs *regs, int error_code)
+@@ -645,7 +662,7 @@ void send_sigtrap(struct task_struct *ts
@@ -2036,4 +1995,3 @@
-diff --git a/arch/i386/kernel/reboot.c b/arch/i386/kernel/reboot.c
-index d207242976d31f8be7127f8db18aede33041867e..602176454d4b9d47cfa0e64760c3d708a94351a1 100644
---- a/arch/i386/kernel/reboot.c
-+++ b/arch/i386/kernel/reboot.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/reboot.c linux-2.6.17.4/arch/i386/kernel/reboot.c
+--- linux-2.6.17.4/arch/i386/kernel/reboot.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/reboot.c	2006-07-01 14:35:29.000000000 -0400
@@ -2063 +2021 @@
-@@ -203,6 +203,10 @@ void machine_real_restart(unsigned char *code, int length)
+@@ -203,6 +203,10 @@ void machine_real_restart(unsigned char 
@@ -2074 +2032 @@
-@@ -223,9 +227,17 @@ void machine_real_restart(unsigned char *code, int length)
+@@ -223,9 +227,17 @@ void machine_real_restart(unsigned char 
@@ -2092,5 +2050,4 @@
-diff --git a/arch/i386/kernel/setup.c b/arch/i386/kernel/setup.c
-index dd6b0e3386ce8f3af2c65d74853d0b001ae07440..91000f1d1ee5cc5033c820ab5927f764b781514c 100644
---- a/arch/i386/kernel/setup.c
-+++ b/arch/i386/kernel/setup.c
-@@ -88,7 +88,11 @@ struct cpuinfo_x86 new_cpu_data __initdata = { 0, 0, 0, 0, -1, 1, 0, 0, -1 };
+diff -urNp linux-2.6.17.4/arch/i386/kernel/setup.c linux-2.6.17.4/arch/i386/kernel/setup.c
+--- linux-2.6.17.4/arch/i386/kernel/setup.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/setup.c	2006-07-01 14:35:29.000000000 -0400
+@@ -88,7 +88,11 @@ struct cpuinfo_x86 new_cpu_data __initda
@@ -2128,5 +2085,4 @@
-diff --git a/arch/i386/kernel/signal.c b/arch/i386/kernel/signal.c
-index 5c352c3a9e7fa00492da1ff1c33a28ad0b5217c7..eb160d2d5e7412ff0dff030e0ed09cfa30b3424e 100644
---- a/arch/i386/kernel/signal.c
-+++ b/arch/i386/kernel/signal.c
-@@ -351,7 +351,17 @@ static int setup_frame(int sig, struct k_sigaction *ka,
+diff -urNp linux-2.6.17.4/arch/i386/kernel/signal.c linux-2.6.17.4/arch/i386/kernel/signal.c
+--- linux-2.6.17.4/arch/i386/kernel/signal.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/signal.c	2006-07-01 14:35:29.000000000 -0400
+@@ -351,7 +351,17 @@ static int setup_frame(int sig, struct k
@@ -2150 +2106 @@
-@@ -447,7 +457,18 @@ static int setup_rt_frame(int sig, struct k_sigaction *ka, siginfo_t *info,
+@@ -447,7 +457,18 @@ static int setup_rt_frame(int sig, struc
@@ -2169 +2125 @@
-@@ -580,7 +601,7 @@ static void fastcall do_signal(struct pt_regs *regs)
+@@ -580,7 +601,7 @@ static void fastcall do_signal(struct pt
@@ -2178,4 +2134,39 @@
-diff --git a/arch/i386/kernel/sys_i386.c b/arch/i386/kernel/sys_i386.c
-index 8fdb1fb17a5f0ca457cdf0bdaa8e3d998fcd0ccf..82201bfece4b1e2018bf2b139296771f64482820 100644
---- a/arch/i386/kernel/sys_i386.c
-+++ b/arch/i386/kernel/sys_i386.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/syscall_table.S linux-2.6.17.4/arch/i386/kernel/syscall_table.S
+--- linux-2.6.17.4/arch/i386/kernel/syscall_table.S	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/syscall_table.S	2006-07-01 14:35:29.000000000 -0400
+@@ -1,3 +1,4 @@
++.section .rodata,"a",@progbits
+ ENTRY(sys_call_table)
+ 	.long sys_restart_syscall	/* 0 - old "setup()" system call, used for restarting */
+ 	.long sys_exit
+diff -urNp linux-2.6.17.4/arch/i386/kernel/sysenter.c linux-2.6.17.4/arch/i386/kernel/sysenter.c
+--- linux-2.6.17.4/arch/i386/kernel/sysenter.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/sysenter.c	2006-07-01 14:35:29.000000000 -0400
+@@ -24,7 +24,7 @@ extern asmlinkage void sysenter_entry(vo
+ void enable_sep_cpu(void)
+ {
+ 	int cpu = get_cpu();
+-	struct tss_struct *tss = &per_cpu(init_tss, cpu);
++	struct tss_struct *tss = init_tss + cpu;
+ 
+ 	if (!boot_cpu_has(X86_FEATURE_SEP)) {
+ 		put_cpu();
+@@ -48,6 +48,7 @@ extern const char vsyscall_sysenter_star
+ 
+ int __init sysenter_setup(void)
+ {
++#ifndef CONFIG_PAX_NOVSYSCALL
+ 	void *page = (void *)get_zeroed_page(GFP_ATOMIC);
+ 
+ 	__set_fixmap(FIX_VSYSCALL, __pa(page), PAGE_READONLY_EXEC);
+@@ -62,6 +63,7 @@ int __init sysenter_setup(void)
+ 	memcpy(page,
+ 	       &vsyscall_sysenter_start,
+ 	       &vsyscall_sysenter_end - &vsyscall_sysenter_start);
++#endif
+ 
+ 	return 0;
+ }
+diff -urNp linux-2.6.17.4/arch/i386/kernel/sys_i386.c linux-2.6.17.4/arch/i386/kernel/sys_i386.c
+--- linux-2.6.17.4/arch/i386/kernel/sys_i386.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/sys_i386.c	2006-07-01 19:05:31.000000000 -0400
@@ -2374,42 +2365,3 @@
-diff --git a/arch/i386/kernel/syscall_table.S b/arch/i386/kernel/syscall_table.S
-index af56987f69b02503c82cdc2a48660f56db02153a..f9b48ce2511b25ff04d94eaefbed42fb2fd6e55f 100644
---- a/arch/i386/kernel/syscall_table.S
-+++ b/arch/i386/kernel/syscall_table.S
-@@ -1,3 +1,4 @@
-+.section .rodata,"a",@progbits
- ENTRY(sys_call_table)
- 	.long sys_restart_syscall	/* 0 - old "setup()" system call, used for restarting */
- 	.long sys_exit
-diff --git a/arch/i386/kernel/sysenter.c b/arch/i386/kernel/sysenter.c
-index 0bada1870bdf5691631e10558bf43cbb350691a1..458d95a006fa2e9096e81546e28d166c6c0ae1ef 100644
---- a/arch/i386/kernel/sysenter.c
-+++ b/arch/i386/kernel/sysenter.c
-@@ -24,7 +24,7 @@ extern asmlinkage void sysenter_entry(void);
- void enable_sep_cpu(void)
- {
- 	int cpu = get_cpu();
--	struct tss_struct *tss = &per_cpu(init_tss, cpu);
-+	struct tss_struct *tss = init_tss + cpu;
- 
- 	if (!boot_cpu_has(X86_FEATURE_SEP)) {
- 		put_cpu();
-@@ -48,6 +48,7 @@ extern const char vsyscall_sysenter_start, vsyscall_sysenter_end;
- 
- int __init sysenter_setup(void)
- {
-+#ifndef CONFIG_PAX_NOVSYSCALL
- 	void *page = (void *)get_zeroed_page(GFP_ATOMIC);
- 
- 	__set_fixmap(FIX_VSYSCALL, __pa(page), PAGE_READONLY_EXEC);
-@@ -62,6 +63,7 @@ int __init sysenter_setup(void)
- 	memcpy(page,
- 	       &vsyscall_sysenter_start,
- 	       &vsyscall_sysenter_end - &vsyscall_sysenter_start);
-+#endif
- 
- 	return 0;
- }
-diff --git a/arch/i386/kernel/traps.c b/arch/i386/kernel/traps.c
-index 0e498369f35e916e547485db5f8fed45e3d80055..04cc898287d3d9294a7a54282130dacca1ece27d 100644
---- a/arch/i386/kernel/traps.c
-+++ b/arch/i386/kernel/traps.c
+diff -urNp linux-2.6.17.4/arch/i386/kernel/traps.c linux-2.6.17.4/arch/i386/kernel/traps.c
+--- linux-2.6.17.4/arch/i386/kernel/traps.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/traps.c	2006-07-01 19:36:05.000000000 -0400
@@ -2445 +2397 @@
-@@ -144,18 +140,22 @@ static inline unsigned long print_context_stack(struct thread_info *tinfo,
+@@ -144,18 +140,22 @@ static inline unsigned long print_contex
@@ -2469 +2421 @@
-@@ -249,7 +249,7 @@ void show_registers(struct pt_regs *regs)
+@@ -249,7 +249,7 @@ void show_registers(struct pt_regs *regs
@@ -2478 +2430 @@
-@@ -276,13 +276,15 @@ void show_registers(struct pt_regs *regs)
+@@ -276,13 +276,15 @@ void show_registers(struct pt_regs *regs
@@ -2495 +2447 @@
-@@ -290,11 +292,12 @@ void show_registers(struct pt_regs *regs)
+@@ -290,11 +292,12 @@ void show_registers(struct pt_regs *regs
@@ -2509 +2461 @@
-@@ -306,9 +309,11 @@ static void handle_BUG(struct pt_regs *regs)
+@@ -306,9 +309,11 @@ static void handle_BUG(struct pt_regs *r
@@ -2522 +2474 @@
-@@ -325,10 +330,12 @@ static void handle_BUG(struct pt_regs *regs)
+@@ -325,10 +330,12 @@ static void handle_BUG(struct pt_regs *r
@@ -2535 +2487 @@
-@@ -430,7 +437,7 @@ void die(const char * str, struct pt_regs * regs, long err)
+@@ -430,7 +437,7 @@ void die(const char * str, struct pt_reg
@@ -2544 +2496 @@
-@@ -448,7 +455,7 @@ static void __kprobes do_trap(int trapnr, int signr, char *str, int vm86,
+@@ -448,7 +455,7 @@ static void __kprobes do_trap(int trapnr
@@ -2553 +2505 @@
-@@ -536,7 +543,7 @@ fastcall void __kprobes do_general_protection(struct pt_regs * regs,
+@@ -536,7 +543,7 @@ fastcall void __kprobes do_general_prote
@@ -2562 +2514 @@
-@@ -572,9 +579,25 @@ fastcall void __kprobes do_general_protection(struct pt_regs * regs,
+@@ -572,9 +579,25 @@ fastcall void __kprobes do_general_prote
@@ -2603 +2555 @@
-@@ -663,7 +693,7 @@ void die_nmi (struct pt_regs *regs, const char *msg)
+@@ -663,7 +693,7 @@ void die_nmi (struct pt_regs *regs, cons
@@ -2612 +2564 @@
-@@ -816,7 +846,7 @@ fastcall void __kprobes do_debug(struct pt_regs * regs, long error_code)
+@@ -816,7 +846,7 @@ fastcall void __kprobes do_debug(struct 
@@ -2641,5 +2593,4 @@
-diff --git a/arch/i386/kernel/vm86.c b/arch/i386/kernel/vm86.c
-index 00e0118e717c3568a960021be276e9c4f7e37835..aa3ad38664df2548ea31090228c7bbcce60aca7b 100644
---- a/arch/i386/kernel/vm86.c
-+++ b/arch/i386/kernel/vm86.c
-@@ -123,7 +123,7 @@ struct pt_regs * fastcall save_v86_state(struct kernel_vm86_regs * regs)
+diff -urNp linux-2.6.17.4/arch/i386/kernel/vm86.c linux-2.6.17.4/arch/i386/kernel/vm86.c
+--- linux-2.6.17.4/arch/i386/kernel/vm86.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/vm86.c	2006-07-01 14:35:29.000000000 -0400
+@@ -123,7 +123,7 @@ struct pt_regs * fastcall save_v86_state
@@ -2654 +2605 @@
-@@ -297,7 +297,7 @@ static void do_sys_vm86(struct kernel_vm86_struct *info, struct task_struct *tsk
+@@ -297,7 +297,7 @@ static void do_sys_vm86(struct kernel_vm
@@ -2663,4 +2614,3 @@
-diff --git a/arch/i386/kernel/vmlinux.lds.S b/arch/i386/kernel/vmlinux.lds.S
-index 8831303a473f607c02c2c6c1a4343f66ef7e2eb5..ce2fa2d8b72c200d3fdcab98d28127dc6a990e2c 100644
---- a/arch/i386/kernel/vmlinux.lds.S
-+++ b/arch/i386/kernel/vmlinux.lds.S
+diff -urNp linux-2.6.17.4/arch/i386/kernel/vmlinux.lds.S linux-2.6.17.4/arch/i386/kernel/vmlinux.lds.S
+--- linux-2.6.17.4/arch/i386/kernel/vmlinux.lds.S	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/kernel/vmlinux.lds.S	2006-07-01 14:35:29.000000000 -0400
@@ -2702,2 +2652 @@
-+  phys_startup_32 = startup_32 - LOAD_OFFSET + __KERNEL_TEXT_OFFSET;
- 
+-
@@ -2712 +2661,2 @@
--
++  phys_startup_32 = startup_32 - LOAD_OFFSET + __KERNEL_TEXT_OFFSET;
+ 
@@ -2886,4 +2836,3 @@
-diff --git a/arch/i386/lib/checksum.S b/arch/i386/lib/checksum.S
-index 94c7867ddc33035e6fc39dbd6f0cf351daf712b8..f77e22ffa14b515bae6b00ea94309f721a751585 100644
---- a/arch/i386/lib/checksum.S
-+++ b/arch/i386/lib/checksum.S
+diff -urNp linux-2.6.17.4/arch/i386/lib/checksum.S linux-2.6.17.4/arch/i386/lib/checksum.S
+--- linux-2.6.17.4/arch/i386/lib/checksum.S	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/lib/checksum.S	2006-07-01 22:52:58.000000000 -0400
@@ -2900 +2849 @@
-@@ -280,24 +281,30 @@ unsigned int csum_partial_copy_generic (const char *src, char *dst,
+@@ -280,24 +281,30 @@ unsigned int csum_partial_copy_generic (
@@ -3133,4 +3082,3 @@
-diff --git a/arch/i386/lib/getuser.S b/arch/i386/lib/getuser.S
-index 62d7f178a326a1d279f7a4e5620c47af907b70de..b353c53a1928b7c9c04b1913537bdc3a4997c047 100644
---- a/arch/i386/lib/getuser.S
-+++ b/arch/i386/lib/getuser.S
+diff -urNp linux-2.6.17.4/arch/i386/lib/getuser.S linux-2.6.17.4/arch/i386/lib/getuser.S
+--- linux-2.6.17.4/arch/i386/lib/getuser.S	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/lib/getuser.S	2006-07-01 14:35:29.000000000 -0400
@@ -3188,5 +3136,4 @@
-diff --git a/arch/i386/lib/mmx.c b/arch/i386/lib/mmx.c
-index 2afda94dffd340b4097b3819b7770c1bdfb263e5..13676e1b5c01417230b68d6ad66277238d03df71 100644
---- a/arch/i386/lib/mmx.c
-+++ b/arch/i386/lib/mmx.c
-@@ -48,14 +48,30 @@ void *_mmx_memcpy(void *to, const void *from, size_t len)
+diff -urNp linux-2.6.17.4/arch/i386/lib/mmx.c linux-2.6.17.4/arch/i386/lib/mmx.c
+--- linux-2.6.17.4/arch/i386/lib/mmx.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/lib/mmx.c	2006-07-01 14:35:29.000000000 -0400
+@@ -48,14 +48,30 @@ void *_mmx_memcpy(void *to, const void *
@@ -3225 +3172 @@
-@@ -79,14 +95,30 @@ void *_mmx_memcpy(void *to, const void *from, size_t len)
+@@ -79,14 +95,30 @@ void *_mmx_memcpy(void *to, const void *
@@ -3258 +3205 @@
-@@ -179,14 +211,30 @@ static void fast_copy_page(void *to, void *from)
+@@ -179,14 +211,30 @@ static void fast_copy_page(void *to, voi
@@ -3291 +3238 @@
-@@ -209,14 +257,30 @@ static void fast_copy_page(void *to, void *from)
+@@ -209,14 +257,30 @@ static void fast_copy_page(void *to, voi
@@ -3324 +3271 @@
-@@ -309,14 +373,30 @@ static void fast_copy_page(void *to, void *from)
+@@ -309,14 +373,30 @@ static void fast_copy_page(void *to, voi
@@ -3357 +3304 @@
-@@ -339,14 +419,30 @@ static void fast_copy_page(void *to, void *from)
+@@ -339,14 +419,30 @@ static void fast_copy_page(void *to, voi
@@ -3390,4 +3337,3 @@
-diff --git a/arch/i386/lib/putuser.S b/arch/i386/lib/putuser.S
-index a32d9f570f48b0baa582afe43f9b927b97c87c55..ae4818e2503ebd497f7c1116ee7bc1149b05946b 100644
---- a/arch/i386/lib/putuser.S
-+++ b/arch/i386/lib/putuser.S
+diff -urNp linux-2.6.17.4/arch/i386/lib/putuser.S linux-2.6.17.4/arch/i386/lib/putuser.S
+--- linux-2.6.17.4/arch/i386/lib/putuser.S	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/lib/putuser.S	2006-07-01 14:35:29.000000000 -0400
@@ -3457,4 +3403,3 @@
-diff --git a/arch/i386/lib/usercopy.c b/arch/i386/lib/usercopy.c
-index 4cf981d70f45b621acbce1df4bf7097d27b6d85d..a992754cb8c7350bf4c561bb931fe63bcf01edc7 100644
---- a/arch/i386/lib/usercopy.c
-+++ b/arch/i386/lib/usercopy.c
+diff -urNp linux-2.6.17.4/arch/i386/lib/usercopy.c linux-2.6.17.4/arch/i386/lib/usercopy.c
+--- linux-2.6.17.4/arch/i386/lib/usercopy.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/lib/usercopy.c	2006-07-01 14:35:29.000000000 -0400
@@ -3512 +3457 @@
-@@ -198,14 +206,17 @@ long strnlen_user(const char __user *s, long n)
+@@ -198,14 +206,17 @@ long strnlen_user(const char __user *s, 
@@ -3531 +3476 @@
-@@ -217,7 +228,7 @@ long strnlen_user(const char __user *s, long n)
+@@ -217,7 +228,7 @@ long strnlen_user(const char __user *s, 
@@ -3540 +3485 @@
-@@ -229,6 +240,7 @@ __copy_user_intel(void __user *to, const void *from, unsigned long size)
+@@ -229,6 +240,7 @@ __copy_user_intel(void __user *to, const
@@ -3548 +3493 @@
-@@ -237,36 +249,36 @@ __copy_user_intel(void __user *to, const void *from, unsigned long size)
+@@ -237,36 +249,36 @@ __copy_user_intel(void __user *to, const
@@ -3601 +3546 @@
-@@ -280,6 +292,8 @@ __copy_user_intel(void __user *to, const void *from, unsigned long size)
+@@ -280,6 +292,8 @@ __copy_user_intel(void __user *to, const
@@ -3610 +3555 @@
-@@ -326,7 +340,7 @@ __copy_user_intel(void __user *to, const void *from, unsigned long size)
+@@ -326,7 +340,7 @@ __copy_user_intel(void __user *to, const
@@ -3619 +3564 @@
-@@ -336,6 +350,7 @@ __copy_user_zeroing_intel(void *to, const void __user *from, unsigned long size)
+@@ -336,6 +350,7 @@ __copy_user_zeroing_intel(void *to, cons
@@ -3627 +3572 @@
-@@ -344,36 +359,36 @@ __copy_user_zeroing_intel(void *to, const void __user *from, unsigned long size)
+@@ -344,36 +359,36 @@ __copy_user_zeroing_intel(void *to, cons
@@ -3680 +3625 @@
-@@ -387,6 +402,8 @@ __copy_user_zeroing_intel(void *to, const void __user *from, unsigned long size)
+@@ -387,6 +402,8 @@ __copy_user_zeroing_intel(void *to, cons
@@ -3689 +3634 @@
-@@ -421,7 +438,7 @@ __copy_user_zeroing_intel(void *to, const void __user *from, unsigned long size)
+@@ -421,7 +438,7 @@ __copy_user_zeroing_intel(void *to, cons
@@ -3698 +3643 @@
-@@ -441,6 +458,7 @@ __copy_user_intel(void __user *to, const void *from, unsigned long size);
+@@ -441,6 +458,7 @@ __copy_user_intel(void __user *to, const
@@ -3750,5 +3695,4 @@
-diff --git a/arch/i386/mach-voyager/voyager_smp.c b/arch/i386/mach-voyager/voyager_smp.c
-index 70e560a1b79ad1c457d0ac9777d3931d2c8ba87a..3a815722dbdd107be247c496a25c0bba5ad82e8b 100644
---- a/arch/i386/mach-voyager/voyager_smp.c
-+++ b/arch/i386/mach-voyager/voyager_smp.c
-@@ -1295,7 +1295,7 @@ smp_local_timer_interrupt(struct pt_regs * regs)
+diff -urNp linux-2.6.17.4/arch/i386/mach-voyager/voyager_smp.c linux-2.6.17.4/arch/i386/mach-voyager/voyager_smp.c
+--- linux-2.6.17.4/arch/i386/mach-voyager/voyager_smp.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/mach-voyager/voyager_smp.c	2006-07-01 14:35:29.000000000 -0400
+@@ -1295,7 +1295,7 @@ smp_local_timer_interrupt(struct pt_regs
@@ -3763,4 +3707,3 @@
-diff --git a/arch/i386/mm/boot_ioremap.c b/arch/i386/mm/boot_ioremap.c
-index 523b30634e0a87c76a32ca57f0977593b3364108..a521c5d38e50b13a113c7840d60df4ccbf4da6d5 100644
---- a/arch/i386/mm/boot_ioremap.c
-+++ b/arch/i386/mm/boot_ioremap.c
+diff -urNp linux-2.6.17.4/arch/i386/mm/boot_ioremap.c linux-2.6.17.4/arch/i386/mm/boot_ioremap.c
+--- linux-2.6.17.4/arch/i386/mm/boot_ioremap.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/mm/boot_ioremap.c	2006-07-01 14:35:29.000000000 -0400
@@ -3835,5 +3778,4 @@
-diff --git a/arch/i386/mm/extable.c b/arch/i386/mm/extable.c
-index f706449319c4577e5d944561b295d199449bcc02..fa1f3305e66ece70ee8f4ff195f09eb03e6f768d 100644
---- a/arch/i386/mm/extable.c
-+++ b/arch/i386/mm/extable.c
-@@ -12,7 +12,7 @@ int fixup_exception(struct pt_regs *regs)
+diff -urNp linux-2.6.17.4/arch/i386/mm/extable.c linux-2.6.17.4/arch/i386/mm/extable.c
+--- linux-2.6.17.4/arch/i386/mm/extable.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/mm/extable.c	2006-07-01 14:35:29.000000000 -0400
+@@ -12,7 +12,7 @@ int fixup_exception(struct pt_regs *regs
@@ -3848,4 +3790,3 @@
-diff --git a/arch/i386/mm/fault.c b/arch/i386/mm/fault.c
-index 7f0fcf219a26e4cec52d2e5bbd729601c356d261..340b5a4a405d0446216e0c52fb57171e559a52aa 100644
---- a/arch/i386/mm/fault.c
-+++ b/arch/i386/mm/fault.c
+diff -urNp linux-2.6.17.4/arch/i386/mm/fault.c linux-2.6.17.4/arch/i386/mm/fault.c
+--- linux-2.6.17.4/arch/i386/mm/fault.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/mm/fault.c	2006-07-01 16:32:22.000000000 -0400
@@ -3862 +3803 @@
-@@ -82,11 +85,13 @@ static inline unsigned long get_segment_eip(struct pt_regs *regs,
+@@ -82,11 +85,13 @@ static inline unsigned long get_segment_
@@ -3878 +3819 @@
-@@ -214,6 +219,30 @@ static noinline void force_sig_info_fault(int si_signo, int si_code,
+@@ -214,6 +219,30 @@ static noinline void force_sig_info_faul
@@ -3909 +3850 @@
-@@ -295,13 +324,20 @@ fastcall void __kprobes do_page_fault(struct pt_regs *regs,
+@@ -295,13 +324,20 @@ fastcall void __kprobes do_page_fault(st
@@ -3931 +3872 @@
-@@ -340,14 +376,12 @@ fastcall void __kprobes do_page_fault(struct pt_regs *regs,
+@@ -340,14 +376,12 @@ fastcall void __kprobes do_page_fault(st
@@ -3947 +3888 @@
-@@ -367,10 +401,101 @@ fastcall void __kprobes do_page_fault(struct pt_regs *regs,
+@@ -367,10 +401,101 @@ fastcall void __kprobes do_page_fault(st
@@ -4267,5 +4208,4 @@
-diff --git a/arch/i386/mm/hugetlbpage.c b/arch/i386/mm/hugetlbpage.c
-index a7d8915854116264048f62c84d63dc495fc212b7..aa9a54e29ad0c555e909d6e1ddd09c2d72f32a02 100644
---- a/arch/i386/mm/hugetlbpage.c
-+++ b/arch/i386/mm/hugetlbpage.c
-@@ -121,7 +121,12 @@ static unsigned long hugetlb_get_unmapped_area_bottomup(struct file *file,
+diff -urNp linux-2.6.17.4/arch/i386/mm/hugetlbpage.c linux-2.6.17.4/arch/i386/mm/hugetlbpage.c
+--- linux-2.6.17.4/arch/i386/mm/hugetlbpage.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/mm/hugetlbpage.c	2006-07-01 14:35:29.000000000 -0400
+@@ -121,7 +121,12 @@ static unsigned long hugetlb_get_unmappe
@@ -4294 +4234 @@
-@@ -163,9 +168,8 @@ static unsigned long hugetlb_get_unmapped_area_topdown(struct file *file,
+@@ -163,9 +168,8 @@ static unsigned long hugetlb_get_unmappe
@@ -4305 +4245 @@
-@@ -175,7 +179,7 @@ static unsigned long hugetlb_get_unmapped_area_topdown(struct file *file,
+@@ -175,7 +179,7 @@ static unsigned long hugetlb_get_unmappe
@@ -4331 +4271 @@
-@@ -252,16 +246,23 @@ hugetlb_get_unmapped_area(struct file *file, unsigned long addr,
+@@ -252,16 +246,23 @@ hugetlb_get_unmapped_area(struct file *f
@@ -4357,4 +4297,3 @@
-diff --git a/arch/i386/mm/init.c b/arch/i386/mm/init.c
-index 3df1371d4520bb39a8346f6a26326dbce9f589ec..5677c3601176f9539727b024eb2067cf08fc3512 100644
---- a/arch/i386/mm/init.c
-+++ b/arch/i386/mm/init.c
+diff -urNp linux-2.6.17.4/arch/i386/mm/init.c linux-2.6.17.4/arch/i386/mm/init.c
+--- linux-2.6.17.4/arch/i386/mm/init.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/mm/init.c	2006-07-01 14:35:29.000000000 -0400
@@ -4369 +4308 @@
-@@ -50,30 +51,6 @@ unsigned long highstart_pfn, highend_pfn;
+@@ -50,30 +51,6 @@ unsigned long highstart_pfn, highend_pfn
@@ -4400 +4339 @@
-@@ -81,7 +58,11 @@ static pte_t * __init one_page_table_init(pmd_t *pmd)
+@@ -81,7 +58,11 @@ static pte_t * __init one_page_table_ini
@@ -4412 +4351 @@
-@@ -116,8 +97,6 @@ static void __init page_table_range_init (unsigned long start, unsigned long end
+@@ -116,8 +97,6 @@ static void __init page_table_range_init
@@ -4421 +4360 @@
-@@ -130,11 +109,22 @@ static void __init page_table_range_init (unsigned long start, unsigned long end
+@@ -130,11 +109,22 @@ static void __init page_table_range_init
@@ -4448 +4387 @@
-@@ -146,26 +136,24 @@ static void __init kernel_physical_mapping_init(pgd_t *pgd_base)
+@@ -146,26 +136,24 @@ static void __init kernel_physical_mappi
@@ -4482 +4421 @@
-@@ -174,7 +162,7 @@ static void __init kernel_physical_mapping_init(pgd_t *pgd_base)
+@@ -174,7 +162,7 @@ static void __init kernel_physical_mappi
@@ -4531 +4470 @@
-@@ -437,11 +406,9 @@ u64 __supported_pte_mask __read_mostly = ~_PAGE_NX;
+@@ -437,11 +406,9 @@ u64 __supported_pte_mask __read_mostly =
@@ -4604 +4543 @@
-@@ -761,6 +712,37 @@ void free_init_pages(char *what, unsigned long begin, unsigned long end)
+@@ -761,6 +712,37 @@ void free_init_pages(char *what, unsigne
@@ -4642,4 +4581,3 @@
-diff --git a/arch/i386/mm/mmap.c b/arch/i386/mm/mmap.c
-index e4730a1a43dda76597ae14c3d4cb50a27815c00e..d9c36d45f088ffed94d917331a1d88e360b72421 100644
---- a/arch/i386/mm/mmap.c
-+++ b/arch/i386/mm/mmap.c
+diff -urNp linux-2.6.17.4/arch/i386/mm/mmap.c linux-2.6.17.4/arch/i386/mm/mmap.c
+--- linux-2.6.17.4/arch/i386/mm/mmap.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/mm/mmap.c	2006-07-01 14:35:29.000000000 -0400
@@ -4666 +4604 @@
-@@ -49,7 +55,7 @@ static inline unsigned long mmap_base(struct mm_struct *mm)
+@@ -49,7 +55,7 @@ static inline unsigned long mmap_base(st
@@ -4675 +4613 @@
-@@ -66,10 +72,22 @@ void arch_pick_mmap_layout(struct mm_struct *mm)
+@@ -66,10 +72,22 @@ void arch_pick_mmap_layout(struct mm_str
@@ -4698,4 +4636,3 @@
-diff --git a/arch/i386/mm/pageattr.c b/arch/i386/mm/pageattr.c
-index 92c3d9f0e7314f984fdd60a3ffbbfd3b01259edc..5495deb8c763f69a0a6a8933c1f9b63f8fe482ea 100644
---- a/arch/i386/mm/pageattr.c
-+++ b/arch/i386/mm/pageattr.c
+diff -urNp linux-2.6.17.4/arch/i386/mm/pageattr.c linux-2.6.17.4/arch/i386/mm/pageattr.c
+--- linux-2.6.17.4/arch/i386/mm/pageattr.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/mm/pageattr.c	2006-07-01 14:35:29.000000000 -0400
@@ -4710 +4647 @@
-@@ -84,7 +85,18 @@ static void set_pmd_pte(pte_t *kpte, unsigned long address, pte_t pte)
+@@ -84,7 +85,18 @@ static void set_pmd_pte(pte_t *kpte, uns
@@ -4729 +4666 @@
-@@ -111,7 +123,7 @@ static inline void revert_page(struct page *kpte_page, unsigned long address)
+@@ -111,7 +123,7 @@ static inline void revert_page(struct pa
@@ -4738 +4675 @@
-@@ -143,7 +155,7 @@ __change_page_attr(struct page *page, pgprot_t prot)
+@@ -143,7 +155,7 @@ __change_page_attr(struct page *page, pg
@@ -4747,5 +4684,4 @@
-diff --git a/arch/i386/oprofile/backtrace.c b/arch/i386/oprofile/backtrace.c
-index c049ce414f010359c0c312e08c6bd903b683797d..1e152a554d38e18d4d70c3c79af44f566e911bd4 100644
---- a/arch/i386/oprofile/backtrace.c
-+++ b/arch/i386/oprofile/backtrace.c
-@@ -116,7 +116,7 @@ x86_backtrace(struct pt_regs * const regs, unsigned int depth)
+diff -urNp linux-2.6.17.4/arch/i386/oprofile/backtrace.c linux-2.6.17.4/arch/i386/oprofile/backtrace.c
+--- linux-2.6.17.4/arch/i386/oprofile/backtrace.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/oprofile/backtrace.c	2006-07-01 14:35:29.000000000 -0400
+@@ -116,7 +116,7 @@ x86_backtrace(struct pt_regs * const reg
@@ -4760,4 +4696,3 @@
-diff --git a/arch/i386/power/cpu.c b/arch/i386/power/cpu.c
-index 79b2370c7facda90db18255983dc85b58523dab0..63e7b20030a7adfe1126bf8322239c57993d71cc 100644
---- a/arch/i386/power/cpu.c
-+++ b/arch/i386/power/cpu.c
+diff -urNp linux-2.6.17.4/arch/i386/power/cpu.c linux-2.6.17.4/arch/i386/power/cpu.c
+--- linux-2.6.17.4/arch/i386/power/cpu.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/i386/power/cpu.c	2006-07-01 14:35:29.000000000 -0400
@@ -4773,5 +4708,4 @@
-diff --git a/arch/ia64/ia32/binfmt_elf32.c b/arch/ia64/ia32/binfmt_elf32.c
-index da03c06744f1bf5206cfaee62662fb8b08144877..00a8d5b8d936e6029940c44ca61a9aefa4d2b5dd 100644
---- a/arch/ia64/ia32/binfmt_elf32.c
-+++ b/arch/ia64/ia32/binfmt_elf32.c
-@@ -46,6 +46,17 @@ randomize_stack_top(unsigned long stack_top);
+diff -urNp linux-2.6.17.4/arch/ia64/ia32/binfmt_elf32.c linux-2.6.17.4/arch/ia64/ia32/binfmt_elf32.c
+--- linux-2.6.17.4/arch/ia64/ia32/binfmt_elf32.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/ia64/ia32/binfmt_elf32.c	2006-07-01 14:35:29.000000000 -0400
+@@ -46,6 +46,17 @@ randomize_stack_top(unsigned long stack_
@@ -4795,4 +4729,3 @@
-diff --git a/arch/ia64/ia32/ia32priv.h b/arch/ia64/ia32/ia32priv.h
-index ccb98ed48e58d27467e53f8e38830cab3b52b7c4..5ee32d52bbad7f86075b070f79b88304234f10ca 100644
---- a/arch/ia64/ia32/ia32priv.h
-+++ b/arch/ia64/ia32/ia32priv.h
+diff -urNp linux-2.6.17.4/arch/ia64/ia32/ia32priv.h linux-2.6.17.4/arch/ia64/ia32/ia32priv.h
+--- linux-2.6.17.4/arch/ia64/ia32/ia32priv.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/ia64/ia32/ia32priv.h	2006-07-01 14:35:29.000000000 -0400
@@ -4815,4 +4748,3 @@
-diff --git a/arch/ia64/kernel/module.c b/arch/ia64/kernel/module.c
-index 3a30cfc9574fd499cc5fa839ee34731aecf25e04..d08be380556afa4d33e875ff207115b3cf284911 100644
---- a/arch/ia64/kernel/module.c
-+++ b/arch/ia64/kernel/module.c
+diff -urNp linux-2.6.17.4/arch/ia64/kernel/module.c linux-2.6.17.4/arch/ia64/kernel/module.c
+--- linux-2.6.17.4/arch/ia64/kernel/module.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/ia64/kernel/module.c	2006-07-01 14:35:29.000000000 -0400
@@ -4828 +4760 @@
-@@ -500,15 +500,39 @@ module_frob_arch_sections (Elf_Ehdr *ehdr, Elf_Shdr *sechdrs, char *secstrings,
+@@ -500,15 +500,39 @@ module_frob_arch_sections (Elf_Ehdr *ehd
@@ -4870 +4802 @@
-@@ -692,7 +716,14 @@ do_reloc (struct module *mod, uint8_t r_type, Elf64_Sym *sym, uint64_t addend,
+@@ -692,7 +716,14 @@ do_reloc (struct module *mod, uint8_t r_
@@ -4886 +4818 @@
-@@ -826,15 +857,15 @@ apply_relocate_add (Elf64_Shdr *sechdrs, const char *strtab, unsigned int symind
+@@ -826,15 +857,15 @@ apply_relocate_add (Elf64_Shdr *sechdrs,
@@ -4906,4 +4838,3 @@
-diff --git a/arch/ia64/kernel/ptrace.c b/arch/ia64/kernel/ptrace.c
-index e61e15e28d8b61cebff7eb2facfcf0692c6cf35f..7533482ffda95e0f2fc6ff82ca50d7c31c3cf7c5 100644
---- a/arch/ia64/kernel/ptrace.c
-+++ b/arch/ia64/kernel/ptrace.c
+diff -urNp linux-2.6.17.4/arch/ia64/kernel/ptrace.c linux-2.6.17.4/arch/ia64/kernel/ptrace.c
+--- linux-2.6.17.4/arch/ia64/kernel/ptrace.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/ia64/kernel/ptrace.c	2006-07-01 15:38:54.000000000 -0400
@@ -4918 +4849 @@
-@@ -1447,6 +1448,9 @@ sys_ptrace (long request, pid_t pid, unsigned long addr, unsigned long data)
+@@ -1447,6 +1448,9 @@ sys_ptrace (long request, pid_t pid, uns
@@ -4928,5 +4859,4 @@
-diff --git a/arch/ia64/kernel/sys_ia64.c b/arch/ia64/kernel/sys_ia64.c
-index c7b943f1019981d4c5c16b2a93d7e623b516f263..c507f977ee8ba943ad248d813009df5ef540649f 100644
---- a/arch/ia64/kernel/sys_ia64.c
-+++ b/arch/ia64/kernel/sys_ia64.c
-@@ -38,6 +38,13 @@ arch_get_unmapped_area (struct file *filp, unsigned long addr, unsigned long len
+diff -urNp linux-2.6.17.4/arch/ia64/kernel/sys_ia64.c linux-2.6.17.4/arch/ia64/kernel/sys_ia64.c
+--- linux-2.6.17.4/arch/ia64/kernel/sys_ia64.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/ia64/kernel/sys_ia64.c	2006-07-01 14:35:29.000000000 -0400
+@@ -38,6 +38,13 @@ arch_get_unmapped_area (struct file *fil
@@ -4946 +4876 @@
-@@ -56,9 +63,9 @@ arch_get_unmapped_area (struct file *filp, unsigned long addr, unsigned long len
+@@ -56,9 +63,9 @@ arch_get_unmapped_area (struct file *fil
@@ -4958,4 +4888,3 @@
-diff --git a/arch/ia64/mm/fault.c b/arch/ia64/mm/fault.c
-index d98ec49570b80f6e9d70a66d98e070ef19cc3dba..ab6fb9f8bd30cb89ac905d8eb6dc027d4c8c35ec 100644
---- a/arch/ia64/mm/fault.c
-+++ b/arch/ia64/mm/fault.c
+diff -urNp linux-2.6.17.4/arch/ia64/mm/fault.c linux-2.6.17.4/arch/ia64/mm/fault.c
+--- linux-2.6.17.4/arch/ia64/mm/fault.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/ia64/mm/fault.c	2006-07-01 14:35:29.000000000 -0400
@@ -4970 +4899 @@
-@@ -51,6 +52,23 @@ mapped_kernel_page_is_present (unsigned long address)
+@@ -51,6 +52,23 @@ mapped_kernel_page_is_present (unsigned 
@@ -4994 +4923 @@
-@@ -116,9 +134,23 @@ ia64_do_page_fault (unsigned long address, unsigned long isr, struct pt_regs *re
+@@ -116,9 +134,23 @@ ia64_do_page_fault (unsigned long addres
@@ -5019,4 +4948,3 @@
-diff --git a/arch/ia64/mm/init.c b/arch/ia64/mm/init.c
-index cafa8776a53dbbb41443d8b07a2d7e91bd7b4cea..7adbb4cc169c8a73d21316dcec820b8483afe7c9 100644
---- a/arch/ia64/mm/init.c
-+++ b/arch/ia64/mm/init.c
+diff -urNp linux-2.6.17.4/arch/ia64/mm/init.c linux-2.6.17.4/arch/ia64/mm/init.c
+--- linux-2.6.17.4/arch/ia64/mm/init.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/ia64/mm/init.c	2006-07-01 14:35:29.000000000 -0400
@@ -5033,5 +4961,4 @@
-diff --git a/arch/mips/kernel/binfmt_elfn32.c b/arch/mips/kernel/binfmt_elfn32.c
-index 4a9f1ecefaf2225f3a60a2f402cfc1328d6fb93a..288d674afae14923de95dc6ba7ad050c2e90fdda 100644
---- a/arch/mips/kernel/binfmt_elfn32.c
-+++ b/arch/mips/kernel/binfmt_elfn32.c
-@@ -50,6 +50,17 @@ typedef elf_fpreg_t elf_fpregset_t[ELF_NFPREG];
+diff -urNp linux-2.6.17.4/arch/mips/kernel/binfmt_elfn32.c linux-2.6.17.4/arch/mips/kernel/binfmt_elfn32.c
+--- linux-2.6.17.4/arch/mips/kernel/binfmt_elfn32.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/mips/kernel/binfmt_elfn32.c	2006-07-01 14:35:29.000000000 -0400
+@@ -50,6 +50,17 @@ typedef elf_fpreg_t elf_fpregset_t[ELF_N
@@ -5055,5 +4982,4 @@
-diff --git a/arch/mips/kernel/binfmt_elfo32.c b/arch/mips/kernel/binfmt_elfo32.c
-index e318137798958bc03bcf3069b92829d816923cff..801a37e1ef428e44d614639ad5fd157bbe394343 100644
---- a/arch/mips/kernel/binfmt_elfo32.c
-+++ b/arch/mips/kernel/binfmt_elfo32.c
-@@ -52,6 +52,17 @@ typedef elf_fpreg_t elf_fpregset_t[ELF_NFPREG];
+diff -urNp linux-2.6.17.4/arch/mips/kernel/binfmt_elfo32.c linux-2.6.17.4/arch/mips/kernel/binfmt_elfo32.c
+--- linux-2.6.17.4/arch/mips/kernel/binfmt_elfo32.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/mips/kernel/binfmt_elfo32.c	2006-07-01 14:35:29.000000000 -0400
+@@ -52,6 +52,17 @@ typedef elf_fpreg_t elf_fpregset_t[ELF_N
@@ -5077,5 +5003,4 @@
-diff --git a/arch/mips/kernel/syscall.c b/arch/mips/kernel/syscall.c
-index 5e8a18a8e2bda49d4ac59388d6df985eeafe4b1d..035e1b19dec401693db49aa4f2d8bb728a081003 100644
---- a/arch/mips/kernel/syscall.c
-+++ b/arch/mips/kernel/syscall.c
-@@ -89,6 +89,11 @@ unsigned long arch_get_unmapped_area(struct file *filp, unsigned long addr,
+diff -urNp linux-2.6.17.4/arch/mips/kernel/syscall.c linux-2.6.17.4/arch/mips/kernel/syscall.c
+--- linux-2.6.17.4/arch/mips/kernel/syscall.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/mips/kernel/syscall.c	2006-07-01 14:35:29.000000000 -0400
+@@ -89,6 +89,11 @@ unsigned long arch_get_unmapped_area(str
@@ -5093 +5018 @@
-@@ -99,7 +104,7 @@ unsigned long arch_get_unmapped_area(struct file *filp, unsigned long addr,
+@@ -99,7 +104,7 @@ unsigned long arch_get_unmapped_area(str
@@ -5102,4 +5027,3 @@
-diff --git a/arch/mips/mm/fault.c b/arch/mips/mm/fault.c
-index e3a617224868f04643719e68c9020d9941688efc..12ac13c7309a00434cc89618a10ecd8af1ff5220 100644
---- a/arch/mips/mm/fault.c
-+++ b/arch/mips/mm/fault.c
+diff -urNp linux-2.6.17.4/arch/mips/mm/fault.c linux-2.6.17.4/arch/mips/mm/fault.c
+--- linux-2.6.17.4/arch/mips/mm/fault.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/mips/mm/fault.c	2006-07-01 14:35:29.000000000 -0400
@@ -5130,4 +5054,3 @@
-diff --git a/arch/parisc/kernel/module.c b/arch/parisc/kernel/module.c
-index f27cfe4771b88c1099995e5964cb2541440da180..2a4d588ad515702ca9d0f85017d98805cbcc1219 100644
---- a/arch/parisc/kernel/module.c
-+++ b/arch/parisc/kernel/module.c
+diff -urNp linux-2.6.17.4/arch/parisc/kernel/module.c linux-2.6.17.4/arch/parisc/kernel/module.c
+--- linux-2.6.17.4/arch/parisc/kernel/module.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/parisc/kernel/module.c	2006-07-01 14:35:29.000000000 -0400
@@ -5177 +5100 @@
-@@ -289,21 +311,21 @@ int module_frob_arch_sections(CONST Elf_Ehdr *hdr,
+@@ -289,21 +311,21 @@ int module_frob_arch_sections(CONST Elf_
@@ -5184,4 +5107 @@
-+	me->core_size_rw = ALIGN(me->core_size_rw, 16);
-+	me->arch.got_offset = me->core_size_rw;
-+	me->core_size_rw += gots * sizeof(struct got_entry);
- 
+-
@@ -5191,4 +5111 @@
-+	me->core_size_rw = ALIGN(me->core_size_rw, 16);
-+	me->arch.fdesc_offset = me->core_size_rw;
-+	me->core_size_rw += fdescs * sizeof(Elf_Fdesc);
- 
+-
@@ -5198,4 +5115 @@
-+	me->core_size_rx = ALIGN(me->core_size_rx, 16);
-+	me->arch.stub_offset = me->core_size_rx;
-+	me->core_size_rx += stubs * sizeof(struct stub_entry);
- 
+-
@@ -5204,0 +5119,12 @@
++	me->core_size_rw = ALIGN(me->core_size_rw, 16);
++	me->arch.got_offset = me->core_size_rw;
++	me->core_size_rw += gots * sizeof(struct got_entry);
++
++	me->core_size_rw = ALIGN(me->core_size_rw, 16);
++	me->arch.fdesc_offset = me->core_size_rw;
++	me->core_size_rw += fdescs * sizeof(Elf_Fdesc);
++
++	me->core_size_rx = ALIGN(me->core_size_rx, 16);
++	me->arch.stub_offset = me->core_size_rx;
++	me->core_size_rx += stubs * sizeof(struct stub_entry);
++
@@ -5211 +5137 @@
-@@ -323,7 +345,7 @@ static Elf64_Word get_got(struct module *me, unsigned long value, long addend)
+@@ -323,7 +345,7 @@ static Elf64_Word get_got(struct module 
@@ -5220 +5146 @@
-@@ -341,7 +363,7 @@ static Elf64_Word get_got(struct module *me, unsigned long value, long addend)
+@@ -341,7 +363,7 @@ static Elf64_Word get_got(struct module 
@@ -5229 +5155 @@
-@@ -359,7 +381,7 @@ static Elf_Addr get_fdesc(struct module *me, unsigned long value)
+@@ -359,7 +381,7 @@ static Elf_Addr get_fdesc(struct module 
@@ -5238 +5164 @@
-@@ -373,12 +395,12 @@ static Elf_Addr get_stub(struct module *me, unsigned long value, long addend,
+@@ -373,12 +395,12 @@ static Elf_Addr get_stub(struct module *
@@ -5262,4 +5188,3 @@
-diff --git a/arch/parisc/kernel/ptrace.c b/arch/parisc/kernel/ptrace.c
-index 413292f1a4a36401fda3cc03129574b68e648f09..8e06dac83e72cea2063fb40b8e79e83320fe60a1 100644
---- a/arch/parisc/kernel/ptrace.c
-+++ b/arch/parisc/kernel/ptrace.c
+diff -urNp linux-2.6.17.4/arch/parisc/kernel/ptrace.c linux-2.6.17.4/arch/parisc/kernel/ptrace.c
+--- linux-2.6.17.4/arch/parisc/kernel/ptrace.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/parisc/kernel/ptrace.c	2006-07-01 15:38:54.000000000 -0400
@@ -5274,5 +5199,4 @@
-diff --git a/arch/parisc/kernel/sys_parisc.c b/arch/parisc/kernel/sys_parisc.c
-index 8b5df98e2b3158a229226cdb233e43349c950e4c..a9b69cdcaf06c5b503dcb503a1649b646b5f4295 100644
---- a/arch/parisc/kernel/sys_parisc.c
-+++ b/arch/parisc/kernel/sys_parisc.c
-@@ -105,7 +105,7 @@ unsigned long arch_get_unmapped_area(struct file *filp, unsigned long addr,
+diff -urNp linux-2.6.17.4/arch/parisc/kernel/sys_parisc.c linux-2.6.17.4/arch/parisc/kernel/sys_parisc.c
+--- linux-2.6.17.4/arch/parisc/kernel/sys_parisc.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/parisc/kernel/sys_parisc.c	2006-07-01 14:35:29.000000000 -0400
+@@ -105,7 +105,7 @@ unsigned long arch_get_unmapped_area(str
@@ -5287,5 +5211,4 @@
-diff --git a/arch/parisc/kernel/traps.c b/arch/parisc/kernel/traps.c
-index ff200608c851d5ef948908ff8b1b38f6fe2e56f2..d573a601dc2fe76ab573d96bdd38c302c861f7ae 100644
---- a/arch/parisc/kernel/traps.c
-+++ b/arch/parisc/kernel/traps.c
-@@ -711,9 +711,7 @@ void handle_interruption(int code, struct pt_regs *regs)
+diff -urNp linux-2.6.17.4/arch/parisc/kernel/traps.c linux-2.6.17.4/arch/parisc/kernel/traps.c
+--- linux-2.6.17.4/arch/parisc/kernel/traps.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/parisc/kernel/traps.c	2006-07-01 14:35:29.000000000 -0400
+@@ -711,9 +711,7 @@ void handle_interruption(int code, struc
@@ -5302,4 +5225,3 @@
-diff --git a/arch/parisc/mm/fault.c b/arch/parisc/mm/fault.c
-index 64785e46f93b777297f23d7ae5139fe7bfb280c3..6c59055c9c6edeff7c4ac3e92204a15c3c45137f 100644
---- a/arch/parisc/mm/fault.c
-+++ b/arch/parisc/mm/fault.c
+diff -urNp linux-2.6.17.4/arch/parisc/mm/fault.c linux-2.6.17.4/arch/parisc/mm/fault.c
+--- linux-2.6.17.4/arch/parisc/mm/fault.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/parisc/mm/fault.c	2006-07-01 14:35:29.000000000 -0400
@@ -5315 +5237 @@
-@@ -57,7 +59,7 @@ DEFINE_PER_CPU(struct exception_data, exception_data);
+@@ -57,7 +59,7 @@ DEFINE_PER_CPU(struct exception_data, ex
@@ -5324 +5246 @@
-@@ -143,6 +145,116 @@ parisc_acctyp(unsigned long code, unsigned int inst)
+@@ -143,6 +145,116 @@ parisc_acctyp(unsigned long code, unsign
@@ -5476,5 +5398,4 @@
-diff --git a/arch/powerpc/kernel/module_32.c b/arch/powerpc/kernel/module_32.c
-index 92f4e5f64f02c3e30c07fb34822a1e2a78318400..42cc8614cda6be9a9e32791b5ec35ece51d8d6c6 100644
---- a/arch/powerpc/kernel/module_32.c
-+++ b/arch/powerpc/kernel/module_32.c
-@@ -123,7 +123,7 @@ int module_frob_arch_sections(Elf32_Ehdr *hdr,
+diff -urNp linux-2.6.17.4/arch/powerpc/kernel/module_32.c linux-2.6.17.4/arch/powerpc/kernel/module_32.c
+--- linux-2.6.17.4/arch/powerpc/kernel/module_32.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/powerpc/kernel/module_32.c	2006-07-02 01:23:02.000000000 -0400
+@@ -123,7 +123,7 @@ int module_frob_arch_sections(Elf32_Ehdr
@@ -5489 +5410 @@
-@@ -164,11 +164,16 @@ static uint32_t do_plt_call(void *location,
+@@ -164,11 +164,16 @@ static uint32_t do_plt_call(void *locati
@@ -5509,4 +5430,3 @@
-diff --git a/arch/powerpc/mm/fault.c b/arch/powerpc/mm/fault.c
-index fdbba4206d59eb7a46b34707a5f421b7b9dfb8f3..2fd2357aad9f9708cc060320c2036740ba3c2663 100644
---- a/arch/powerpc/mm/fault.c
-+++ b/arch/powerpc/mm/fault.c
+diff -urNp linux-2.6.17.4/arch/powerpc/mm/fault.c linux-2.6.17.4/arch/powerpc/mm/fault.c
+--- linux-2.6.17.4/arch/powerpc/mm/fault.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/powerpc/mm/fault.c	2006-07-01 14:35:29.000000000 -0400
@@ -5521 +5441 @@
-@@ -103,6 +104,38 @@ static void do_dabr(struct pt_regs *regs, unsigned long address,
+@@ -103,6 +104,38 @@ static void do_dabr(struct pt_regs *regs
@@ -5580,5 +5500,4 @@
-diff --git a/arch/powerpc/mm/mmap.c b/arch/powerpc/mm/mmap.c
-index 972a8e884b9aecac1856c7c86340eeb11000ab09..ad84863b9d40af292223556f328d90618f687c6b 100644
---- a/arch/powerpc/mm/mmap.c
-+++ b/arch/powerpc/mm/mmap.c
-@@ -74,10 +74,22 @@ void arch_pick_mmap_layout(struct mm_struct *mm)
+diff -urNp linux-2.6.17.4/arch/powerpc/mm/mmap.c linux-2.6.17.4/arch/powerpc/mm/mmap.c
+--- linux-2.6.17.4/arch/powerpc/mm/mmap.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/powerpc/mm/mmap.c	2006-07-01 14:35:29.000000000 -0400
+@@ -74,10 +74,22 @@ void arch_pick_mmap_layout(struct mm_str
@@ -5607,4 +5526,3 @@
-diff --git a/arch/ppc/mm/fault.c b/arch/ppc/mm/fault.c
-index 8e08ca32531a878d4b450910ab437c4125cdf6dc..abe34da9cc977ec176eadbf75fcacc8c4e3805a4 100644
---- a/arch/ppc/mm/fault.c
-+++ b/arch/ppc/mm/fault.c
+diff -urNp linux-2.6.17.4/arch/ppc/mm/fault.c linux-2.6.17.4/arch/ppc/mm/fault.c
+--- linux-2.6.17.4/arch/ppc/mm/fault.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/ppc/mm/fault.c	2006-07-01 14:35:29.000000000 -0400
@@ -5623 +5541 @@
-@@ -49,6 +54,364 @@ unsigned long pte_misses;	/* updated by do_page_fault() */
+@@ -49,6 +54,364 @@ unsigned long pte_misses;	/* updated by 
@@ -5988 +5906 @@
-@@ -109,7 +472,7 @@ int do_page_fault(struct pt_regs *regs, unsigned long address,
+@@ -109,7 +472,7 @@ int do_page_fault(struct pt_regs *regs, 
@@ -6057,5 +5975,4 @@
-diff --git a/arch/s390/kernel/module.c b/arch/s390/kernel/module.c
-index c271cdab58e2051728c154882ee94881a3dd53fb..3609cce1a5a64b1915278058f35103c7bb85ab73 100644
---- a/arch/s390/kernel/module.c
-+++ b/arch/s390/kernel/module.c
-@@ -164,11 +164,11 @@ module_frob_arch_sections(Elf_Ehdr *hdr, Elf_Shdr *sechdrs,
+diff -urNp linux-2.6.17.4/arch/s390/kernel/module.c linux-2.6.17.4/arch/s390/kernel/module.c
+--- linux-2.6.17.4/arch/s390/kernel/module.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/s390/kernel/module.c	2006-07-01 14:35:29.000000000 -0400
+@@ -164,11 +164,11 @@ module_frob_arch_sections(Elf_Ehdr *hdr,
@@ -6078 +5995 @@
-@@ -254,7 +254,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base, Elf_Sym *symtab,
+@@ -254,7 +254,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base
@@ -6087 +6004 @@
-@@ -278,7 +278,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base, Elf_Sym *symtab,
+@@ -278,7 +278,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base
@@ -6096 +6013 @@
-@@ -292,7 +292,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base, Elf_Sym *symtab,
+@@ -292,7 +292,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base
@@ -6105 +6022 @@
-@@ -314,7 +314,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base, Elf_Sym *symtab,
+@@ -314,7 +314,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base
@@ -6114 +6031 @@
-@@ -334,7 +334,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base, Elf_Sym *symtab,
+@@ -334,7 +334,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base
@@ -6123 +6040 @@
-@@ -344,7 +344,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base, Elf_Sym *symtab,
+@@ -344,7 +344,7 @@ apply_rela(Elf_Rela *rela, Elf_Addr base
@@ -6132,17 +6049,3 @@
-diff --git a/arch/sparc/Makefile b/arch/sparc/Makefile
-index 4cdbb2d59ed0a3e04c5e1d10a5bcf308c8ee7f22..4b0dfdb64d354fae774601c3c1d410ab1ddb9888 100644
---- a/arch/sparc/Makefile
-+++ b/arch/sparc/Makefile
-@@ -34,7 +34,7 @@ libs-y += arch/sparc/prom/ arch/sparc/lib/
- # Renaming is done to avoid confusing pattern matching rules in 2.5.45 (multy-)
- INIT_Y		:= $(patsubst %/, %/built-in.o, $(init-y))
- CORE_Y		:= $(core-y)
--CORE_Y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/
-+CORE_Y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/ grsecurity/
- CORE_Y		:= $(patsubst %/, %/built-in.o, $(CORE_Y))
- DRIVERS_Y	:= $(patsubst %/, %/built-in.o, $(drivers-y))
- NET_Y		:= $(patsubst %/, %/built-in.o, $(net-y))
-diff --git a/arch/sparc/kernel/ptrace.c b/arch/sparc/kernel/ptrace.c
-index 1baf13ed5c3a6b6e7186c022e69108ec6d490c46..0dcc976f44ac91caaf425d8dcaff2ae3a4930eca 100644
---- a/arch/sparc/kernel/ptrace.c
-+++ b/arch/sparc/kernel/ptrace.c
+diff -urNp linux-2.6.17.4/arch/sparc/kernel/ptrace.c linux-2.6.17.4/arch/sparc/kernel/ptrace.c
+--- linux-2.6.17.4/arch/sparc/kernel/ptrace.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/sparc/kernel/ptrace.c	2006-07-01 15:38:54.000000000 -0400
@@ -6157 +6060 @@
-@@ -300,6 +301,11 @@ asmlinkage void do_ptrace(struct pt_regs *regs)
+@@ -300,6 +301,11 @@ asmlinkage void do_ptrace(struct pt_regs
@@ -6169,5 +6072,4 @@
-diff --git a/arch/sparc/kernel/sys_sparc.c b/arch/sparc/kernel/sys_sparc.c
-index 0cdfc9d294b45a777b20ec249ed79094862b650f..588b5dd81b14505247ba10702dac5fe90dbdfa03 100644
---- a/arch/sparc/kernel/sys_sparc.c
-+++ b/arch/sparc/kernel/sys_sparc.c
-@@ -56,7 +56,7 @@ unsigned long arch_get_unmapped_area(struct file *filp, unsigned long addr, unsi
+diff -urNp linux-2.6.17.4/arch/sparc/kernel/sys_sparc.c linux-2.6.17.4/arch/sparc/kernel/sys_sparc.c
+--- linux-2.6.17.4/arch/sparc/kernel/sys_sparc.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/sparc/kernel/sys_sparc.c	2006-07-01 14:35:29.000000000 -0400
+@@ -56,7 +56,7 @@ unsigned long arch_get_unmapped_area(str
@@ -6182,4 +6084,15 @@
-diff --git a/arch/sparc/mm/fault.c b/arch/sparc/mm/fault.c
-index 9eeed3347df3297f4790ff8a7f39b73fa4a38f6e..2c85713a198d9352aa0b5ff3f210095dfcafb3b8 100644
---- a/arch/sparc/mm/fault.c
-+++ b/arch/sparc/mm/fault.c
+diff -urNp linux-2.6.17.4/arch/sparc/Makefile linux-2.6.17.4/arch/sparc/Makefile
+--- linux-2.6.17.4/arch/sparc/Makefile	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/sparc/Makefile	2006-07-01 15:38:54.000000000 -0400
+@@ -34,7 +34,7 @@ libs-y += arch/sparc/prom/ arch/sparc/li
+ # Renaming is done to avoid confusing pattern matching rules in 2.5.45 (multy-)
+ INIT_Y		:= $(patsubst %/, %/built-in.o, $(init-y))
+ CORE_Y		:= $(core-y)
+-CORE_Y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/
++CORE_Y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/ grsecurity/
+ CORE_Y		:= $(patsubst %/, %/built-in.o, $(CORE_Y))
+ DRIVERS_Y	:= $(patsubst %/, %/built-in.o, $(drivers-y))
+ NET_Y		:= $(patsubst %/, %/built-in.o, $(net-y))
+diff -urNp linux-2.6.17.4/arch/sparc/mm/fault.c linux-2.6.17.4/arch/sparc/mm/fault.c
+--- linux-2.6.17.4/arch/sparc/mm/fault.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/sparc/mm/fault.c	2006-07-01 14:35:29.000000000 -0400
@@ -6197 +6110 @@
-@@ -217,6 +221,252 @@ static unsigned long compute_si_addr(struct pt_regs *regs, int text_fault)
+@@ -217,6 +221,252 @@ static unsigned long compute_si_addr(str
@@ -6475,4 +6388,3 @@
-diff --git a/arch/sparc/mm/init.c b/arch/sparc/mm/init.c
-index 898669732466a2a51994efb09557ff75a546918d..53f684c4270c51f45b3433eff20c55eb51855172 100644
---- a/arch/sparc/mm/init.c
-+++ b/arch/sparc/mm/init.c
+diff -urNp linux-2.6.17.4/arch/sparc/mm/init.c linux-2.6.17.4/arch/sparc/mm/init.c
+--- linux-2.6.17.4/arch/sparc/mm/init.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/sparc/mm/init.c	2006-07-01 14:35:29.000000000 -0400
@@ -6503,4 +6415,3 @@
-diff --git a/arch/sparc/mm/srmmu.c b/arch/sparc/mm/srmmu.c
-index 58c65cc8d0d34545b0c587a19ffcff9ed04ba80d..8f6be31175c6073fc104e89d0236191aa8ea6f0f 100644
---- a/arch/sparc/mm/srmmu.c
-+++ b/arch/sparc/mm/srmmu.c
+diff -urNp linux-2.6.17.4/arch/sparc/mm/srmmu.c linux-2.6.17.4/arch/sparc/mm/srmmu.c
+--- linux-2.6.17.4/arch/sparc/mm/srmmu.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/sparc/mm/srmmu.c	2006-07-01 14:35:29.000000000 -0400
@@ -6521,4 +6432,3 @@
-diff --git a/arch/sparc64/kernel/ptrace.c b/arch/sparc64/kernel/ptrace.c
-index d31975e6d6f6bd80aa4b8adee52c5d6a36181239..3e68a18863392a645ca1cc32fa795097608600fe 100644
---- a/arch/sparc64/kernel/ptrace.c
-+++ b/arch/sparc64/kernel/ptrace.c
+diff -urNp linux-2.6.17.4/arch/sparc64/kernel/ptrace.c linux-2.6.17.4/arch/sparc64/kernel/ptrace.c
+--- linux-2.6.17.4/arch/sparc64/kernel/ptrace.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/sparc64/kernel/ptrace.c	2006-07-01 15:38:54.000000000 -0400
@@ -6533 +6443 @@
-@@ -213,6 +214,11 @@ asmlinkage void do_ptrace(struct pt_regs *regs)
+@@ -213,6 +214,11 @@ asmlinkage void do_ptrace(struct pt_regs
@@ -6545,5 +6455,4 @@
-diff --git a/arch/sparc64/kernel/sys_sparc.c b/arch/sparc64/kernel/sys_sparc.c
-index 7a869138c37fac9cf34f07418764b5a3c21d0463..035c47b66eda7b50e482cd6c57cd551fabe32d02 100644
---- a/arch/sparc64/kernel/sys_sparc.c
-+++ b/arch/sparc64/kernel/sys_sparc.c
-@@ -140,6 +140,10 @@ unsigned long arch_get_unmapped_area(struct file *filp, unsigned long addr, unsi
+diff -urNp linux-2.6.17.4/arch/sparc64/kernel/sys_sparc.c linux-2.6.17.4/arch/sparc64/kernel/sys_sparc.c
+--- linux-2.6.17.4/arch/sparc64/kernel/sys_sparc.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/sparc64/kernel/sys_sparc.c	2006-07-01 14:35:29.000000000 -0400
+@@ -140,6 +140,10 @@ unsigned long arch_get_unmapped_area(str
@@ -6560 +6469 @@
-@@ -153,9 +157,9 @@ unsigned long arch_get_unmapped_area(struct file *filp, unsigned long addr, unsi
+@@ -153,9 +157,9 @@ unsigned long arch_get_unmapped_area(str
@@ -6583,4 +6492,3 @@
-diff --git a/arch/sparc64/mm/fault.c b/arch/sparc64/mm/fault.c
-index 6e002aacb961832113ba30d522d437460ee20612..4fd04527da93db5a5eee3a0cc38a27e11739476a 100644
---- a/arch/sparc64/mm/fault.c
-+++ b/arch/sparc64/mm/fault.c
+diff -urNp linux-2.6.17.4/arch/sparc64/mm/fault.c linux-2.6.17.4/arch/sparc64/mm/fault.c
+--- linux-2.6.17.4/arch/sparc64/mm/fault.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/sparc64/mm/fault.c	2006-07-01 14:35:29.000000000 -0400
@@ -6968 +6876 @@
-@@ -295,8 +662,10 @@ asmlinkage void __kprobes do_sparc64_fault(struct pt_regs *regs)
+@@ -295,8 +662,10 @@ asmlinkage void __kprobes do_sparc64_fau
@@ -6980 +6888 @@
-@@ -313,6 +682,29 @@ asmlinkage void __kprobes do_sparc64_fault(struct pt_regs *regs)
+@@ -313,6 +682,29 @@ asmlinkage void __kprobes do_sparc64_fau
@@ -7010,5 +6918,4 @@
-diff --git a/arch/v850/kernel/module.c b/arch/v850/kernel/module.c
-index 64aeb3e37c52716c1687eecbd46a509c2db27309..50cf7f13a56023b8bd364f20fdd729fe6f1d90fa 100644
---- a/arch/v850/kernel/module.c
-+++ b/arch/v850/kernel/module.c
-@@ -150,8 +150,8 @@ static uint32_t do_plt_call (void *location, Elf32_Addr val,
+diff -urNp linux-2.6.17.4/arch/v850/kernel/module.c linux-2.6.17.4/arch/v850/kernel/module.c
+--- linux-2.6.17.4/arch/v850/kernel/module.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/v850/kernel/module.c	2006-07-01 14:35:29.000000000 -0400
+@@ -150,8 +150,8 @@ static uint32_t do_plt_call (void *locat
@@ -7025,4 +6932,3 @@
-diff --git a/arch/x86_64/boot/compressed/head.S b/arch/x86_64/boot/compressed/head.S
-index 6f55565e4d4213cbfd295000bc88b70f742f8425..709e8c7d2caf7946e5ce18d2a8472bbb6a0aa8b8 100644
---- a/arch/x86_64/boot/compressed/head.S
-+++ b/arch/x86_64/boot/compressed/head.S
+diff -urNp linux-2.6.17.4/arch/x86_64/boot/compressed/head.S linux-2.6.17.4/arch/x86_64/boot/compressed/head.S
+--- linux-2.6.17.4/arch/x86_64/boot/compressed/head.S	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/x86_64/boot/compressed/head.S	2006-07-01 14:35:29.000000000 -0400
@@ -7043,4 +6949,3 @@
-diff --git a/arch/x86_64/ia32/ia32_binfmt.c b/arch/x86_64/ia32/ia32_binfmt.c
-index 926c4743d13b27220cd00494a99f3eb2d74a1ff1..627bc489d5b79bc71ecb71dedb71e5ac0df5bf8c 100644
---- a/arch/x86_64/ia32/ia32_binfmt.c
-+++ b/arch/x86_64/ia32/ia32_binfmt.c
+diff -urNp linux-2.6.17.4/arch/x86_64/ia32/ia32_binfmt.c linux-2.6.17.4/arch/x86_64/ia32/ia32_binfmt.c
+--- linux-2.6.17.4/arch/x86_64/ia32/ia32_binfmt.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/x86_64/ia32/ia32_binfmt.c	2006-07-01 14:35:29.000000000 -0400
@@ -7065,5 +6970,4 @@
-diff --git a/arch/x86_64/ia32/mmap32.c b/arch/x86_64/ia32/mmap32.c
-index 079f4132575cbc33ef1e1aa1bff9e0f7fb85af49..0e0957bef51ba3a65df3d0c1ea5ede9d9556bdc7 100644
---- a/arch/x86_64/ia32/mmap32.c
-+++ b/arch/x86_64/ia32/mmap32.c
-@@ -68,10 +68,22 @@ void ia32_pick_mmap_layout(struct mm_struct *mm)
+diff -urNp linux-2.6.17.4/arch/x86_64/ia32/mmap32.c linux-2.6.17.4/arch/x86_64/ia32/mmap32.c
+--- linux-2.6.17.4/arch/x86_64/ia32/mmap32.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/x86_64/ia32/mmap32.c	2006-07-01 14:35:29.000000000 -0400
+@@ -68,10 +68,22 @@ void ia32_pick_mmap_layout(struct mm_str
@@ -7092,5 +6996,4 @@
-diff --git a/arch/x86_64/kernel/process.c b/arch/x86_64/kernel/process.c
-index fb903e65e079a26034f76a30ef6f54b40613453d..d0bc0b04614f54ddc4442261f84a8f65f3184a44 100644
---- a/arch/x86_64/kernel/process.c
-+++ b/arch/x86_64/kernel/process.c
-@@ -830,9 +830,3 @@ int dump_task_regs(struct task_struct *tsk, elf_gregset_t *regs)
+diff -urNp linux-2.6.17.4/arch/x86_64/kernel/process.c linux-2.6.17.4/arch/x86_64/kernel/process.c
+--- linux-2.6.17.4/arch/x86_64/kernel/process.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/x86_64/kernel/process.c	2006-07-01 14:35:29.000000000 -0400
+@@ -830,9 +830,3 @@ int dump_task_regs(struct task_struct *t
@@ -7106,4 +7009,3 @@
-diff --git a/arch/x86_64/kernel/ptrace.c b/arch/x86_64/kernel/ptrace.c
-index 2d50024c9f308b8fb5f390fb46e88d33bc843d3d..65c3b8dceed1b4ec05d9d1d64f0967b5ee4ace53 100644
---- a/arch/x86_64/kernel/ptrace.c
-+++ b/arch/x86_64/kernel/ptrace.c
+diff -urNp linux-2.6.17.4/arch/x86_64/kernel/ptrace.c linux-2.6.17.4/arch/x86_64/kernel/ptrace.c
+--- linux-2.6.17.4/arch/x86_64/kernel/ptrace.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/x86_64/kernel/ptrace.c	2006-07-01 15:38:54.000000000 -0400
@@ -7118,5 +7020,4 @@
-diff --git a/arch/x86_64/kernel/setup64.c b/arch/x86_64/kernel/setup64.c
-index 8a691fa6d3938e0d6473e208d477995b6838055c..540f3155214f150d02543428c92e6fc0f3cd43e5 100644
---- a/arch/x86_64/kernel/setup64.c
-+++ b/arch/x86_64/kernel/setup64.c
-@@ -38,7 +38,6 @@ struct desc_ptr idt_descr = { 256 * 16 - 1, (unsigned long) idt_table };
+diff -urNp linux-2.6.17.4/arch/x86_64/kernel/setup64.c linux-2.6.17.4/arch/x86_64/kernel/setup64.c
+--- linux-2.6.17.4/arch/x86_64/kernel/setup64.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/x86_64/kernel/setup64.c	2006-07-01 14:35:29.000000000 -0400
+@@ -38,7 +38,6 @@ struct desc_ptr idt_descr = { 256 * 16 -
@@ -7157,4 +7058,3 @@
-diff --git a/arch/x86_64/kernel/sys_x86_64.c b/arch/x86_64/kernel/sys_x86_64.c
-index 6449ea8fe756475b7316bdaa51ddd16e3c2c6dd9..b8ebd6b6de4173fbaa9fc8532a8e732e0113d314 100644
---- a/arch/x86_64/kernel/sys_x86_64.c
-+++ b/arch/x86_64/kernel/sys_x86_64.c
+diff -urNp linux-2.6.17.4/arch/x86_64/kernel/sys_x86_64.c linux-2.6.17.4/arch/x86_64/kernel/sys_x86_64.c
+--- linux-2.6.17.4/arch/x86_64/kernel/sys_x86_64.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/x86_64/kernel/sys_x86_64.c	2006-07-01 14:35:29.000000000 -0400
@@ -7172 +7072 @@
-@@ -79,7 +79,7 @@ static void find_start_end(unsigned long flags, unsigned long *begin,
+@@ -79,7 +79,7 @@ static void find_start_end(unsigned long
@@ -7181 +7081 @@
-@@ -93,11 +93,15 @@ arch_get_unmapped_area(struct file *filp, unsigned long addr,
+@@ -93,11 +93,15 @@ arch_get_unmapped_area(struct file *filp
@@ -7198,4 +7098,3 @@
-diff --git a/arch/x86_64/mm/fault.c b/arch/x86_64/mm/fault.c
-index 55250593d8c949a86622315b8f288ba40c8e4444..5d7895be7cc5382662f39fac70e23477887e298c 100644
---- a/arch/x86_64/mm/fault.c
-+++ b/arch/x86_64/mm/fault.c
+diff -urNp linux-2.6.17.4/arch/x86_64/mm/fault.c linux-2.6.17.4/arch/x86_64/mm/fault.c
+--- linux-2.6.17.4/arch/x86_64/mm/fault.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/x86_64/mm/fault.c	2006-07-01 14:35:29.000000000 -0400
@@ -7210 +7109 @@
-@@ -294,6 +295,33 @@ static int vmalloc_fault(unsigned long address)
+@@ -294,6 +295,33 @@ static int vmalloc_fault(unsigned long a
@@ -7244 +7143 @@
-@@ -423,6 +451,8 @@ asmlinkage void __kprobes do_page_fault(struct pt_regs *regs,
+@@ -423,6 +451,8 @@ asmlinkage void __kprobes do_page_fault(
@@ -7269,5 +7168,4 @@
-diff --git a/arch/x86_64/mm/mmap.c b/arch/x86_64/mm/mmap.c
-index 43e9b99bdf25d6419afce6e81bab3c361e5f174d..268667a3219cf88e4c337484e4514fb866e24788 100644
---- a/arch/x86_64/mm/mmap.c
-+++ b/arch/x86_64/mm/mmap.c
-@@ -24,6 +24,12 @@ void arch_pick_mmap_layout(struct mm_struct *mm)
+diff -urNp linux-2.6.17.4/arch/x86_64/mm/mmap.c linux-2.6.17.4/arch/x86_64/mm/mmap.c
+--- linux-2.6.17.4/arch/x86_64/mm/mmap.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/arch/x86_64/mm/mmap.c	2006-07-01 14:35:29.000000000 -0400
+@@ -24,6 +24,12 @@ void arch_pick_mmap_layout(struct mm_str
@@ -7286,5 +7184,4 @@
-diff --git a/drivers/char/agp/frontend.c b/drivers/char/agp/frontend.c
-index ffcf15c30e90b023fb5ee960ddefd412856f6bae..9ad05369729e384cf020baeaee031de549857c1f 100644
---- a/drivers/char/agp/frontend.c
-+++ b/drivers/char/agp/frontend.c
-@@ -841,7 +841,7 @@ static int agpioc_reserve_wrap(struct agp_file_private *priv, void __user *arg)
+diff -urNp linux-2.6.17.4/drivers/char/agp/frontend.c linux-2.6.17.4/drivers/char/agp/frontend.c
+--- linux-2.6.17.4/drivers/char/agp/frontend.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/char/agp/frontend.c	2006-07-01 14:35:29.000000000 -0400
+@@ -841,7 +841,7 @@ static int agpioc_reserve_wrap(struct ag
@@ -7299,5 +7196,4 @@
-diff --git a/drivers/char/keyboard.c b/drivers/char/keyboard.c
-index 5755b7e5f1873eba30bacec7ce71c07fc49610da..a3459a79377a15ba6b22fb6b275c402213028858 100644
---- a/drivers/char/keyboard.c
-+++ b/drivers/char/keyboard.c
-@@ -618,6 +618,16 @@ static void k_spec(struct vc_data *vc, unsigned char value, char up_flag, struct
+diff -urNp linux-2.6.17.4/drivers/char/keyboard.c linux-2.6.17.4/drivers/char/keyboard.c
+--- linux-2.6.17.4/drivers/char/keyboard.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/char/keyboard.c	2006-07-01 15:38:54.000000000 -0400
+@@ -618,6 +618,16 @@ static void k_spec(struct vc_data *vc, u
@@ -7320,4 +7216,3 @@
-diff --git a/drivers/char/mem.c b/drivers/char/mem.c
-index 1fa9fa157c125652fea7cd314534992c4875a73b..a3ef9edf0d52b6ac44f0864a7ca3b0fc2815f80e 100644
---- a/drivers/char/mem.c
-+++ b/drivers/char/mem.c
+diff -urNp linux-2.6.17.4/drivers/char/mem.c linux-2.6.17.4/drivers/char/mem.c
+--- linux-2.6.17.4/drivers/char/mem.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/char/mem.c	2006-07-01 15:40:22.000000000 -0400
@@ -7343 +7238 @@
-@@ -175,6 +180,11 @@ static ssize_t write_mem(struct file * file, const char __user * buf,
+@@ -175,6 +180,11 @@ static ssize_t write_mem(struct file * f
@@ -7355 +7250 @@
-@@ -251,6 +261,11 @@ static int mmap_mem(struct file * file, struct vm_area_struct * vma)
+@@ -251,6 +261,11 @@ static int mmap_mem(struct file * file, 
@@ -7367 +7262 @@
-@@ -478,6 +493,11 @@ static ssize_t write_kmem(struct file * file, const char __user * buf,
+@@ -478,6 +493,11 @@ static ssize_t write_kmem(struct file * 
@@ -7379 +7274 @@
-@@ -618,7 +638,23 @@ static inline size_t read_zero_pagealigned(char __user * buf, size_t size)
+@@ -618,7 +638,23 @@ static inline size_t read_zero_pagealign
@@ -7404 +7299 @@
-@@ -767,6 +803,16 @@ static loff_t memory_lseek(struct file * file, loff_t offset, int orig)
+@@ -767,6 +803,16 @@ static loff_t memory_lseek(struct file *
@@ -7421 +7316 @@
-@@ -774,7 +820,6 @@ static int open_port(struct inode * inode, struct file * filp)
+@@ -774,7 +820,6 @@ static int open_port(struct inode * inod
@@ -7429 +7324 @@
-@@ -897,6 +942,11 @@ static int memory_open(struct inode * inode, struct file * filp)
+@@ -897,6 +942,11 @@ static int memory_open(struct inode * in
@@ -7451,4 +7346,3 @@
-diff --git a/drivers/char/random.c b/drivers/char/random.c
-index 58f3512c52e16f1b92de5307c9e482a1ccf5b91f..878f70d0c11840b03f76cf55008d1ee62385d51b 100644
---- a/drivers/char/random.c
-+++ b/drivers/char/random.c
+diff -urNp linux-2.6.17.4/drivers/char/random.c linux-2.6.17.4/drivers/char/random.c
+--- linux-2.6.17.4/drivers/char/random.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/char/random.c	2006-07-01 18:02:57.000000000 -0400
@@ -7487 +7381 @@
-@@ -1658,3 +1670,25 @@ randomize_range(unsigned long start, unsigned long end, unsigned long len)
+@@ -1658,3 +1670,25 @@ randomize_range(unsigned long start, uns
@@ -7513,5 +7407,4 @@
-diff --git a/drivers/char/vt_ioctl.c b/drivers/char/vt_ioctl.c
-index 24011e7c81ff72fa6bade2d7c889c8a0c2c48c5a..a37177778ef8663f10e7e1122355d232a0827226 100644
---- a/drivers/char/vt_ioctl.c
-+++ b/drivers/char/vt_ioctl.c
-@@ -96,6 +96,12 @@ do_kdsk_ioctl(int cmd, struct kbentry __user *user_kbe, int perm, struct kbd_str
+diff -urNp linux-2.6.17.4/drivers/char/vt_ioctl.c linux-2.6.17.4/drivers/char/vt_ioctl.c
+--- linux-2.6.17.4/drivers/char/vt_ioctl.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/char/vt_ioctl.c	2006-07-01 15:38:54.000000000 -0400
+@@ -96,6 +96,12 @@ do_kdsk_ioctl(int cmd, struct kbentry __
@@ -7530 +7423 @@
-@@ -236,6 +242,13 @@ do_kdgkb_ioctl(int cmd, struct kbsentry __user *user_kdgkb, int perm)
+@@ -236,6 +242,13 @@ do_kdgkb_ioctl(int cmd, struct kbsentry 
@@ -7544,5 +7437,4 @@
-diff --git a/drivers/ieee1394/hosts.c b/drivers/ieee1394/hosts.c
-index ba09741fc82607fc09269ac4930f09055c84aa9e..488b352a5cd0189457b5e5f9916f6ad8f490f697 100644
---- a/drivers/ieee1394/hosts.c
-+++ b/drivers/ieee1394/hosts.c
-@@ -75,6 +75,7 @@ static int dummy_isoctl(struct hpsb_iso *iso, enum isoctl_cmd command, unsigned
+diff -urNp linux-2.6.17.4/drivers/ieee1394/hosts.c linux-2.6.17.4/drivers/ieee1394/hosts.c
+--- linux-2.6.17.4/drivers/ieee1394/hosts.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/ieee1394/hosts.c	2006-07-01 14:35:29.000000000 -0400
+@@ -75,6 +75,7 @@ static int dummy_isoctl(struct hpsb_iso 
@@ -7556,5 +7448,4 @@
-diff --git a/drivers/ieee1394/ohci1394.c b/drivers/ieee1394/ohci1394.c
-index 8f1292c36843dcd24e609e8a4422113321525f6e..6f77768ff081a39a8ea3dc599adf96998ec06e14 100644
---- a/drivers/ieee1394/ohci1394.c
-+++ b/drivers/ieee1394/ohci1394.c
-@@ -162,9 +162,9 @@ printk(level "%s: " fmt "\n" , OHCI1394_DRIVER_NAME , ## args)
+diff -urNp linux-2.6.17.4/drivers/ieee1394/ohci1394.c linux-2.6.17.4/drivers/ieee1394/ohci1394.c
+--- linux-2.6.17.4/drivers/ieee1394/ohci1394.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/ieee1394/ohci1394.c	2006-07-01 14:35:29.000000000 -0400
+@@ -162,9 +162,9 @@ printk(level "%s: " fmt "\n" , OHCI1394_
@@ -7572,5 +7463,4 @@
-diff --git a/drivers/mtd/devices/doc2001.c b/drivers/mtd/devices/doc2001.c
-index 681a9c73a2a321850404d4856f4738be47e17d15..4d287524169bf57537cc8035db2c052ce05f8951 100644
---- a/drivers/mtd/devices/doc2001.c
-+++ b/drivers/mtd/devices/doc2001.c
-@@ -423,6 +423,8 @@ static int doc_read_ecc (struct mtd_info *mtd, loff_t from, size_t len,
+diff -urNp linux-2.6.17.4/drivers/mtd/devices/doc2001.c linux-2.6.17.4/drivers/mtd/devices/doc2001.c
+--- linux-2.6.17.4/drivers/mtd/devices/doc2001.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/mtd/devices/doc2001.c	2006-07-01 15:38:54.000000000 -0400
+@@ -423,6 +423,8 @@ static int doc_read_ecc (struct mtd_info
@@ -7585,4 +7475,3 @@
-diff --git a/drivers/net/pcnet32.c b/drivers/net/pcnet32.c
-index fc08c4af506ca8194b7f4d3854181fdc5eed43b4..7245a23fa516345e1be6e3c8499a421f8592cbe8 100644
---- a/drivers/net/pcnet32.c
-+++ b/drivers/net/pcnet32.c
+diff -urNp linux-2.6.17.4/drivers/net/pcnet32.c linux-2.6.17.4/drivers/net/pcnet32.c
+--- linux-2.6.17.4/drivers/net/pcnet32.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/net/pcnet32.c	2006-07-01 14:35:29.000000000 -0400
@@ -7598,4 +7487,3 @@
-diff --git a/drivers/pci/proc.c b/drivers/pci/proc.c
-index 54b2ebc9c91a4b4e18dead4f363b0c9c5150d2a5..dba881ce27506f4822d52c7ead5076b9d47eb592 100644
---- a/drivers/pci/proc.c
-+++ b/drivers/pci/proc.c
+diff -urNp linux-2.6.17.4/drivers/pci/proc.c linux-2.6.17.4/drivers/pci/proc.c
+--- linux-2.6.17.4/drivers/pci/proc.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/pci/proc.c	2006-07-01 15:39:05.000000000 -0400
@@ -7618,5 +7506,4 @@
-diff --git a/drivers/pnp/pnpbios/bioscalls.c b/drivers/pnp/pnpbios/bioscalls.c
-index a1f0b0ba2bfe8600109b0061a93d4ea47b26e6a4..4cf8fd50bcab9ef4a1c0f68856bb03228ae593f5 100644
---- a/drivers/pnp/pnpbios/bioscalls.c
-+++ b/drivers/pnp/pnpbios/bioscalls.c
-@@ -65,7 +65,7 @@ set_base(gdt[(selname) >> 3], (u32)(address)); \
+diff -urNp linux-2.6.17.4/drivers/pnp/pnpbios/bioscalls.c linux-2.6.17.4/drivers/pnp/pnpbios/bioscalls.c
+--- linux-2.6.17.4/drivers/pnp/pnpbios/bioscalls.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/pnp/pnpbios/bioscalls.c	2006-07-01 14:35:29.000000000 -0400
+@@ -65,7 +65,7 @@ set_base(gdt[(selname) >> 3], (u32)(addr
@@ -7631 +7518 @@
-@@ -93,6 +93,10 @@ static inline u16 call_pnp_bios(u16 func, u16 arg1, u16 arg2, u16 arg3,
+@@ -93,6 +93,10 @@ static inline u16 call_pnp_bios(u16 func
@@ -7642 +7529 @@
-@@ -107,6 +111,10 @@ static inline u16 call_pnp_bios(u16 func, u16 arg1, u16 arg2, u16 arg3,
+@@ -107,6 +111,10 @@ static inline u16 call_pnp_bios(u16 func
@@ -7653 +7540 @@
-@@ -142,9 +150,14 @@ static inline u16 call_pnp_bios(u16 func, u16 arg1, u16 arg2, u16 arg3,
+@@ -142,9 +150,14 @@ static inline u16 call_pnp_bios(u16 func
@@ -7669,5 +7556,4 @@
-diff --git a/drivers/video/i810/i810_main.c b/drivers/video/i810/i810_main.c
-index 44aa2ffff973e52b7f438fdef634d3cc5c0b6f7d..901334de7bf5b579fa30e7714b2c5db588100d2c 100644
---- a/drivers/video/i810/i810_main.c
-+++ b/drivers/video/i810/i810_main.c
-@@ -1508,7 +1508,7 @@ static int i810fb_cursor(struct fb_info *info, struct fb_cursor *cursor)
+diff -urNp linux-2.6.17.4/drivers/video/i810/i810_main.c linux-2.6.17.4/drivers/video/i810/i810_main.c
+--- linux-2.6.17.4/drivers/video/i810/i810_main.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/video/i810/i810_main.c	2006-07-01 15:39:05.000000000 -0400
+@@ -1508,7 +1508,7 @@ static int i810fb_cursor(struct fb_info 
@@ -7682,5 +7568,4 @@
-diff --git a/drivers/video/vesafb.c b/drivers/video/vesafb.c
-index b0b9acfdd430ec3a3d64eb0e4c082130d0ff55f7..da020019cdddab7d2aa3a226d8e2396b852545e5 100644
---- a/drivers/video/vesafb.c
-+++ b/drivers/video/vesafb.c
-@@ -259,7 +259,7 @@ static int __init vesafb_probe(struct platform_device *dev)
+diff -urNp linux-2.6.17.4/drivers/video/vesafb.c linux-2.6.17.4/drivers/video/vesafb.c
+--- linux-2.6.17.4/drivers/video/vesafb.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/drivers/video/vesafb.c	2006-07-01 14:35:29.000000000 -0400
+@@ -259,7 +259,7 @@ static int __init vesafb_probe(struct pl
@@ -7695,17 +7580,3 @@
-diff --git a/fs/Kconfig b/fs/Kconfig
-index f9b5842c8d2de67e6f9258f65fad1fc6207b9242..fe85a324f8aff8915bb6a933aa8881e13032a1a3 100644
---- a/fs/Kconfig
-+++ b/fs/Kconfig
-@@ -794,7 +794,7 @@ config PROC_FS
- 
- config PROC_KCORE
- 	bool "/proc/kcore support" if !ARM
--	depends on PROC_FS && MMU
-+	depends on PROC_FS && MMU && !GRKERNSEC_PROC_ADD
- 
- config PROC_VMCORE
-         bool "/proc/vmcore support (EXPERIMENTAL)"
-diff --git a/fs/binfmt_aout.c b/fs/binfmt_aout.c
-index f312103434d4594fcd8d532c90bb8b4cf4698289..ca2b034777d64e28d8e8071f94325121fda1e0f5 100644
---- a/fs/binfmt_aout.c
-+++ b/fs/binfmt_aout.c
+diff -urNp linux-2.6.17.4/fs/binfmt_aout.c linux-2.6.17.4/fs/binfmt_aout.c
+--- linux-2.6.17.4/fs/binfmt_aout.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/binfmt_aout.c	2006-07-01 15:39:05.000000000 -0400
@@ -7720 +7591 @@
-@@ -123,10 +124,12 @@ static int aout_core_dump(long signr, struct pt_regs * regs, struct file *file)
+@@ -123,10 +124,12 @@ static int aout_core_dump(long signr, st
@@ -7733 +7604 @@
-@@ -134,10 +137,12 @@ static int aout_core_dump(long signr, struct pt_regs * regs, struct file *file)
+@@ -134,10 +137,12 @@ static int aout_core_dump(long signr, st
@@ -7746 +7617 @@
-@@ -287,6 +292,8 @@ static int load_aout_binary(struct linux_binprm * bprm, struct pt_regs * regs)
+@@ -287,6 +292,8 @@ static int load_aout_binary(struct linux
@@ -7755 +7626 @@
-@@ -319,6 +326,28 @@ static int load_aout_binary(struct linux_binprm * bprm, struct pt_regs * regs)
+@@ -319,6 +326,28 @@ static int load_aout_binary(struct linux
@@ -7784 +7655 @@
-@@ -414,7 +443,7 @@ static int load_aout_binary(struct linux_binprm * bprm, struct pt_regs * regs)
+@@ -414,7 +443,7 @@ static int load_aout_binary(struct linux
@@ -7793,4 +7664,3 @@
-diff --git a/fs/binfmt_elf.c b/fs/binfmt_elf.c
-index 537893a16014cbbdd6d72259e795030625e91a77..d71468d4cb071ca7cec8759880b6ea4dc06ce3c6 100644
---- a/fs/binfmt_elf.c
-+++ b/fs/binfmt_elf.c
+diff -urNp linux-2.6.17.4/fs/binfmt_elf.c linux-2.6.17.4/fs/binfmt_elf.c
+--- linux-2.6.17.4/fs/binfmt_elf.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/binfmt_elf.c	2006-07-01 15:39:05.000000000 -0400
@@ -7814 +7684 @@
-@@ -90,6 +95,8 @@ static struct linux_binfmt elf_format = {
+@@ -90,6 +95,8 @@ static struct linux_binfmt elf_format = 
@@ -7823 +7693 @@
-@@ -100,7 +107,7 @@ static int set_brk(unsigned long start, unsigned long end)
+@@ -100,7 +107,7 @@ static int set_brk(unsigned long start, 
@@ -7832 +7702 @@
-@@ -316,10 +323,9 @@ static unsigned long load_elf_interp(struct elfhdr * interp_elf_ex,
+@@ -316,10 +323,9 @@ static unsigned long load_elf_interp(str
@@ -7845 +7715 @@
-@@ -358,59 +364,80 @@ static unsigned long load_elf_interp(struct elfhdr * interp_elf_ex,
+@@ -358,59 +364,80 @@ static unsigned long load_elf_interp(str
@@ -7865,3 +7735 @@
-+		if (eppnt->p_type != PT_LOAD)
-+			continue;
- 
+-
@@ -7874,8 +7742 @@
-+		/*
-+		 * Check to see if the section's size will overflow the
-+		 * allowed task size. Note that p_filesz must always be
-+		 * <= p_memsize so it is only necessary to check p_memsz.
-+		 */
-+		if (eppnt->p_filesz > eppnt->p_memsz || eppnt->p_vaddr >= eppnt->p_vaddr + eppnt->p_memsz)
-+			goto out_close;
- 
+-
@@ -7900,0 +7762,11 @@
++		if (eppnt->p_type != PT_LOAD)
++			continue;
++
++		/*
++		 * Check to see if the section's size will overflow the
++		 * allowed task size. Note that p_filesz must always be
++		 * <= p_memsize so it is only necessary to check p_memsz.
++		 */
++		if (eppnt->p_filesz > eppnt->p_memsz || eppnt->p_vaddr >= eppnt->p_vaddr + eppnt->p_memsz)
++			goto out_close;
++
@@ -7909 +7781 @@
--
+ 
@@ -7926 +7797,0 @@
-+
@@ -8164 +8035 @@
-@@ -527,7 +728,7 @@ static int load_elf_binary(struct linux_binprm * bprm, struct pt_regs * regs)
+@@ -527,7 +728,7 @@ static int load_elf_binary(struct linux_
@@ -8173 +8044 @@
-@@ -545,6 +746,7 @@ static int load_elf_binary(struct linux_binprm * bprm, struct pt_regs * regs)
+@@ -545,6 +746,7 @@ static int load_elf_binary(struct linux_
@@ -8181 +8052 @@
-@@ -770,14 +972,88 @@ static int load_elf_binary(struct linux_binprm * bprm, struct pt_regs * regs)
+@@ -770,14 +972,88 @@ static int load_elf_binary(struct linux_
@@ -8270 +8141 @@
-@@ -849,6 +1125,15 @@ static int load_elf_binary(struct linux_binprm * bprm, struct pt_regs * regs)
+@@ -849,6 +1125,15 @@ static int load_elf_binary(struct linux_
@@ -8286 +8157 @@
-@@ -876,9 +1161,9 @@ static int load_elf_binary(struct linux_binprm * bprm, struct pt_regs * regs)
+@@ -876,9 +1161,9 @@ static int load_elf_binary(struct linux_
@@ -8299 +8170 @@
-@@ -905,6 +1190,12 @@ static int load_elf_binary(struct linux_binprm * bprm, struct pt_regs * regs)
+@@ -905,6 +1190,12 @@ static int load_elf_binary(struct linux_
@@ -8312 +8183 @@
-@@ -933,7 +1224,7 @@ static int load_elf_binary(struct linux_binprm * bprm, struct pt_regs * regs)
+@@ -933,7 +1224,7 @@ static int load_elf_binary(struct linux_
@@ -8321 +8192 @@
-@@ -1157,7 +1448,7 @@ static int dump_seek(struct file *file, loff_t off)
+@@ -1157,7 +1448,7 @@ static int dump_seek(struct file *file, 
@@ -8330 +8201 @@
-@@ -1168,7 +1459,7 @@ static int maydump(struct vm_area_struct *vma)
+@@ -1168,7 +1459,7 @@ static int maydump(struct vm_area_struct
@@ -8339 +8210 @@
-@@ -1222,8 +1513,11 @@ static int writenote(struct memelfnote *men, struct file *file)
+@@ -1222,8 +1513,11 @@ static int writenote(struct memelfnote *
@@ -8352 +8223 @@
-@@ -1573,7 +1867,7 @@ static int elf_core_dump(long signr, struct pt_regs * regs, struct file * file)
+@@ -1573,7 +1867,7 @@ static int elf_core_dump(long signr, str
@@ -8361 +8232 @@
-@@ -1606,7 +1900,7 @@ static int elf_core_dump(long signr, struct pt_regs * regs, struct file * file)
+@@ -1606,7 +1900,7 @@ static int elf_core_dump(long signr, str
@@ -8370 +8241 @@
-@@ -1625,6 +1919,7 @@ static int elf_core_dump(long signr, struct pt_regs * regs, struct file * file)
+@@ -1625,6 +1919,7 @@ static int elf_core_dump(long signr, str
@@ -8378,5 +8249,4 @@
-diff --git a/fs/binfmt_flat.c b/fs/binfmt_flat.c
-index b1c902e319c13dfc82200753f54b4f99102dfb51..0b2f3645d82a6ee0dfcf7471f33cec5acedbd70d 100644
---- a/fs/binfmt_flat.c
-+++ b/fs/binfmt_flat.c
-@@ -552,7 +552,9 @@ static int load_flat_file(struct linux_binprm * bprm,
+diff -urNp linux-2.6.17.4/fs/binfmt_flat.c linux-2.6.17.4/fs/binfmt_flat.c
+--- linux-2.6.17.4/fs/binfmt_flat.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/binfmt_flat.c	2006-07-01 14:35:29.000000000 -0400
+@@ -552,7 +552,9 @@ static int load_flat_file(struct linux_b
@@ -8392 +8262 @@
-@@ -574,8 +576,10 @@ static int load_flat_file(struct linux_binprm * bprm,
+@@ -574,8 +576,10 @@ static int load_flat_file(struct linux_b
@@ -8403 +8273 @@
-@@ -639,8 +643,10 @@ static int load_flat_file(struct linux_binprm * bprm,
+@@ -639,8 +643,10 @@ static int load_flat_file(struct linux_b
@@ -8414,5 +8284,4 @@
-diff --git a/fs/binfmt_misc.c b/fs/binfmt_misc.c
-index d73d75591a3966125003fdc8e6edebca1d7cc5e3..892c620678f56839d16120c9c5592bc082a3d347 100644
---- a/fs/binfmt_misc.c
-+++ b/fs/binfmt_misc.c
-@@ -112,9 +112,11 @@ static int load_misc_binary(struct linux_binprm *bprm, struct pt_regs *regs)
+diff -urNp linux-2.6.17.4/fs/binfmt_misc.c linux-2.6.17.4/fs/binfmt_misc.c
+--- linux-2.6.17.4/fs/binfmt_misc.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/binfmt_misc.c	2006-07-01 14:35:29.000000000 -0400
+@@ -112,9 +112,11 @@ static int load_misc_binary(struct linux
@@ -8431,4 +8300,3 @@
-diff --git a/fs/buffer.c b/fs/buffer.c
-index 23f1f3a68077b87c947a350ee57b30ee3aa94ed6..a2cc1f4b1134ee1486a537bbda567defcb738a70 100644
---- a/fs/buffer.c
-+++ b/fs/buffer.c
+diff -urNp linux-2.6.17.4/fs/buffer.c linux-2.6.17.4/fs/buffer.c
+--- linux-2.6.17.4/fs/buffer.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/buffer.c	2006-07-01 15:39:05.000000000 -0400
@@ -8443 +8311 @@
-@@ -2162,6 +2163,7 @@ static int __generic_cont_expand(struct inode *inode, loff_t size,
+@@ -2162,6 +2163,7 @@ static int __generic_cont_expand(struct 
@@ -8451,4 +8319,3 @@
-diff --git a/fs/compat.c b/fs/compat.c
-index b1f64786a613e598b5b5a06684f58d5cea8c0d5c..f2aae1bb7c5e2e00e1f50c0e18396a56c0241a0d 100644
---- a/fs/compat.c
-+++ b/fs/compat.c
+diff -urNp linux-2.6.17.4/fs/compat.c linux-2.6.17.4/fs/compat.c
+--- linux-2.6.17.4/fs/compat.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/compat.c	2006-07-01 15:39:05.000000000 -0400
@@ -8545,4 +8412,3 @@
-diff --git a/fs/dcache.c b/fs/dcache.c
-index 940d188e5d14a90730fe170b59eaa426012ef546..5b595d2a7a19000cfa82c3ceaf9789660d162f24 100644
---- a/fs/dcache.c
-+++ b/fs/dcache.c
+diff -urNp linux-2.6.17.4/fs/dcache.c linux-2.6.17.4/fs/dcache.c
+--- linux-2.6.17.4/fs/dcache.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/dcache.c	2006-07-01 15:39:05.000000000 -0400
@@ -8558,4 +8424,3 @@
-diff --git a/fs/exec.c b/fs/exec.c
-index 3a79d97ac234422c353ad6c37ab973d3363471bd..6c49d0d5c0ac4f190f7872daf019b4a7186428f9 100644
---- a/fs/exec.c
-+++ b/fs/exec.c
+diff -urNp linux-2.6.17.4/fs/exec.c linux-2.6.17.4/fs/exec.c
+--- linux-2.6.17.4/fs/exec.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/exec.c	2006-07-01 16:30:25.000000000 -0400
@@ -8587 +8452 @@
-@@ -312,6 +323,10 @@ void install_arg_page(struct vm_area_struct *vma,
+@@ -312,6 +323,10 @@ void install_arg_page(struct vm_area_str
@@ -8598 +8463 @@
-@@ -321,9 +336,21 @@ void install_arg_page(struct vm_area_struct *vma,
+@@ -321,9 +336,21 @@ void install_arg_page(struct vm_area_str
@@ -8620 +8485 @@
-@@ -346,6 +373,10 @@ int setup_arg_pages(struct linux_binprm *bprm,
+@@ -346,6 +373,10 @@ int setup_arg_pages(struct linux_binprm 
@@ -8631 +8496 @@
-@@ -410,6 +441,18 @@ int setup_arg_pages(struct linux_binprm *bprm,
+@@ -410,6 +441,18 @@ int setup_arg_pages(struct linux_binprm 
@@ -8650 +8515 @@
-@@ -430,13 +473,50 @@ int setup_arg_pages(struct linux_binprm *bprm,
+@@ -430,13 +473,50 @@ int setup_arg_pages(struct linux_binprm 
@@ -8701 +8566 @@
-@@ -444,6 +524,14 @@ int setup_arg_pages(struct linux_binprm *bprm,
+@@ -444,6 +524,14 @@ int setup_arg_pages(struct linux_binprm 
@@ -8812 +8677 @@
-@@ -1374,6 +1524,114 @@ static void format_corename(char *corename, const char *pattern, long signr)
+@@ -1374,6 +1524,114 @@ static void format_corename(char *corena
@@ -8927 +8792 @@
-@@ -1491,6 +1749,10 @@ int do_coredump(long signr, int exit_code, struct pt_regs * regs)
+@@ -1491,6 +1749,10 @@ int do_coredump(long signr, int exit_cod
@@ -8938,4 +8803,3 @@
-diff --git a/fs/fcntl.c b/fs/fcntl.c
-index d35cbc6bc11206b528a47672678d4337c933ecec..7cfb274dff9f7cadb896f1ed47f4954ce8422de5 100644
---- a/fs/fcntl.c
-+++ b/fs/fcntl.c
+diff -urNp linux-2.6.17.4/fs/fcntl.c linux-2.6.17.4/fs/fcntl.c
+--- linux-2.6.17.4/fs/fcntl.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/fcntl.c	2006-07-01 15:39:05.000000000 -0400
@@ -8950 +8814 @@
-@@ -63,6 +64,7 @@ static int locate_fd(struct files_struct *files,
+@@ -63,6 +64,7 @@ static int locate_fd(struct files_struct
@@ -8966 +8830 @@
-@@ -141,6 +144,8 @@ asmlinkage long sys_dup2(unsigned int oldfd, unsigned int newfd)
+@@ -141,6 +144,8 @@ asmlinkage long sys_dup2(unsigned int ol
@@ -8975 +8839 @@
-@@ -427,7 +432,8 @@ static inline int sigio_perm(struct task_struct *p,
+@@ -427,7 +432,8 @@ static inline int sigio_perm(struct task
@@ -8985,4 +8849,15 @@
-diff --git a/fs/namei.c b/fs/namei.c
-index d6e2ee251736b4eb9bc692e4f0057af5633942c7..a03737d5711da290084e58ef35bc8ba44015333a 100644
---- a/fs/namei.c
-+++ b/fs/namei.c
+diff -urNp linux-2.6.17.4/fs/Kconfig linux-2.6.17.4/fs/Kconfig
+--- linux-2.6.17.4/fs/Kconfig	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/Kconfig	2006-07-01 15:39:05.000000000 -0400
+@@ -794,7 +794,7 @@ config PROC_FS
+ 
+ config PROC_KCORE
+ 	bool "/proc/kcore support" if !ARM
+-	depends on PROC_FS && MMU
++	depends on PROC_FS && MMU && !GRKERNSEC_PROC_ADD
+ 
+ config PROC_VMCORE
+         bool "/proc/vmcore support (EXPERIMENTAL)"
+diff -urNp linux-2.6.17.4/fs/namei.c linux-2.6.17.4/fs/namei.c
+--- linux-2.6.17.4/fs/namei.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/namei.c	2006-07-01 15:39:05.000000000 -0400
@@ -8997 +8872 @@
-@@ -611,6 +612,13 @@ static inline int do_follow_link(struct path *path, struct nameidata *nd)
+@@ -611,6 +612,13 @@ static inline int do_follow_link(struct 
@@ -9030 +8905 @@
-@@ -1601,6 +1616,17 @@ int open_namei(int dfd, const char *pathname, int flag,
+@@ -1601,6 +1616,17 @@ int open_namei(int dfd, const char *path
@@ -9103 +8978 @@
-@@ -1831,6 +1888,22 @@ asmlinkage long sys_mknodat(int dfd, const char __user *filename, int mode,
+@@ -1831,6 +1888,22 @@ asmlinkage long sys_mknodat(int dfd, con
@@ -9126 +9001 @@
-@@ -1848,6 +1921,10 @@ asmlinkage long sys_mknodat(int dfd, const char __user *filename, int mode,
+@@ -1848,6 +1921,10 @@ asmlinkage long sys_mknodat(int dfd, con
@@ -9137 +9012 @@
-@@ -1902,9 +1979,19 @@ asmlinkage long sys_mkdirat(int dfd, const char __user *pathname, int mode)
+@@ -1902,9 +1979,19 @@ asmlinkage long sys_mkdirat(int dfd, con
@@ -9158 +9033 @@
-@@ -1988,6 +2075,8 @@ static long do_rmdir(int dfd, const char __user *pathname)
+@@ -1988,6 +2075,8 @@ static long do_rmdir(int dfd, const char
@@ -9167 +9042 @@
-@@ -2012,7 +2101,21 @@ static long do_rmdir(int dfd, const char __user *pathname)
+@@ -2012,7 +2101,21 @@ static long do_rmdir(int dfd, const char
@@ -9190 +9065 @@
-@@ -2071,6 +2174,8 @@ static long do_unlinkat(int dfd, const char __user *pathname)
+@@ -2071,6 +2174,8 @@ static long do_unlinkat(int dfd, const c
@@ -9199 +9074 @@
-@@ -2086,13 +2191,26 @@ static long do_unlinkat(int dfd, const char __user *pathname)
+@@ -2086,13 +2191,26 @@ static long do_unlinkat(int dfd, const c
@@ -9228 +9103 @@
-@@ -2170,7 +2288,15 @@ asmlinkage long sys_symlinkat(const char __user *oldname,
+@@ -2170,7 +2288,15 @@ asmlinkage long sys_symlinkat(const char
@@ -9245 +9120 @@
-@@ -2262,7 +2388,20 @@ asmlinkage long sys_linkat(int olddfd, const char __user *oldname,
+@@ -2262,7 +2388,20 @@ asmlinkage long sys_linkat(int olddfd, c
@@ -9267 +9142 @@
-@@ -2488,8 +2627,16 @@ static int do_rename(int olddfd, const char *oldname,
+@@ -2488,8 +2627,16 @@ static int do_rename(int olddfd, const c
@@ -9285,4 +9160,3 @@
-diff --git a/fs/namespace.c b/fs/namespace.c
-index bf478addb852b70c1ec036e33100f93031c5dc6b..7a41922fcbfe2b76f76619d23c56c5ae60a8d2bd 100644
---- a/fs/namespace.c
-+++ b/fs/namespace.c
+diff -urNp linux-2.6.17.4/fs/namespace.c linux-2.6.17.4/fs/namespace.c
+--- linux-2.6.17.4/fs/namespace.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/namespace.c	2006-07-01 15:39:05.000000000 -0400
@@ -9298 +9172 @@
-@@ -600,6 +602,8 @@ static int do_umount(struct vfsmount *mnt, int flags)
+@@ -600,6 +602,8 @@ static int do_umount(struct vfsmount *mn
@@ -9307 +9181 @@
-@@ -620,6 +624,9 @@ static int do_umount(struct vfsmount *mnt, int flags)
+@@ -620,6 +624,9 @@ static int do_umount(struct vfsmount *mn
@@ -9317 +9191 @@
-@@ -1346,6 +1353,11 @@ long do_mount(char *dev_name, char *dir_name, char *type_page,
+@@ -1346,6 +1353,11 @@ long do_mount(char *dev_name, char *dir_
@@ -9329 +9203 @@
-@@ -1360,6 +1372,9 @@ long do_mount(char *dev_name, char *dir_name, char *type_page,
+@@ -1360,6 +1372,9 @@ long do_mount(char *dev_name, char *dir_
@@ -9339 +9213 @@
-@@ -1612,6 +1627,9 @@ asmlinkage long sys_pivot_root(const char __user * new_root,
+@@ -1612,6 +1627,9 @@ asmlinkage long sys_pivot_root(const cha
@@ -9349,4 +9223,3 @@
-diff --git a/fs/open.c b/fs/open.c
-index 317b7c7f38a73aac8cc8f3edc463919dabb2f947..75915f2c7f6443913b0d60403174041cdcdd5438 100644
---- a/fs/open.c
-+++ b/fs/open.c
+diff -urNp linux-2.6.17.4/fs/open.c linux-2.6.17.4/fs/open.c
+--- linux-2.6.17.4/fs/open.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/open.c	2006-07-01 16:23:05.000000000 -0400
@@ -9361 +9234 @@
-@@ -207,6 +208,9 @@ int do_truncate(struct dentry *dentry, loff_t length, unsigned int time_attrs,
+@@ -207,6 +208,9 @@ int do_truncate(struct dentry *dentry, l
@@ -9371 +9244 @@
-@@ -407,6 +411,12 @@ asmlinkage long sys_utime(char __user * filename, struct utimbuf __user * times)
+@@ -407,6 +411,12 @@ asmlinkage long sys_utime(char __user * 
@@ -9384 +9257 @@
-@@ -460,6 +470,12 @@ long do_utimes(int dfd, char __user *filename, struct timeval *times)
+@@ -460,6 +470,12 @@ long do_utimes(int dfd, char __user *fil
@@ -9397 +9270 @@
-@@ -526,6 +542,10 @@ asmlinkage long sys_faccessat(int dfd, const char __user *filename, int mode)
+@@ -526,6 +542,10 @@ asmlinkage long sys_faccessat(int dfd, c
@@ -9408 +9281 @@
-@@ -554,6 +574,8 @@ asmlinkage long sys_chdir(const char __user * filename)
+@@ -554,6 +574,8 @@ asmlinkage long sys_chdir(const char __u
@@ -9417 +9290 @@
-@@ -584,6 +606,13 @@ asmlinkage long sys_fchdir(unsigned int fd)
+@@ -584,6 +606,13 @@ asmlinkage long sys_fchdir(unsigned int 
@@ -9431 +9304 @@
-@@ -609,8 +638,16 @@ asmlinkage long sys_chroot(const char __user * filename)
+@@ -609,8 +638,16 @@ asmlinkage long sys_chroot(const char __
@@ -9448 +9321 @@
-@@ -641,9 +678,22 @@ asmlinkage long sys_fchmod(unsigned int fd, mode_t mode)
+@@ -641,9 +678,22 @@ asmlinkage long sys_fchmod(unsigned int 
@@ -9471 +9344 @@
-@@ -676,9 +726,21 @@ asmlinkage long sys_fchmodat(int dfd, const char __user *filename,
+@@ -676,9 +726,21 @@ asmlinkage long sys_fchmodat(int dfd, co
@@ -9493 +9366 @@
-@@ -695,7 +757,7 @@ asmlinkage long sys_chmod(const char __user *filename, mode_t mode)
+@@ -695,7 +757,7 @@ asmlinkage long sys_chmod(const char __u
@@ -9502 +9375 @@
-@@ -712,6 +774,12 @@ static int chown_common(struct dentry * dentry, uid_t user, gid_t group)
+@@ -712,6 +774,12 @@ static int chown_common(struct dentry * 
@@ -9515 +9388 @@
-@@ -737,7 +805,7 @@ asmlinkage long sys_chown(const char __user * filename, uid_t user, gid_t group)
+@@ -737,7 +805,7 @@ asmlinkage long sys_chown(const char __u
@@ -9524 +9397 @@
-@@ -756,7 +824,7 @@ asmlinkage long sys_fchownat(int dfd, const char __user *filename, uid_t user,
+@@ -756,7 +824,7 @@ asmlinkage long sys_fchownat(int dfd, co
@@ -9533 +9406 @@
-@@ -770,7 +838,7 @@ asmlinkage long sys_lchown(const char __user * filename, uid_t user, gid_t group
+@@ -770,7 +838,7 @@ asmlinkage long sys_lchown(const char __
@@ -9542 +9415 @@
-@@ -787,7 +855,7 @@ asmlinkage long sys_fchown(unsigned int fd, uid_t user, gid_t group)
+@@ -787,7 +855,7 @@ asmlinkage long sys_fchown(unsigned int 
@@ -9559,4 +9432,3 @@
-diff --git a/fs/pipe.c b/fs/pipe.c
-index 5acd8954aaa0a58a582e3910d1fb1eb50aa5f592..6584f7f14f38a08887e17c1a74521d5720767421 100644
---- a/fs/pipe.c
-+++ b/fs/pipe.c
+diff -urNp linux-2.6.17.4/fs/pipe.c linux-2.6.17.4/fs/pipe.c
+--- linux-2.6.17.4/fs/pipe.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/pipe.c	2006-07-01 17:43:00.000000000 -0400
@@ -9572,5 +9444,4 @@
-diff --git a/fs/proc/array.c b/fs/proc/array.c
-index 7a76ad5702302e7e975d9cd49ce64fdec9daf6c4..94be4fbc8744a9dfc56818e3c72bb0828c71c9ce 100644
---- a/fs/proc/array.c
-+++ b/fs/proc/array.c
-@@ -293,6 +293,21 @@ static inline char *task_cap(struct task_struct *p, char *buffer)
+diff -urNp linux-2.6.17.4/fs/proc/array.c linux-2.6.17.4/fs/proc/array.c
+--- linux-2.6.17.4/fs/proc/array.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/proc/array.c	2006-07-01 15:39:05.000000000 -0400
+@@ -293,6 +293,21 @@ static inline char *task_cap(struct task
@@ -9598 +9469 @@
-@@ -311,9 +326,20 @@ int proc_pid_status(struct task_struct *task, char * buffer)
+@@ -311,9 +326,20 @@ int proc_pid_status(struct task_struct *
@@ -9619 +9490 @@
-@@ -398,6 +424,19 @@ static int do_task_stat(struct task_struct *task, char * buffer, int whole)
+@@ -398,6 +424,19 @@ static int do_task_stat(struct task_stru
@@ -9639 +9510 @@
-@@ -437,9 +476,15 @@ static int do_task_stat(struct task_struct *task, char * buffer, int whole)
+@@ -437,9 +476,15 @@ static int do_task_stat(struct task_stru
@@ -9655 +9526 @@
-@@ -485,3 +530,14 @@ int proc_pid_statm(struct task_struct *task, char *buffer)
+@@ -485,3 +530,14 @@ int proc_pid_statm(struct task_struct *t
@@ -9670,4 +9541,3 @@
-diff --git a/fs/proc/base.c b/fs/proc/base.c
-index 6cc77dc3f3ff79c49fa7d4ce89360b595995d839..b03d757452c684867dd15701879568a4a186f579 100644
---- a/fs/proc/base.c
-+++ b/fs/proc/base.c
+diff -urNp linux-2.6.17.4/fs/proc/base.c linux-2.6.17.4/fs/proc/base.c
+--- linux-2.6.17.4/fs/proc/base.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/proc/base.c	2006-07-01 15:45:07.000000000 -0400
@@ -9692 +9562 @@
-@@ -204,6 +208,9 @@ static struct pid_entry tgid_base_stuff[] = {
+@@ -204,6 +208,9 @@ static struct pid_entry tgid_base_stuff[
@@ -9702 +9572 @@
-@@ -410,7 +417,7 @@ static int proc_task_root_link(struct inode *inode, struct dentry **dentry,
+@@ -410,7 +417,7 @@ static int proc_task_root_link(struct in
@@ -9711 +9581 @@
-@@ -591,9 +598,25 @@ static int proc_check_root(struct inode *inode)
+@@ -591,9 +598,25 @@ static int proc_check_root(struct inode 
@@ -9739 +9609 @@
-@@ -1372,6 +1395,9 @@ static struct inode *proc_pid_make_inode(struct super_block * sb, struct task_st
+@@ -1372,6 +1395,9 @@ static struct inode *proc_pid_make_inode
@@ -9749 +9619 @@
-@@ -1400,7 +1426,9 @@ static int pid_revalidate(struct dentry *dentry, struct nameidata *nd)
+@@ -1400,7 +1426,9 @@ static int pid_revalidate(struct dentry 
@@ -9759 +9629 @@
-@@ -1728,6 +1756,12 @@ static struct dentry *proc_pident_lookup(struct inode *dir,
+@@ -1728,6 +1756,12 @@ static struct dentry *proc_pident_lookup
@@ -9772 +9642 @@
-@@ -2036,6 +2070,22 @@ struct dentry *proc_pid_lookup(struct inode *dir, struct dentry * dentry, struct
+@@ -2036,6 +2070,22 @@ struct dentry *proc_pid_lookup(struct in
@@ -9795 +9665 @@
-@@ -2043,7 +2093,15 @@ struct dentry *proc_pid_lookup(struct inode *dir, struct dentry * dentry, struct
+@@ -2043,7 +2093,15 @@ struct dentry *proc_pid_lookup(struct in
@@ -9821 +9691 @@
-@@ -2155,6 +2216,18 @@ static int get_tgid_list(int index, unsigned long version, unsigned int *tgids)
+@@ -2155,6 +2216,18 @@ static int get_tgid_list(int index, unsi
@@ -9840,5 +9710,4 @@
-diff --git a/fs/proc/inode.c b/fs/proc/inode.c
-index 722b9c4631113d627fc8e4be5359dbf81092c8ff..6ed40e213564cd4e459bb571347d0ce292fc36cc 100644
---- a/fs/proc/inode.c
-+++ b/fs/proc/inode.c
-@@ -169,7 +169,11 @@ struct inode *proc_get_inode(struct super_block *sb, unsigned int ino,
+diff -urNp linux-2.6.17.4/fs/proc/inode.c linux-2.6.17.4/fs/proc/inode.c
+--- linux-2.6.17.4/fs/proc/inode.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/proc/inode.c	2006-07-01 15:39:05.000000000 -0400
+@@ -169,7 +169,11 @@ struct inode *proc_get_inode(struct supe
@@ -9856,5 +9725,4 @@
-diff --git a/fs/proc/internal.h b/fs/proc/internal.h
-index 0502f17b860def3b7e221783979aa4a4eba59a7d..8baf55e6b6dcd4d8133a9637c3db3dc372bb4c93 100644
---- a/fs/proc/internal.h
-+++ b/fs/proc/internal.h
-@@ -36,6 +36,9 @@ extern int proc_tid_stat(struct task_struct *,  char *);
+diff -urNp linux-2.6.17.4/fs/proc/internal.h linux-2.6.17.4/fs/proc/internal.h
+--- linux-2.6.17.4/fs/proc/internal.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/proc/internal.h	2006-07-01 15:39:05.000000000 -0400
+@@ -36,6 +36,9 @@ extern int proc_tid_stat(struct task_str
@@ -9870,5 +9738,4 @@
-diff --git a/fs/proc/proc_misc.c b/fs/proc/proc_misc.c
-index 5c10ea1574251c0e0809e3800d0dc05e144d01c4..353a4391f960bc40bb5dc72cca316098b2e1ec85 100644
---- a/fs/proc/proc_misc.c
-+++ b/fs/proc/proc_misc.c
-@@ -651,6 +651,8 @@ void create_seq_entry(char *name, mode_t mode, const struct file_operations *f)
+diff -urNp linux-2.6.17.4/fs/proc/proc_misc.c linux-2.6.17.4/fs/proc/proc_misc.c
+--- linux-2.6.17.4/fs/proc/proc_misc.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/proc/proc_misc.c	2006-07-01 16:45:28.000000000 -0400
+@@ -651,6 +651,8 @@ void create_seq_entry(char *name, mode_t
@@ -9939,4 +9806,3 @@
-diff --git a/fs/proc/root.c b/fs/proc/root.c
-index c3fd3611112f27f0b9379e35d00887d5f89f90d1..d80899c2c42a0e40a98b2ecc31d98905640800bf 100644
---- a/fs/proc/root.c
-+++ b/fs/proc/root.c
+diff -urNp linux-2.6.17.4/fs/proc/root.c linux-2.6.17.4/fs/proc/root.c
+--- linux-2.6.17.4/fs/proc/root.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/proc/root.c	2006-07-01 15:39:05.000000000 -0400
@@ -9973,5 +9839,4 @@
-diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c
-index 91b7c15ab3730c4f17ffc4a2f4bdb5e22da54edf..f7288b51b1a1096b69dcf4589dd35ca6c44ecd87 100644
---- a/fs/proc/task_mmu.c
-+++ b/fs/proc/task_mmu.c
-@@ -43,15 +43,27 @@ char *task_mem(struct mm_struct *mm, char *buffer)
+diff -urNp linux-2.6.17.4/fs/proc/task_mmu.c linux-2.6.17.4/fs/proc/task_mmu.c
+--- linux-2.6.17.4/fs/proc/task_mmu.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/proc/task_mmu.c	2006-07-01 15:48:30.000000000 -0400
+@@ -43,15 +43,27 @@ char *task_mem(struct mm_struct *mm, cha
@@ -10021 +9886 @@
-@@ -136,13 +154,30 @@ static int show_map_internal(struct seq_file *m, void *v, struct mem_size_stats
+@@ -136,13 +154,30 @@ static int show_map_internal(struct seq_
@@ -10052 +9917 @@
-@@ -154,13 +189,13 @@ static int show_map_internal(struct seq_file *m, void *v, struct mem_size_stats
+@@ -154,13 +189,13 @@ static int show_map_internal(struct seq_
@@ -10070 +9935 @@
-@@ -173,7 +208,25 @@ static int show_map_internal(struct seq_file *m, void *v, struct mem_size_stats
+@@ -173,7 +208,25 @@ static int show_map_internal(struct seq_
@@ -10097 +9962 @@
-@@ -187,6 +240,7 @@ static int show_map_internal(struct seq_file *m, void *v, struct mem_size_stats
+@@ -187,6 +240,7 @@ static int show_map_internal(struct seq_
@@ -10105,4 +9970,3 @@
-diff --git a/fs/readdir.c b/fs/readdir.c
-index b6109329b60739197685270d833b0699d11c020d..0bd92efe7120a37889b60f54df10e9731f7fe578 100644
---- a/fs/readdir.c
-+++ b/fs/readdir.c
+diff -urNp linux-2.6.17.4/fs/readdir.c linux-2.6.17.4/fs/readdir.c
+--- linux-2.6.17.4/fs/readdir.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/readdir.c	2006-07-01 15:39:05.000000000 -0400
@@ -10126 +9990 @@
-@@ -76,6 +79,10 @@ static int fillonedir(void * __buf, const char * name, int namlen, loff_t offset
+@@ -76,6 +79,10 @@ static int fillonedir(void * __buf, cons
@@ -10137 +10001 @@
-@@ -107,6 +114,7 @@ asmlinkage long old_readdir(unsigned int fd, struct old_linux_dirent __user * di
+@@ -107,6 +114,7 @@ asmlinkage long old_readdir(unsigned int
@@ -10153 +10017 @@
-@@ -147,6 +156,10 @@ static int filldir(void * __buf, const char * name, int namlen, loff_t offset,
+@@ -147,6 +156,10 @@ static int filldir(void * __buf, const c
@@ -10164 +10028 @@
-@@ -191,6 +204,7 @@ asmlinkage long sys_getdents(unsigned int fd, struct linux_dirent __user * diren
+@@ -191,6 +204,7 @@ asmlinkage long sys_getdents(unsigned in
@@ -10180 +10044 @@
-@@ -231,6 +246,10 @@ static int filldir64(void * __buf, const char * name, int namlen, loff_t offset,
+@@ -231,6 +246,10 @@ static int filldir64(void * __buf, const
@@ -10191 +10055 @@
-@@ -277,6 +296,7 @@ asmlinkage long sys_getdents64(unsigned int fd, struct linux_dirent64 __user * d
+@@ -277,6 +296,7 @@ asmlinkage long sys_getdents64(unsigned 
@@ -10199,4 +10063,3 @@
-diff --git a/fs/xfs/linux-2.6/xfs_file.c b/fs/xfs/linux-2.6/xfs_file.c
-index c847416f6d1010ac9ffea5ad764661662472632a..38aed74ade6ca6237357593d632e1d9c17be2c78 100644
---- a/fs/xfs/linux-2.6/xfs_file.c
-+++ b/fs/xfs/linux-2.6/xfs_file.c
+diff -urNp linux-2.6.17.4/fs/xfs/linux-2.6/xfs_file.c linux-2.6.17.4/fs/xfs/linux-2.6/xfs_file.c
+--- linux-2.6.17.4/fs/xfs/linux-2.6/xfs_file.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/fs/xfs/linux-2.6/xfs_file.c	2006-07-01 14:35:29.000000000 -0400
@@ -10215,9 +10078,10 @@
-diff --git a/grsecurity/Kconfig b/grsecurity/Kconfig
-new file mode 100644
-index 0000000000000000000000000000000000000000..a6d06b38e4adc0a07fc957244fc827bf00e42f0c
---- /dev/null
-+++ b/grsecurity/Kconfig
-@@ -0,0 +1,890 @@
-+#
-+# grecurity configuration
-+#
+diff -urNp linux-2.6.17.4/grsecurity/gracl_alloc.c linux-2.6.17.4/grsecurity/gracl_alloc.c
+--- linux-2.6.17.4/grsecurity/gracl_alloc.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/gracl_alloc.c	2006-07-01 15:39:05.000000000 -0400
+@@ -0,0 +1,91 @@
++#include <linux/kernel.h>
++#include <linux/mm.h>
++#include <linux/slab.h>
++#include <linux/vmalloc.h>
++#include <linux/gracl.h>
++#include <linux/grsecurity.h>
@@ -10225 +10089,3 @@
-+menu "Grsecurity"
++static unsigned long alloc_stack_next = 1;
++static unsigned long alloc_stack_size = 1;
++static void **alloc_stack;
@@ -10227,10 +10093,5 @@
-+config GRKERNSEC
-+	bool "Grsecurity"
-+	select CRYPTO
-+	select CRYPTO_SHA256
-+	help
-+	  If you say Y here, you will be able to configure many features
-+	  that will enhance the security of your system.  It is highly
-+	  recommended that you say Y here and read through the help
-+	  for each option so that you fully understand the features and
-+	  can evaluate their usefulness for your machine.
++static __inline__ int
++alloc_pop(void)
++{
++	if (alloc_stack_next == 1)
++		return 0;
@@ -10238,4 +10099 @@
-+choice
-+	prompt "Security Level"
-+	depends GRKERNSEC
-+	default GRKERNSEC_CUSTOM
++	kfree(alloc_stack[alloc_stack_next - 2]);
@@ -10243,10 +10101 @@
-+config GRKERNSEC_LOW
-+	bool "Low"
-+	select GRKERNSEC_LINK
-+	select GRKERNSEC_FIFO
-+	select GRKERNSEC_RANDPID
-+	select GRKERNSEC_EXECVE
-+	select GRKERNSEC_RANDNET
-+	select GRKERNSEC_DMESG
-+	select GRKERNSEC_CHROOT_CHDIR
-+	select GRKERNSEC_MODSTOP if (MODULES)
++	alloc_stack_next--;
@@ -10254,8 +10103,2 @@
-+	help
-+	  If you choose this option, several of the grsecurity options will
-+	  be enabled that will give you greater protection against a number
-+	  of attacks, while assuring that none of your software will have any
-+	  conflicts with the additional security measures.  If you run a lot
-+	  of unusual software, or you are having problems with the higher
-+	  security levels, you should say Y here.  With this option, the
-+	  following features are enabled:
++	return 1;
++}
@@ -10263,7 +10106,5 @@
-+	  - Linking restrictions
-+	  - FIFO restrictions
-+	  - Randomized PIDs
-+	  - Enforcing RLIMIT_NPROC on execve
-+	  - Restricted dmesg
-+	  - Enforced chdir("/") on chroot
-+	  - Runtime module disabling
++static __inline__ void
++alloc_push(void *buf)
++{
++	if (alloc_stack_next >= alloc_stack_size)
++		BUG();
@@ -10271,31 +10112 @@
-+config GRKERNSEC_MEDIUM
-+	bool "Medium"
-+	select PAX
-+	select PAX_EI_PAX
-+	select PAX_PT_PAX_FLAGS
-+	select PAX_HAVE_ACL_FLAGS
-+	select GRKERNSEC_PROC_MEMMAP if (PAX_NOEXEC || PAX_ASLR)
-+	select GRKERNSEC_CHROOT_SYSCTL
-+	select GRKERNSEC_LINK
-+	select GRKERNSEC_FIFO
-+	select GRKERNSEC_RANDPID
-+	select GRKERNSEC_EXECVE
-+	select GRKERNSEC_DMESG
-+	select GRKERNSEC_RANDNET
-+	select GRKERNSEC_FORKFAIL
-+	select GRKERNSEC_TIME
-+	select GRKERNSEC_SIGNAL
-+	select GRKERNSEC_CHROOT
-+	select GRKERNSEC_CHROOT_UNIX
-+	select GRKERNSEC_CHROOT_MOUNT
-+	select GRKERNSEC_CHROOT_PIVOT
-+	select GRKERNSEC_CHROOT_DOUBLE
-+	select GRKERNSEC_CHROOT_CHDIR
-+	select GRKERNSEC_CHROOT_MKNOD
-+	select GRKERNSEC_PROC
-+	select GRKERNSEC_PROC_USERGROUP
-+	select GRKERNSEC_MODSTOP if (MODULES)
-+	select PAX_RANDUSTACK
-+	select PAX_ASLR
-+	select PAX_RANDMMAP
-+	select PAX_NOVSYSCALL if (X86 && !X86_64)
++	alloc_stack[alloc_stack_next - 1] = buf;
@@ -10303,9 +10114 @@
-+	help
-+	  If you say Y here, several features in addition to those included
-+	  in the low additional security level will be enabled.  These
-+	  features provide even more security to your system, though in rare
-+	  cases they may be incompatible with very old or poorly written
-+	  software.  If you enable this option, make sure that your auth
-+	  service (identd) is running as gid 1001.  With this option, 
-+	  the following features (in addition to those provided in the 
-+	  low additional security level) will be enabled:
++	alloc_stack_next++;
@@ -10313,13 +10116,2 @@
-+	  - Randomized TCP source ports
-+	  - Failed fork logging
-+	  - Time change logging
-+	  - Signal logging
-+	  - Deny mounts in chroot
-+	  - Deny double chrooting
-+	  - Deny sysctl writes in chroot
-+	  - Deny mknod in chroot
-+	  - Deny access to abstract AF_UNIX sockets out of chroot
-+	  - Deny pivot_root in chroot
-+	  - Denied writes of /dev/kmem, /dev/mem, and /dev/port
-+	  - /proc restrictions with special GID set to 10 (usually wheel)
-+	  - Address Space Layout Randomization (ASLR)
++	return;
++}
@@ -10327,68 +10119,4 @@
-+config GRKERNSEC_HIGH
-+	bool "High"
-+	select GRKERNSEC_LINK
-+	select GRKERNSEC_FIFO
-+	select GRKERNSEC_RANDPID
-+	select GRKERNSEC_EXECVE
-+	select GRKERNSEC_DMESG
-+	select GRKERNSEC_FORKFAIL
-+	select GRKERNSEC_TIME
-+	select GRKERNSEC_SIGNAL
-+	select GRKERNSEC_CHROOT_SHMAT
-+	select GRKERNSEC_CHROOT_UNIX
-+	select GRKERNSEC_CHROOT_MOUNT
-+	select GRKERNSEC_CHROOT_FCHDIR
-+	select GRKERNSEC_CHROOT_PIVOT
-+	select GRKERNSEC_CHROOT_DOUBLE
-+	select GRKERNSEC_CHROOT_CHDIR
-+	select GRKERNSEC_CHROOT_MKNOD
-+	select GRKERNSEC_CHROOT_CAPS
-+	select GRKERNSEC_CHROOT_SYSCTL
-+	select GRKERNSEC_CHROOT_FINDTASK
-+	select GRKERNSEC_PROC
-+	select GRKERNSEC_PROC_MEMMAP if (PAX_NOEXEC || PAX_ASLR)
-+	select GRKERNSEC_HIDESYM
-+	select GRKERNSEC_BRUTE
-+	select GRKERNSEC_SHM if (SYSVIPC)
-+	select GRKERNSEC_PROC_USERGROUP
-+	select GRKERNSEC_KMEM
-+	select GRKERNSEC_RESLOG
-+	select GRKERNSEC_RANDNET
-+	select GRKERNSEC_PROC_ADD
-+	select GRKERNSEC_CHROOT_CHMOD
-+	select GRKERNSEC_CHROOT_NICE
-+	select GRKERNSEC_AUDIT_MOUNT
-+	select GRKERNSEC_MODSTOP if (MODULES)
-+	select PAX
-+	select PAX_RANDUSTACK
-+	select PAX_ASLR
-+	select PAX_RANDMMAP
-+	select PAX_NOEXEC
-+	select PAX_MPROTECT
-+	select PAX_EI_PAX
-+	select PAX_PT_PAX_FLAGS
-+	select PAX_HAVE_ACL_FLAGS
-+	select PAX_KERNEXEC if (!X86_64 && !MODULES && !HOTPLUG_PCI_COMPAQ_NVRAM && !PCI_BIOS)
-+	select PAX_RANDKSTACK if (X86_TSC && !X86_64)
-+	select PAX_SEGMEXEC if (X86 && !X86_64)
-+	select PAX_PAGEEXEC if (!X86)
-+	select PAX_EMUPLT if (ALPHA || PARISC || PPC32 || SPARC32 || SPARC64)
-+	select PAX_DLRESOLVE if (SPARC32 || SPARC64)
-+	select PAX_SYSCALL if (PPC32)
-+	select PAX_EMUTRAMP if (PARISC)
-+	select PAX_EMUSIGRT if (PARISC)
-+	select PAX_NOVSYSCALL if (X86 && !X86_64)
-+	select PAX_ETEXECRELOCS if (ALPHA || IA64 || PARISC)
-+	help
-+	  If you say Y here, many of the features of grsecurity will be
-+	  enabled, which will protect you against many kinds of attacks
-+	  against your system.  The heightened security comes at a cost
-+	  of an increased chance of incompatibilities with rare software
-+	  on your machine.  Since this security level enables PaX, you should
-+	  view <http://pax.grsecurity.net> and read about the PaX
-+	  project.  While you are there, download chpax and run it on
-+	  binaries that cause problems with PaX.  Also remember that
-+	  since the /proc restrictions are enabled, you must run your
-+	  identd as gid 1001.  This security level enables the following 
-+	  features in addition to those listed in the low and medium 
-+	  security levels:
++void *
++acl_alloc(unsigned long len)
++{
++	void *ret;
@@ -10396,23 +10124,2 @@
-+	  - Additional /proc restrictions
-+	  - Chmod restrictions in chroot
-+	  - No signals, ptrace, or viewing of processes outside of chroot
-+	  - Capability restrictions in chroot
-+	  - Deny fchdir out of chroot
-+	  - Priority restrictions in chroot
-+	  - Segmentation-based implementation of PaX
-+	  - Mprotect restrictions
-+	  - Removal of addresses from /proc/<pid>/[smaps|maps|stat]
-+	  - Kernel stack randomization
-+	  - Mount/unmount/remount logging
-+	  - Kernel symbol hiding
-+	  - Destroy unused shared memory	
-+	  - Prevention of memory exhaustion-based exploits
-+config GRKERNSEC_CUSTOM
-+	bool "Custom"
-+	help
-+	  If you say Y here, you will be able to configure every grsecurity
-+	  option, which allows you to enable many more features that aren't
-+	  covered in the basic security levels.  These additional features
-+	  include TPE, socket restrictions, and the sysctl system for
-+	  grsecurity.  It is advised that you read through the help for
-+	  each option to determine its usefulness in your situation.
++	if (len > PAGE_SIZE)
++		BUG();
@@ -10420 +10127 @@
-+endchoice
++	ret = kmalloc(len, GFP_KERNEL);
@@ -10422,2 +10129,2 @@
-+menu "Address Space Protection"
-+depends on GRKERNSEC
++	if (ret)
++		alloc_push(ret);
@@ -10425,19 +10132,2 @@
-+config GRKERNSEC_KMEM
-+	bool "Deny writing to /dev/kmem, /dev/mem, and /dev/port"
-+	help
-+	  If you say Y here, /dev/kmem and /dev/mem won't be allowed to
-+	  be written to via mmap or otherwise to modify the running kernel.
-+	  /dev/port will also not be allowed to be opened. If you have module
-+	  support disabled, enabling this will close up four ways that are
-+	  currently used  to insert malicious code into the running kernel.
-+	  Even with all these features enabled, we still highly recommend that
-+	  you use the RBAC system, as it is still possible for an attacker to
-+	  modify the running kernel through privileged I/O granted by ioperm/iopl.
-+	  If you are not using XFree86, you may be able to stop this additional
-+	  case by enabling the 'Disable privileged I/O' option. Though nothing
-+	  legitimately writes to /dev/kmem, XFree86 does need to write to /dev/mem,
-+	  but only to video memory, which is the only writing we allow in this
-+	  case.  If /dev/kmem or /dev/mem are mmaped without PROT_WRITE, they will
-+	  not be allowed to mprotect it with PROT_WRITE later.
-+	  It is highly recommended that you say Y here if you meet all the
-+	  conditions above.
++	return ret;
++}
@@ -10445,15 +10135,5 @@
-+config GRKERNSEC_IO
-+	bool "Disable privileged I/O"
-+	depends on X86
-+	select RTC
-+	help
-+	  If you say Y here, all ioperm and iopl calls will return an error.
-+	  Ioperm and iopl can be used to modify the running kernel.
-+	  Unfortunately, some programs need this access to operate properly,
-+	  the most notable of which are XFree86 and hwclock.  hwclock can be
-+	  remedied by having RTC support in the kernel, so CONFIG_RTC is
-+	  enabled if this option is enabled, to ensure that hwclock operates
-+	  correctly.  XFree86 still will not operate correctly with this option
-+	  enabled, so DO NOT CHOOSE Y IF YOU USE XFree86.  If you use XFree86
-+	  and you still want to protect your kernel against modification,
-+	  use the RBAC system.
++void
++acl_free_all(void)
++{
++	if (gr_acl_is_enabled() || !alloc_stack)
++		return;
@@ -10461,10 +10141 @@
-+config GRKERNSEC_PROC_MEMMAP
-+	bool "Remove addresses from /proc/<pid>/[smaps|maps|stat]"
-+	depends on PAX_NOEXEC || PAX_ASLR
-+	help
-+	  If you say Y here, the /proc/<pid>/maps and /proc/<pid>/stat files will
-+	  give no information about the addresses of its mappings if
-+	  PaX features that rely on random addresses are enabled on the task.
-+	  If you use PaX it is greatly recommended that you say Y here as it
-+	  closes up a hole that makes the full ASLR useless for suid
-+	  binaries.
++	while (alloc_pop()) ;
@@ -10472,11 +10143,6 @@
-+config GRKERNSEC_BRUTE
-+	bool "Deter exploit bruteforcing"
-+	help
-+	  If you say Y here, attempts to bruteforce exploits against forking
-+	  daemons such as apache or sshd will be deterred.  When a child of a
-+	  forking daemon is killed by PaX or crashes due to an illegal
-+	  instruction, the parent process will be delayed 30 seconds upon every
-+	  subsequent fork until the administrator is able to assess the
-+	  situation and restart the daemon.  It is recommended that you also
-+	  enable signal logging in the auditing section so that logs are
-+	  generated when a process performs an illegal instruction.
++	if (alloc_stack) {
++		if ((alloc_stack_size * sizeof (void *)) <= PAGE_SIZE)
++			kfree(alloc_stack);
++		else
++			vfree(alloc_stack);
++	}
@@ -10484,17 +10150,3 @@
-+config GRKERNSEC_MODSTOP
-+	bool "Runtime module disabling"
-+	depends on MODULES
-+	help
-+	  If you say Y here, you will be able to disable the ability to (un)load
-+	  modules at runtime.  This feature is useful if you need the ability
-+	  to load kernel modules at boot time, but do not want to allow an
-+	  attacker to load a rootkit kernel module into the system, or to remove
-+	  a loaded kernel module important to system functioning.  You should
-+	  enable the /dev/mem protection feature as well, since rootkits can be
-+	  inserted into the kernel via other methods than kernel modules.  Since
-+	  an untrusted module could still be loaded by modifying init scripts and
-+	  rebooting the system, it is also recommended that you enable the RBAC
-+	  system.  If you enable this option, a sysctl option with name
-+	  "disable_modules" will be created.  Setting this option to "1" disables
-+	  module loading.  After this option is set, no further writes to it are
-+	  allowed until the system is rebooted.
++	alloc_stack = NULL;
++	alloc_stack_size = 1;
++	alloc_stack_next = 1;
@@ -10502,15 +10154,2 @@
-+config GRKERNSEC_HIDESYM
-+	bool "Hide kernel symbols"
-+	help
-+	  If you say Y here, getting information on loaded modules, and
-+	  displaying all kernel symbols through a syscall will be restricted
-+	  to users with CAP_SYS_MODULE.  This option is only effective
-+	  provided the following conditions are met:
-+	  1) The kernel using grsecurity is not precompiled by some distribution
-+	  2) You are using the RBAC system and hiding other files such as your
-+	     kernel image and System.map
-+	  3) You have the additional /proc restrictions enabled, which removes
-+	     /proc/kcore
-+	  If the above conditions are met, this option will aid to provide a
-+	  useful protection against local and remote kernel exploitation of
-+	  overflows and arbitrary read/write vulnerabilities.
++	return;
++}
@@ -10518,3 +10157,8 @@
-+endmenu
-+menu "Role Based Access Control Options"
-+depends on GRKERNSEC
++int
++acl_alloc_stack_init(unsigned long size)
++{
++	if ((size * sizeof (void *)) <= PAGE_SIZE)
++		alloc_stack =
++		    (void **) kmalloc(size * sizeof (void *), GFP_KERNEL);
++	else
++		alloc_stack = (void **) vmalloc(size * sizeof (void *));
@@ -10522,6 +10166 @@
-+config GRKERNSEC_ACL_HIDEKERN
-+	bool "Hide kernel processes"
-+	help
-+	  If you say Y here, all kernel threads will be hidden to all
-+	  processes but those whose subject has the "view hidden processes"
-+	  flag.
++	alloc_stack_size = size;
@@ -10529,8 +10168,32 @@
-+config GRKERNSEC_ACL_MAXTRIES
-+	int "Maximum tries before password lockout"
-+	default 3
-+	help
-+	  This option enforces the maximum number of times a user can attempt
-+	  to authorize themselves with the grsecurity RBAC system before being
-+	  denied the ability to attempt authorization again for a specified time.
-+	  The lower the number, the harder it will be to brute-force a password.
++	if (!alloc_stack)
++		return 0;
++	else
++		return 1;
++}
+diff -urNp linux-2.6.17.4/grsecurity/gracl.c linux-2.6.17.4/grsecurity/gracl.c
+--- linux-2.6.17.4/grsecurity/gracl.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/gracl.c	2006-07-01 17:35:39.000000000 -0400
+@@ -0,0 +1,3547 @@
++#include <linux/kernel.h>
++#include <linux/module.h>
++#include <linux/sched.h>
++#include <linux/mm.h>
++#include <linux/file.h>
++#include <linux/fs.h>
++#include <linux/namei.h>
++#include <linux/mount.h>
++#include <linux/tty.h>
++#include <linux/proc_fs.h>
++#include <linux/smp_lock.h>
++#include <linux/slab.h>
++#include <linux/vmalloc.h>
++#include <linux/types.h>
++#include <linux/capability.h>
++#include <linux/sysctl.h>
++#include <linux/netdevice.h>
++#include <linux/ptrace.h>
++#include <linux/gracl.h>
++#include <linux/gralloc.h>
++#include <linux/grsecurity.h>
++#include <linux/grinternal.h>
++#include <linux/percpu.h>
@@ -10538,8 +10201,3 @@
-+config GRKERNSEC_ACL_TIMEOUT
-+	int "Time to wait after max password tries, in seconds"
-+	default 30
-+	help
-+	  This option specifies the time the user must wait after attempting to
-+	  authorize to the RBAC system with the maximum number of invalid
-+	  passwords.  The higher the number, the harder it will be to brute-force
-+	  a password.
++#include <asm/uaccess.h>
++#include <asm/errno.h>
++#include <asm/mman.h>
@@ -10547,3 +10205,3 @@
-+endmenu
-+menu "Filesystem Protections"
-+depends on GRKERNSEC
++static struct acl_role_db acl_role_set;
++static struct name_db name_set;
++static struct inodev_db inodev_set;
@@ -10551,11 +10209,3 @@
-+config GRKERNSEC_PROC
-+	bool "Proc restrictions"
-+	help
-+	  If you say Y here, the permissions of the /proc filesystem
-+	  will be altered to enhance system security and privacy.  You MUST
-+  	  choose either a user only restriction or a user and group restriction.
-+	  Depending upon the option you choose, you can either restrict users to
-+	  see only the processes they themselves run, or choose a group that can
-+	  view all processes and files normally restricted to root if you choose
-+	  the "restrict to user only" option.  NOTE: If you're running identd as
-+	  a non-root user, you will have to run it as the group you specify here.
++/* for keeping track of userspace pointers used for subjects, so we
++   can share references in the kernel as well
++*/
@@ -10563,7 +10213,2 @@
-+config GRKERNSEC_PROC_USER
-+	bool "Restrict /proc to user only"
-+	depends on GRKERNSEC_PROC
-+	help
-+	  If you say Y here, non-root users will only be able to view their own
-+	  processes, and restricts them from viewing network-related information,
-+	  and viewing kernel symbol and module information.
++static struct dentry *real_root;
++static struct vfsmount *real_root_mnt;
@@ -10571,8 +10216 @@
-+config GRKERNSEC_PROC_USERGROUP
-+	bool "Allow special group"
-+	depends on GRKERNSEC_PROC && !GRKERNSEC_PROC_USER
-+	help
-+	  If you say Y here, you will be able to select a group that will be
-+	  able to view all processes, network-related information, and
-+	  kernel and symbol information.  This option is useful if you want
-+	  to run identd as a non-root user.
++static struct acl_subj_map_db subj_map_set;
@@ -10580,4 +10218 @@
-+config GRKERNSEC_PROC_GID
-+	int "GID for special group"
-+	depends on GRKERNSEC_PROC_USERGROUP
-+	default 1001
++static struct acl_role_label *default_role;
@@ -10585,7 +10220 @@
-+config GRKERNSEC_PROC_ADD
-+	bool "Additional restrictions"
-+	depends on GRKERNSEC_PROC_USER || GRKERNSEC_PROC_USERGROUP
-+	help
-+	  If you say Y here, additional restrictions will be placed on
-+	  /proc that keep normal users from viewing device information and 
-+	  slabinfo information that could be useful for exploits.
++static u16 acl_sp_role_value;
@@ -10593,9 +10222,3 @@
-+config GRKERNSEC_LINK
-+	bool "Linking restrictions"
-+	help
-+	  If you say Y here, /tmp race exploits will be prevented, since users
-+	  will no longer be able to follow symlinks owned by other users in
-+	  world-writable +t directories (i.e. /tmp), unless the owner of the
-+	  symlink is the owner of the directory. users will also not be
-+	  able to hardlink to files they do not own.  If the sysctl option is
-+	  enabled, a sysctl option with name "linking_restrictions" is created.
++extern char *gr_shared_page[4];
++static DECLARE_MUTEX(gr_dev_sem);
++rwlock_t gr_inode_lock = RW_LOCK_UNLOCKED;
@@ -10603,8 +10226 @@
-+config GRKERNSEC_FIFO
-+	bool "FIFO restrictions"
-+	help
-+	  If you say Y here, users will not be able to write to FIFOs they don't
-+	  own in world-writable +t directories (i.e. /tmp), unless the owner of
-+	  the FIFO is the same owner of the directory it's held in.  If the sysctl
-+	  option is enabled, a sysctl option with name "fifo_restrictions" is
-+	  created.
++struct gr_arg *gr_usermode;
@@ -10612,7 +10228 @@
-+config GRKERNSEC_CHROOT
-+	bool "Chroot jail restrictions"
-+	help
-+	  If you say Y here, you will be able to choose several options that will
-+	  make breaking out of a chrooted jail much more difficult.  If you
-+	  encounter no software incompatibilities with the following options, it
-+	  is recommended that you enable each one.
++static unsigned int gr_status = GR_STATUS_INIT;
@@ -10620,7 +10230,2 @@
-+config GRKERNSEC_CHROOT_MOUNT
-+	bool "Deny mounts"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, processes inside a chroot will not be able to
-+	  mount or remount filesystems.  If the sysctl option is enabled, a
-+	  sysctl option with name "chroot_deny_mount" is created.
++extern int chkpw(struct gr_arg *entry, unsigned char *salt, unsigned char *sum);
++extern void gr_clear_learn_entries(void);
@@ -10628,9 +10233,4 @@
-+config GRKERNSEC_CHROOT_DOUBLE
-+	bool "Deny double-chroots"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, processes inside a chroot will not be able to chroot
-+	  again outside the chroot.  This is a widely used method of breaking
-+	  out of a chroot jail and should not be allowed.  If the sysctl 
-+	  option is enabled, a sysctl option with name 
-+	  "chroot_deny_chroot" is created.
++#ifdef CONFIG_GRKERNSEC_RESLOG
++extern void gr_log_resource(const struct task_struct *task,
++			    const int res, const unsigned long wanted, const int gt);
++#endif
@@ -10638,11 +10238,3 @@
-+config GRKERNSEC_CHROOT_PIVOT
-+	bool "Deny pivot_root in chroot"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, processes inside a chroot will not be able to use
-+	  a function called pivot_root() that was introduced in Linux 2.3.41.  It
-+	  works similar to chroot in that it changes the root filesystem.  This
-+	  function could be misused in a chrooted process to attempt to break out
-+	  of the chroot, and therefore should not be allowed.  If the sysctl
-+	  option is enabled, a sysctl option with name "chroot_deny_pivot" is
-+	  created.
++extern char * __d_path(struct dentry *dentry, struct vfsmount *vfsmnt,
++                        struct dentry *root, struct vfsmount *rootmnt,
++                        char *buffer, int buflen);
@@ -10650,11 +10242,2 @@
-+config GRKERNSEC_CHROOT_CHDIR
-+	bool "Enforce chdir(\"/\") on all chroots"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, the current working directory of all newly-chrooted
-+	  applications will be set to the the root directory of the chroot.
-+	  The man page on chroot(2) states:
-+	  Note that this call does not change  the  current  working
-+	  directory,  so  that `.' can be outside the tree rooted at
-+	  `/'.  In particular, the  super-user  can  escape  from  a
-+	  `chroot jail' by doing `mkdir foo; chroot foo; cd ..'.
++unsigned char *gr_system_salt;
++unsigned char *gr_system_sum;
@@ -10662,3 +10245,2 @@
-+	  It is recommended that you say Y here, since it's not known to break
-+	  any software.  If the sysctl option is enabled, a sysctl option with
-+	  name "chroot_enforce_chdir" is created.
++static struct sprole_pw **acl_special_roles = NULL;
++static __u16 num_sprole_pws = 0;
@@ -10666,9 +10248 @@
-+config GRKERNSEC_CHROOT_CHMOD
-+	bool "Deny (f)chmod +s"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, processes inside a chroot will not be able to chmod
-+	  or fchmod files to make them have suid or sgid bits.  This protects
-+	  against another published method of breaking a chroot.  If the sysctl
-+	  option is enabled, a sysctl option with name "chroot_deny_chmod" is
-+	  created.
++static struct acl_role_label *kernel_role = NULL;
@@ -10676,8 +10250,2 @@
-+config GRKERNSEC_CHROOT_FCHDIR
-+	bool "Deny fchdir out of chroot"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, a well-known method of breaking chroots by fchdir'ing
-+	  to a file descriptor of the chrooting process that points to a directory
-+	  outside the filesystem will be stopped.  If the sysctl option
-+	  is enabled, a sysctl option with name "chroot_deny_fchdir" is created.
++static unsigned int gr_auth_attempts = 0;
++static unsigned long gr_auth_expires = 0UL;
@@ -10685,13 +10253,4 @@
-+config GRKERNSEC_CHROOT_MKNOD
-+	bool "Deny mknod"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, processes inside a chroot will not be allowed to
-+	  mknod.  The problem with using mknod inside a chroot is that it
-+	  would allow an attacker to create a device entry that is the same
-+	  as one on the physical root of your system, which could range from
-+	  anything from the console device to a device for your harddrive (which
-+	  they could then use to wipe the drive or steal data).  It is recommended
-+	  that you say Y here, unless you run into software incompatibilities.
-+	  If the sysctl option is enabled, a sysctl option with name
-+	  "chroot_deny_mknod" is created.
++extern struct vfsmount *sock_mnt;
++extern struct vfsmount *pipe_mnt;
++extern struct vfsmount *shm_mnt;
++static struct acl_object_label *fakefs_obj;
@@ -10699,8 +10258,4 @@
-+config GRKERNSEC_CHROOT_SHMAT
-+	bool "Deny shmat() out of chroot"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, processes inside a chroot will not be able to attach
-+	  to shared memory segments that were created outside of the chroot jail.
-+	  It is recommended that you say Y here.  If the sysctl option is enabled,
-+	  a sysctl option with name "chroot_deny_shmat" is created.
++extern int gr_init_uidset(void);
++extern void gr_free_uidset(void);
++extern void gr_remove_uid(uid_t uid);
++extern int gr_find_uid(uid_t uid);
@@ -10708,9 +10263,5 @@
-+config GRKERNSEC_CHROOT_UNIX
-+	bool "Deny access to abstract AF_UNIX sockets out of chroot"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, processes inside a chroot will not be able to
-+	  connect to abstract (meaning not belonging to a filesystem) Unix
-+	  domain sockets that were bound outside of a chroot.  It is recommended
-+	  that you say Y here.  If the sysctl option is enabled, a sysctl option
-+	  with name "chroot_deny_unix" is created.
++__inline__ int
++gr_acl_is_enabled(void)
++{
++	return (gr_status & GR_READY);
++}
@@ -10718,9 +10269,14 @@
-+config GRKERNSEC_CHROOT_FINDTASK
-+	bool "Protect outside processes"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, processes inside a chroot will not be able to
-+	  kill, send signals with fcntl, ptrace, capget, setpgid, getpgid,
-+	  getsid, or view any process outside of the chroot.  If the sysctl
-+	  option is enabled, a sysctl option with name "chroot_findtask" is
-+	  created.
++char gr_roletype_to_char(void)
++{
++	switch (current->role->roletype &
++		(GR_ROLE_DEFAULT | GR_ROLE_USER | GR_ROLE_GROUP |
++		 GR_ROLE_SPECIAL)) {
++	case GR_ROLE_DEFAULT:
++		return 'D';
++	case GR_ROLE_USER:
++		return 'U';
++	case GR_ROLE_GROUP:
++		return 'G';
++	case GR_ROLE_SPECIAL:
++		return 'S';
++	}
@@ -10728,10 +10284,2 @@
-+config GRKERNSEC_CHROOT_NICE
-+	bool "Restrict priority changes"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, processes inside a chroot will not be able to raise
-+	  the priority of processes in the chroot, or alter the priority of
-+	  processes outside the chroot.  This provides more security than simply
-+	  removing CAP_SYS_NICE from the process' capability set.  If the
-+	  sysctl option is enabled, a sysctl option with name "chroot_restrict_nice"
-+	  is created.
++	return 'X';
++}
@@ -10739,9 +10287,10 @@
-+config GRKERNSEC_CHROOT_SYSCTL
-+	bool "Deny sysctl writes"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, an attacker in a chroot will not be able to
-+	  write to sysctl entries, either by sysctl(2) or through a /proc
-+	  interface.  It is strongly recommended that you say Y here. If the
-+	  sysctl option is enabled, a sysctl option with name
-+	  "chroot_deny_sysctl" is created.
++__inline__ int
++gr_acl_tpe_check(void)
++{
++	if (unlikely(!(gr_status & GR_READY)))
++		return 0;
++	if (current->role->roletype & GR_ROLE_TPE)
++		return 1;
++	else
++		return 0;
++}
@@ -10749,12 +10298,11 @@
-+config GRKERNSEC_CHROOT_CAPS
-+	bool "Capability restrictions"
-+	depends on GRKERNSEC_CHROOT
-+	help
-+	  If you say Y here, the capabilities on all root processes within a
-+	  chroot jail will be lowered to stop module insertion, raw i/o,
-+	  system and net admin tasks, rebooting the system, modifying immutable
-+	  files, modifying IPC owned by another, and changing the system time.
-+	  This is left an option because it can break some apps.  Disable this
-+	  if your chrooted apps are having problems performing those kinds of
-+	  tasks.  If the sysctl option is enabled, a sysctl option with
-+	  name "chroot_caps" is created.
++int
++gr_handle_rawio(const struct inode *inode)
++{
++#ifdef CONFIG_GRKERNSEC_CHROOT_CAPS
++	if (inode && S_ISBLK(inode->i_mode) &&
++	    grsec_enable_chroot_caps && proc_is_chrooted(current) &&
++	    !capable(CAP_SYS_RAWIO))
++		return 1;
++#endif
++	return 0;
++}
@@ -10762,3 +10310,9 @@
-+endmenu
-+menu "Kernel Auditing"
-+depends on GRKERNSEC
++static int
++gr_streq(const char *a, const char *b, const unsigned int lena, const unsigned int lenb)
++{
++	int i;
++	unsigned long *l1;
++	unsigned long *l2;
++	unsigned char *c1;
++	unsigned char *c2;
++	int num_longs;
@@ -10766,8 +10320,2 @@
-+config GRKERNSEC_AUDIT_GROUP
-+	bool "Single group for auditing"
-+	help
-+	  If you say Y here, the exec, chdir, (un)mount, and ipc logging features
-+	  will only operate on a group you specify.  This option is recommended
-+	  if you only want to watch certain users instead of having a large
-+	  amount of logs from the entire system.  If the sysctl option is enabled,
-+	  a sysctl option with name "audit_group" is created.
++	if (likely(lena != lenb))
++		return 0;
@@ -10775,4 +10323,2 @@
-+config GRKERNSEC_AUDIT_GID
-+	int "GID for auditing"
-+	depends on GRKERNSEC_AUDIT_GROUP
-+	default 1007
++	l1 = (unsigned long *)a;
++	l2 = (unsigned long *)b;
@@ -10780,10 +10326 @@
-+config GRKERNSEC_EXECLOG
-+	bool "Exec logging"
-+	help
-+	  If you say Y here, all execve() calls will be logged (since the
-+	  other exec*() calls are frontends to execve(), all execution
-+	  will be logged).  Useful for shell-servers that like to keep track
-+	  of their users.  If the sysctl option is enabled, a sysctl option with
-+	  name "exec_logging" is created.
-+	  WARNING: This option when enabled will produce a LOT of logs, especially
-+	  on an active system.
++	num_longs = lena / sizeof(unsigned long);
@@ -10791,8 +10328,4 @@
-+config GRKERNSEC_RESLOG
-+	bool "Resource logging"
-+	help
-+	  If you say Y here, all attempts to overstep resource limits will
-+	  be logged with the resource name, the requested size, and the current
-+	  limit.  It is highly recommended that you say Y here.  If the sysctl
-+	  option is enabled, a sysctl option with name "resource_logging" is
-+	  created.  If the RBAC system is enabled, the sysctl value is ignored.
++	for (i = num_longs; i--; l1++, l2++) {
++		if (unlikely(*l1 != *l2))
++			return 0;
++	}
@@ -10800,8 +10333,2 @@
-+config GRKERNSEC_CHROOT_EXECLOG
-+	bool "Log execs within chroot"
-+	help
-+	  If you say Y here, all executions inside a chroot jail will be logged
-+	  to syslog.  This can cause a large amount of logs if certain
-+	  applications (eg. djb's daemontools) are installed on the system, and
-+	  is therefore left as an option.  If the sysctl option is enabled, a
-+	  sysctl option with name "chroot_execlog" is created.
++	c1 = (unsigned char *) l1;
++	c2 = (unsigned char *) l2;
@@ -10809,5 +10336 @@
-+config GRKERNSEC_AUDIT_CHDIR
-+	bool "Chdir logging"
-+	help
-+	  If you say Y here, all chdir() calls will be logged.  If the sysctl
-+ 	  option is enabled, a sysctl option with name "audit_chdir" is created.
++	i = lena - (num_longs * sizeof(unsigned long));	
@@ -10815,6 +10338,4 @@
-+config GRKERNSEC_AUDIT_MOUNT
-+	bool "(Un)Mount logging"
-+	help
-+	  If you say Y here, all mounts and unmounts will be logged.  If the
-+	  sysctl option is enabled, a sysctl option with name "audit_mount" is
-+	  created.
++	for (; i--; c1++, c2++) {
++		if (unlikely(*c1 != *c2))
++			return 0;
++	}
@@ -10822,6 +10343,10 @@
-+config GRKERNSEC_AUDIT_IPC
-+	bool "IPC logging"
-+	help
-+	  If you say Y here, creation and removal of message queues, semaphores,
-+	  and shared memory will be logged.  If the sysctl option is enabled, a
-+	  sysctl option with name "audit_ipc" is created.
++	return 1;
++}
++		
++static char *
++gen_full_path(struct dentry *dentry, struct vfsmount *vfsmnt,
++              struct dentry *root, struct vfsmount *rootmnt, char *buf, int buflen)
++{
++	char *end = buf + buflen;
++	char *retval;
++	int namelen = 0;
@@ -10829,8 +10354 @@
-+config GRKERNSEC_SIGNAL
-+	bool "Signal logging"
-+	help
-+	  If you say Y here, certain important signals will be logged, such as
-+	  SIGSEGV, which will as a result inform you of when a error in a program
-+	  occurred, which in some cases could mean a possible exploit attempt.
-+	  If the sysctl option is enabled, a sysctl option with name
-+	  "signal_logging" is created.
++	*--end = '\0';
@@ -10838,7 +10356,2 @@
-+config GRKERNSEC_FORKFAIL
-+	bool "Fork failure logging"
-+	help
-+	  If you say Y here, all failed fork() attempts will be logged.
-+	  This could suggest a fork bomb, or someone attempting to overstep
-+	  their process limit.  If the sysctl option is enabled, a sysctl option
-+	  with name "forkfail_logging" is created.
++	retval = end - 1;
++	*retval = '/';
@@ -10846,6 +10359,10 @@
-+config GRKERNSEC_TIME
-+	bool "Time change logging"
-+	help
-+	  If you say Y here, any changes of the system clock will be logged.
-+	  If the sysctl option is enabled, a sysctl option with name
-+	  "timechange_logging" is created.
++	if (dentry == root && vfsmnt == rootmnt)
++		return retval;
++	if (dentry != vfsmnt->mnt_root && !IS_ROOT(dentry)) {
++		namelen = strlen(dentry->d_name.name);
++		buflen -= namelen;
++		if (buflen < 2)
++			goto err;
++		if (dentry->d_parent != root || vfsmnt != rootmnt)
++			buflen--;
++	}
@@ -10853,10 +10370,10 @@
-+config GRKERNSEC_PROC_IPADDR
-+	bool "/proc/<pid>/ipaddr support"
-+	help
-+	  If you say Y here, a new entry will be added to each /proc/<pid>
-+	  directory that contains the IP address of the person using the task.
-+	  The IP is carried across local TCP and AF_UNIX stream sockets.
-+	  This information can be useful for IDS/IPSes to perform remote response
-+	  to a local attack.  The entry is readable by only the owner of the
-+	  process (and root if he has CAP_DAC_OVERRIDE, which can be removed via
-+	  the RBAC system), and thus does not create privacy concerns.
++	retval = __d_path(dentry->d_parent, vfsmnt, root, rootmnt, buf, buflen);
++	if (unlikely(IS_ERR(retval)))
++err:
++		retval = strcpy(buf, "<path too long>");
++	else if (namelen != 0) {
++		end = buf + buflen - 1; // accounts for null termination
++		if (dentry->d_parent != root || vfsmnt != rootmnt)
++			*end++ = '/'; // accounted for above with buflen--
++		memcpy(end, dentry->d_name.name, namelen);
++	}
@@ -10864,13 +10381,2 @@
-+config GRKERNSEC_AUDIT_TEXTREL
-+	bool 'ELF text relocations logging (READ HELP)'
-+	depends on PAX_MPROTECT
-+	help
-+	  If you say Y here, text relocations will be logged with the filename
-+	  of the offending library or binary.  The purpose of the feature is
-+	  to help Linux distribution developers get rid of libraries and
-+	  binaries that need text relocations which hinder the future progress
-+	  of PaX.  Only Linux distribution developers should say Y here, and
-+	  never on a production machine, as this option creates an information
-+	  leak that could aid an attacker in defeating the randomization of
-+	  a single memory region.  If the sysctl option is enabled, a sysctl
-+	  option with name "audit_textrel" is created.
++	return retval;
++}
@@ -10878 +10384,5 @@
-+endmenu
++static char *
++__d_real_path(const struct dentry *dentry, const struct vfsmount *vfsmnt,
++		char *buf, int buflen)
++{
++	char *res;
@@ -10880,2 +10390,3 @@
-+menu "Executable Protections"
-+depends on GRKERNSEC
++	/* we can use real_root, real_root_mnt, because this is only called
++	   by the RBAC system */
++	res = gen_full_path((struct dentry *)dentry, (struct vfsmount *)vfsmnt, real_root, real_root_mnt, buf, buflen);
@@ -10883,7 +10394,2 @@
-+config GRKERNSEC_EXECVE
-+	bool "Enforce RLIMIT_NPROC on execs"
-+	help
-+	  If you say Y here, users with a resource limit on processes will
-+	  have the value checked during execve() calls.  The current system
-+	  only checks the system limit during fork() calls.  If the sysctl option
-+	  is enabled, a sysctl option with name "execve_limiting" is created.
++	return res;
++}
@@ -10891,10 +10397,7 @@
-+config GRKERNSEC_SHM
-+	bool "Destroy unused shared memory"
-+	depends on SYSVIPC
-+	help
-+	  If you say Y here, shared memory will be destroyed when no one is
-+	  attached to it.  Otherwise, resources involved with the shared
-+	  memory can be used up and not be associated with any process (as the
-+	  shared memory still exists, and the creating process has exited).  If
-+	  the sysctl option is enabled, a sysctl option with name
-+	  "destroy_unused_shm" is created.
++static char *
++d_real_path(const struct dentry *dentry, const struct vfsmount *vfsmnt,
++	    char *buf, int buflen)
++{
++	char *res;
++	struct dentry *root;
++	struct vfsmount *rootmnt;
@@ -10902,7 +10405,5 @@
-+config GRKERNSEC_DMESG
-+	bool "Dmesg(8) restriction"
-+	help
-+	  If you say Y here, non-root users will not be able to use dmesg(8)
-+	  to view up to the last 4kb of messages in the kernel's log buffer.
-+	  If the sysctl option is enabled, a sysctl option with name "dmesg" is
-+	  created.
++	/* we can't use real_root, real_root_mnt, because they belong only to the RBAC system */
++	read_lock(&child_reaper->fs->lock);
++	root = dget(child_reaper->fs->root);
++	rootmnt = mntget(child_reaper->fs->rootmnt);
++	read_unlock(&child_reaper->fs->lock);
@@ -10910,11 +10411,3 @@
-+config GRKERNSEC_RANDPID
-+	bool "Randomized PIDs"
-+	help
-+	  If you say Y here, all PIDs created on the system will be
-+	  pseudo-randomly generated.  This is extremely effective along
-+	  with the /proc restrictions to disallow an attacker from guessing
-+	  pids of daemons, etc.  PIDs are also used in some cases as part
-+	  of a naming system for temporary files, so this option would keep
-+	  those filenames from being predicted as well.  We also use code
-+	  to make sure that PID numbers aren't reused too soon.  If the sysctl
-+	  option is enabled, a sysctl option with name "rand_pids" is created.
++	spin_lock(&dcache_lock);
++	res = gen_full_path((struct dentry *)dentry, (struct vfsmount *)vfsmnt, root, rootmnt, buf, buflen);
++	spin_unlock(&dcache_lock);
@@ -10922,8 +10415,4 @@
-+config GRKERNSEC_TPE
-+	bool "Trusted Path Execution (TPE)"
-+	help
-+	  If you say Y here, you will be able to choose a gid to add to the
-+	  supplementary groups of users you want to mark as "untrusted."
-+	  These users will not be able to execute any files that are not in
-+	  root-owned directories writable only by root.  If the sysctl option
-+	  is enabled, a sysctl option with name "tpe" is created.
++	dput(root);
++	mntput(rootmnt);
++	return res;
++}
@@ -10931,10 +10420,10 @@
-+config GRKERNSEC_TPE_ALL
-+	bool "Partially restrict non-root users"
-+	depends on GRKERNSEC_TPE
-+	help
-+	  If you say Y here, All non-root users other than the ones in the
-+	  group specified in the main TPE option will only be allowed to
-+	  execute files in directories they own that are not group or
-+	  world-writable, or in directories owned by root and writable only by
-+	  root.  If the sysctl option is enabled, a sysctl option with name
-+	  "tpe_restrict_all" is created.
++static char *
++gr_to_filename_rbac(const struct dentry *dentry, const struct vfsmount *mnt)
++{
++	char *ret;
++	spin_lock(&dcache_lock);
++	ret = __d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[0],smp_processor_id()),
++			     PAGE_SIZE);
++	spin_unlock(&dcache_lock);
++	return ret;
++}
@@ -10942,8 +10431,6 @@
-+config GRKERNSEC_TPE_INVERT
-+	bool "Invert GID option"
-+	depends on GRKERNSEC_TPE
-+	help
-+	  If you say Y here, the group you specify in the TPE configuration will
-+	  decide what group TPE restrictions will be *disabled* for.  This
-+	  option is useful if you want TPE restrictions to be applied to most
-+	  users on the system.
++char *
++gr_to_filename_nolock(const struct dentry *dentry, const struct vfsmount *mnt)
++{
++	return __d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[0],smp_processor_id()),
++			     PAGE_SIZE);
++}
@@ -10951,11 +10438,6 @@
-+config GRKERNSEC_TPE_GID
-+	int "GID for untrusted users"
-+	depends on GRKERNSEC_TPE && !GRKERNSEC_TPE_INVERT
-+	default 1005
-+	help
-+	  If you have selected the "Invert GID option" above, setting this
-+	  GID determines what group TPE restrictions will be *disabled* for.
-+	  If you have not selected the "Invert GID option" above, setting this
-+	  GID determines what group TPE restrictions will be *enabled* for.
-+	  If the sysctl option is enabled, a sysctl option with name "tpe_gid"
-+	  is created.
++char *
++gr_to_filename(const struct dentry *dentry, const struct vfsmount *mnt)
++{
++	return d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[0], smp_processor_id()),
++			   PAGE_SIZE);
++}
@@ -10963,11 +10445,6 @@
-+config GRKERNSEC_TPE_GID
-+	int "GID for trusted users"
-+	depends on GRKERNSEC_TPE && GRKERNSEC_TPE_INVERT
-+	default 1005
-+	help
-+	  If you have selected the "Invert GID option" above, setting this
-+	  GID determines what group TPE restrictions will be *disabled* for.
-+	  If you have not selected the "Invert GID option" above, setting this
-+	  GID determines what group TPE restrictions will be *enabled* for.
-+	  If the sysctl option is enabled, a sysctl option with name "tpe_gid"
-+	  is created.
++char *
++gr_to_filename1(const struct dentry *dentry, const struct vfsmount *mnt)
++{
++	return d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[1], smp_processor_id()),
++			   PAGE_SIZE);
++}
@@ -10975,3 +10452,6 @@
-+endmenu
-+menu "Network Protections"
-+depends on GRKERNSEC
++char *
++gr_to_filename2(const struct dentry *dentry, const struct vfsmount *mnt)
++{
++	return d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[2], smp_processor_id()),
++			   PAGE_SIZE);
++}
@@ -10979,8 +10459,6 @@
-+config GRKERNSEC_RANDNET
-+	bool "Larger entropy pools"
-+	help
-+	  If you say Y here, the entropy pools used for many features of Linux
-+	  and grsecurity will be doubled in size.  Since several grsecurity
-+	  features use additional randomness, it is recommended that you say Y
-+	  here.  Saying Y here has a similar effect as modifying
-+	  /proc/sys/kernel/random/poolsize.
++char *
++gr_to_filename3(const struct dentry *dentry, const struct vfsmount *mnt)
++{
++	return d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[3], smp_processor_id()),
++			   PAGE_SIZE);
++}
@@ -10988,7 +10466,8 @@
-+config GRKERNSEC_SOCKET
-+	bool "Socket restrictions"
-+	help
-+	  If you say Y here, you will be able to choose from several options.
-+	  If you assign a GID on your system and add it to the supplementary
-+	  groups of users you want to restrict socket access to, this patch
-+	  will perform up to three things, based on the option(s) you choose.
++__inline__ __u32
++to_gr_audit(const __u32 reqmode)
++{
++	/* masks off auditable permission flags, then shifts them to create
++	   auditing flags, and adds the special case of append auditing if
++	   we're requesting write */
++	return (((reqmode & GR_AUDIT_READ) << 10) | ((reqmode & GR_WRITE) ? GR_AUDIT_APPEND : 0));
++}
@@ -10996,8 +10475,5 @@
-+config GRKERNSEC_SOCKET_ALL
-+	bool "Deny any sockets to group"
-+	depends on GRKERNSEC_SOCKET
-+	help
-+	  If you say Y here, you will be able to choose a GID of whose users will
-+	  be unable to connect to other hosts from your machine or run server
-+	  applications from your machine.  If the sysctl option is enabled, a
-+	  sysctl option with name "socket_all" is created.
++struct acl_subject_label *
++lookup_subject_map(const struct acl_subject_label *userp)
++{
++	unsigned int index = shash(userp, subj_map_set.s_size);
++	struct subject_map *match;
@@ -11005,9 +10481 @@
-+config GRKERNSEC_SOCKET_ALL_GID
-+	int "GID to deny all sockets for"
-+	depends on GRKERNSEC_SOCKET_ALL
-+	default 1004
-+	help
-+	  Here you can choose the GID to disable socket access for. Remember to
-+	  add the users you want socket access disabled for to the GID
-+	  specified here.  If the sysctl option is enabled, a sysctl option
-+	  with name "socket_all_gid" is created.
++	match = subj_map_set.s_hash[index];
@@ -11015,10 +10483,2 @@
-+config GRKERNSEC_SOCKET_CLIENT
-+	bool "Deny client sockets to group"
-+	depends on GRKERNSEC_SOCKET
-+	help
-+	  If you say Y here, you will be able to choose a GID of whose users will
-+	  be unable to connect to other hosts from your machine, but will be
-+	  able to run servers.  If this option is enabled, all users in the group
-+	  you specify will have to use passive mode when initiating ftp transfers
-+	  from the shell on your machine.  If the sysctl option is enabled, a
-+	  sysctl option with name "socket_client" is created.
++	while (match && match->user != userp)
++		match = match->next;
@@ -11026,9 +10486,5 @@
-+config GRKERNSEC_SOCKET_CLIENT_GID
-+	int "GID to deny client sockets for"
-+	depends on GRKERNSEC_SOCKET_CLIENT
-+	default 1003
-+	help
-+	  Here you can choose the GID to disable client socket access for.
-+	  Remember to add the users you want client socket access disabled for to
-+	  the GID specified here.  If the sysctl option is enabled, a sysctl
-+	  option with name "socket_client_gid" is created.
++	if (match != NULL)
++		return match->kernel;
++	else
++		return NULL;
++}
@@ -11036,17 +10492,5 @@
-+config GRKERNSEC_SOCKET_SERVER
-+	bool "Deny server sockets to group"
-+	depends on GRKERNSEC_SOCKET
-+	help
-+	  If you say Y here, you will be able to choose a GID of whose users will
-+	  be unable to run server applications from your machine.  If the sysctl
-+	  option is enabled, a sysctl option with name "socket_server" is created.
-+
-+config GRKERNSEC_SOCKET_SERVER_GID
-+	int "GID to deny server sockets for"
-+	depends on GRKERNSEC_SOCKET_SERVER
-+	default 1002
-+	help
-+	  Here you can choose the GID to disable server socket access for.
-+	  Remember to add the users you want server socket access disabled for to
-+	  the GID specified here.  If the sysctl option is enabled, a sysctl
-+	  option with name "socket_server_gid" is created.
++static void
++insert_subj_map_entry(struct subject_map *subjmap)
++{
++	unsigned int index = shash(subjmap->user, subj_map_set.s_size);
++	struct subject_map **curr;
@@ -11054,3 +10498 @@
-+endmenu
-+menu "Sysctl support"
-+depends on GRKERNSEC && SYSCTL
++	subjmap->prev = NULL;
@@ -11058,13 +10500,3 @@
-+config GRKERNSEC_SYSCTL
-+	bool "Sysctl support"
-+	help
-+	  If you say Y here, you will be able to change the options that
-+	  grsecurity runs with at bootup, without having to recompile your
-+	  kernel.  You can echo values to files in /proc/sys/kernel/grsecurity
-+	  to enable (1) or disable (0) various features.  All the sysctl entries
-+	  are mutable until the "grsec_lock" entry is set to a non-zero value.
-+	  All features enabled in the kernel configuration are disabled at boot
-+	  if you do not say Y to the "Turn on features by default" option.
-+	  All options should be set at startup, and the grsec_lock entry should
-+	  be set to a non-zero value after all the options are set.
-+	  *THIS IS EXTREMELY IMPORTANT*
++	curr = &subj_map_set.s_hash[index];
++	if (*curr != NULL)
++		(*curr)->prev = subjmap;
@@ -11072,11 +10504,2 @@
-+config GRKERNSEC_SYSCTL_ON
-+	bool "Turn on features by default"
-+	depends on GRKERNSEC_SYSCTL
-+	help
-+	  If you say Y here, instead of having all features enabled in the
-+	  kernel configuration disabled at boot time, the features will be
-+	  enabled at boot time.  It is recommended you say Y here unless
-+	  there is some reason you would want all sysctl-tunable features to
-+	  be disabled by default.  As mentioned elsewhere, it is important
-+	  to enable the grsec_lock entry once you have finished modifying
-+	  the sysctl entries.
++	subjmap->next = *curr;
++	*curr = subjmap;
@@ -11084,3 +10507,2 @@
-+endmenu
-+menu "Logging Options"
-+depends on GRKERNSEC
++	return;
++}
@@ -11088,9 +10510,8 @@
-+config GRKERNSEC_FLOODTIME
-+	int "Seconds in between log messages (minimum)"
-+	default 10
-+	help
-+	  This option allows you to enforce the number of seconds between
-+	  grsecurity log messages.  The default should be suitable for most
-+	  people, however, if you choose to change it, choose a value small enough
-+	  to allow informative logs to be produced, but large enough to
-+	  prevent flooding.
++static struct acl_role_label *
++lookup_acl_role_label(const struct task_struct *task, const uid_t uid,
++		      const gid_t gid)
++{
++	unsigned int index = rhash(uid, GR_ROLE_USER, acl_role_set.r_size);
++	struct acl_role_label *match;
++	struct role_allowed_ip *ipp;
++	unsigned int x;
@@ -11098,9 +10519 @@
-+config GRKERNSEC_FLOODBURST
-+	int "Number of messages in a burst (maximum)"
-+	default 4
-+	help
-+	  This option allows you to choose the maximum number of messages allowed
-+	  within the flood time interval you chose in a separate option.  The
-+	  default should be suitable for most people, however if you find that
-+	  many of your logs are being interpreted as flooding, you may want to
-+	  raise this value.
++	match = acl_role_set.r_hash[index];
@@ -11108 +10521,15 @@
-+endmenu
++	while (match) {
++		if ((match->roletype & (GR_ROLE_DOMAIN | GR_ROLE_USER)) == (GR_ROLE_DOMAIN | GR_ROLE_USER)) {
++			for (x = 0; x < match->domain_child_num; x++) {
++				if (match->domain_children[x] == uid)
++					goto found;
++			}
++		} else if (match->uidgid == uid && match->roletype & GR_ROLE_USER)
++			break;
++		match = match->next;
++	}
++found:
++	if (match == NULL) {
++	      try_group:
++		index = rhash(gid, GR_ROLE_GROUP, acl_role_set.r_size);
++		match = acl_role_set.r_hash[index];
@@ -11110,13 +10537,35 @@
-+endmenu
-diff --git a/grsecurity/Makefile b/grsecurity/Makefile
-new file mode 100644
-index 0000000000000000000000000000000000000000..c7369ec2a9fb25f8f6ef5a5ce8eac929dd4a4938
---- /dev/null
-+++ b/grsecurity/Makefile
-@@ -0,0 +1,20 @@
-+# grsecurity's ACL system was originally written in 2001 by Michael Dalton
-+# during 2001-2005 it has been completely redesigned by Brad Spengler
-+# into an RBAC system
-+#
-+# All code in this directory and various hooks inserted throughout the kernel
-+# are copyright Brad Spengler, and released under the GPL v2 or higher
++		while (match) {
++			if ((match->roletype & (GR_ROLE_DOMAIN | GR_ROLE_GROUP)) == (GR_ROLE_DOMAIN | GR_ROLE_GROUP)) {
++				for (x = 0; x < match->domain_child_num; x++) {
++					if (match->domain_children[x] == gid)
++						goto found2;
++				}
++			} else if (match->uidgid == gid && match->roletype & GR_ROLE_GROUP)
++				break;
++			match = match->next;
++		}
++found2:
++		if (match == NULL)
++			match = default_role;
++		if (match->allowed_ips == NULL)
++			return match;
++		else {
++			for (ipp = match->allowed_ips; ipp; ipp = ipp->next) {
++				if (likely
++				    ((ntohl(task->signal->curr_ip) & ipp->netmask) ==
++				     (ntohl(ipp->addr) & ipp->netmask)))
++					return match;
++			}
++			match = default_role;
++		}
++	} else if (match->allowed_ips == NULL) {
++		return match;
++	} else {
++		for (ipp = match->allowed_ips; ipp; ipp = ipp->next) {
++			if (likely
++			    ((ntohl(task->signal->curr_ip) & ipp->netmask) ==
++			     (ntohl(ipp->addr) & ipp->netmask)))
++				return match;
++		}
++		goto try_group;
++	}
@@ -11124,3 +10573,2 @@
-+obj-y = grsec_chdir.o grsec_chroot.o grsec_exec.o grsec_fifo.o grsec_fork.o \
-+	grsec_mount.o grsec_rand.o grsec_sig.o grsec_sock.o grsec_sysctl.o \
-+	grsec_time.o grsec_tpe.o grsec_ipc.o grsec_link.o grsec_textrel.o
++	return match;
++}
@@ -11128,4 +10576,6 @@
-+obj-$(CONFIG_GRKERNSEC) += grsec_init.o grsum.o gracl.o gracl_ip.o gracl_segv.o \
-+	gracl_cap.o gracl_alloc.o gracl_shm.o grsec_mem.o gracl_fs.o \
-+	gracl_learn.o grsec_log.o
-+obj-$(CONFIG_GRKERNSEC_RESLOG) += gracl_res.o
++struct acl_subject_label *
++lookup_acl_subj_label(const ino_t ino, const dev_t dev,
++		      const struct acl_role_label *role)
++{
++	unsigned int index = fhash(ino, dev, role->subj_hash_size);
++	struct acl_subject_label *match;
@@ -11133,3 +10583 @@
-+ifndef CONFIG_GRKERNSEC
-+obj-y += grsec_disabled.o
-+endif
++	match = role->subj_hash[index];
@@ -11137,29 +10585,4 @@
-diff --git a/grsecurity/gracl.c b/grsecurity/gracl.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..95b15acc1c2ec25138c641c4a84c529a7b158ff1
---- /dev/null
-+++ b/grsecurity/gracl.c
-@@ -0,0 +1,3547 @@
-+#include <linux/kernel.h>
-+#include <linux/module.h>
-+#include <linux/sched.h>
-+#include <linux/mm.h>
-+#include <linux/file.h>
-+#include <linux/fs.h>
-+#include <linux/namei.h>
-+#include <linux/mount.h>
-+#include <linux/tty.h>
-+#include <linux/proc_fs.h>
-+#include <linux/smp_lock.h>
-+#include <linux/slab.h>
-+#include <linux/vmalloc.h>
-+#include <linux/types.h>
-+#include <linux/capability.h>
-+#include <linux/sysctl.h>
-+#include <linux/netdevice.h>
-+#include <linux/ptrace.h>
-+#include <linux/gracl.h>
-+#include <linux/gralloc.h>
-+#include <linux/grsecurity.h>
-+#include <linux/grinternal.h>
-+#include <linux/percpu.h>
++	while (match && (match->inode != ino || match->device != dev ||
++	       (match->mode & GR_DELETED))) {
++		match = match->next;
++	}
@@ -11167,3 +10590,5 @@
-+#include <asm/uaccess.h>
-+#include <asm/errno.h>
-+#include <asm/mman.h>
++	if (match && !(match->mode & GR_DELETED))
++		return match;
++	else
++		return NULL;
++}
@@ -11171,3 +10596,6 @@
-+static struct acl_role_db acl_role_set;
-+static struct name_db name_set;
-+static struct inodev_db inodev_set;
++static struct acl_object_label *
++lookup_acl_obj_label(const ino_t ino, const dev_t dev,
++		     const struct acl_subject_label *subj)
++{
++	unsigned int index = fhash(ino, dev, subj->obj_hash_size);
++	struct acl_object_label *match;
@@ -11175,3 +10603 @@
-+/* for keeping track of userspace pointers used for subjects, so we
-+   can share references in the kernel as well
-+*/
++	match = subj->obj_hash[index];
@@ -11179,2 +10605,4 @@
-+static struct dentry *real_root;
-+static struct vfsmount *real_root_mnt;
++	while (match && (match->inode != ino || match->device != dev ||
++	       (match->mode & GR_DELETED))) {
++		match = match->next;
++	}
@@ -11182 +10610,5 @@
-+static struct acl_subj_map_db subj_map_set;
++	if (match && !(match->mode & GR_DELETED))
++		return match;
++	else
++		return NULL;
++}
@@ -11184 +10616,6 @@
-+static struct acl_role_label *default_role;
++static struct acl_object_label *
++lookup_acl_obj_label_create(const ino_t ino, const dev_t dev,
++		     const struct acl_subject_label *subj)
++{
++	unsigned int index = fhash(ino, dev, subj->obj_hash_size);
++	struct acl_object_label *match;
@@ -11186 +10623 @@
-+static u16 acl_sp_role_value;
++	match = subj->obj_hash[index];
@@ -11188,3 +10625,4 @@
-+extern char *gr_shared_page[4];
-+static DECLARE_MUTEX(gr_dev_sem);
-+rwlock_t gr_inode_lock = RW_LOCK_UNLOCKED;
++	while (match && (match->inode != ino || match->device != dev ||
++	       !(match->mode & GR_DELETED))) {
++		match = match->next;
++	}
@@ -11192 +10630,2 @@
-+struct gr_arg *gr_usermode;
++	if (match && (match->mode & GR_DELETED))
++		return match;
@@ -11194 +10633 @@
-+static unsigned int gr_status = GR_STATUS_INIT;
++	match = subj->obj_hash[index];
@@ -11196,2 +10635,4 @@
-+extern int chkpw(struct gr_arg *entry, unsigned char *salt, unsigned char *sum);
-+extern void gr_clear_learn_entries(void);
++	while (match && (match->inode != ino || match->device != dev ||
++	       (match->mode & GR_DELETED))) {
++		match = match->next;
++	}
@@ -11199,4 +10640,5 @@
-+#ifdef CONFIG_GRKERNSEC_RESLOG
-+extern void gr_log_resource(const struct task_struct *task,
-+			    const int res, const unsigned long wanted, const int gt);
-+#endif
++	if (match && !(match->mode & GR_DELETED))
++		return match;
++	else
++		return NULL;
++}
@@ -11204,3 +10646,7 @@
-+extern char * __d_path(struct dentry *dentry, struct vfsmount *vfsmnt,
-+                        struct dentry *root, struct vfsmount *rootmnt,
-+                        char *buffer, int buflen);
++static struct name_entry *
++lookup_name_entry(const char *name)
++{
++	unsigned int len = strlen(name);
++	unsigned int key = full_name_hash(name, len);
++	unsigned int index = key % name_set.n_size;
++	struct name_entry *match;
@@ -11208,2 +10654 @@
-+unsigned char *gr_system_salt;
-+unsigned char *gr_system_sum;
++	match = name_set.n_hash[index];
@@ -11211,2 +10656,2 @@
-+static struct sprole_pw **acl_special_roles = NULL;
-+static __u16 num_sprole_pws = 0;
++	while (match && (match->key != key || !gr_streq(match->name, name, match->len, len)))
++		match = match->next;
@@ -11214 +10659,2 @@
-+static struct acl_role_label *kernel_role = NULL;
++	return match;
++}
@@ -11216,2 +10662,5 @@
-+static unsigned int gr_auth_attempts = 0;
-+static unsigned long gr_auth_expires = 0UL;
++static struct inodev_entry *
++lookup_inodev_entry(const ino_t ino, const dev_t dev)
++{
++	unsigned int index = fhash(ino, dev, inodev_set.i_size);
++	struct inodev_entry *match;
@@ -11219,4 +10668 @@
-+extern struct vfsmount *sock_mnt;
-+extern struct vfsmount *pipe_mnt;
-+extern struct vfsmount *shm_mnt;
-+static struct acl_object_label *fakefs_obj;
++	match = inodev_set.i_hash[index];
@@ -11224,4 +10670,2 @@
-+extern int gr_init_uidset(void);
-+extern void gr_free_uidset(void);
-+extern void gr_remove_uid(uid_t uid);
-+extern int gr_find_uid(uid_t uid);
++	while (match && (match->nentry->inode != ino || match->nentry->device != dev))
++		match = match->next;
@@ -11229,4 +10673 @@
-+__inline__ int
-+gr_acl_is_enabled(void)
-+{
-+	return (gr_status & GR_READY);
++	return match;
@@ -11235 +10676,2 @@
-+char gr_roletype_to_char(void)
++static void
++insert_inodev_entry(struct inodev_entry *entry)
@@ -11237,12 +10679,3 @@
-+	switch (current->role->roletype &
-+		(GR_ROLE_DEFAULT | GR_ROLE_USER | GR_ROLE_GROUP |
-+		 GR_ROLE_SPECIAL)) {
-+	case GR_ROLE_DEFAULT:
-+		return 'D';
-+	case GR_ROLE_USER:
-+		return 'U';
-+	case GR_ROLE_GROUP:
-+		return 'G';
-+	case GR_ROLE_SPECIAL:
-+		return 'S';
-+	}
++	unsigned int index = fhash(entry->nentry->inode, entry->nentry->device,
++				    inodev_set.i_size);
++	struct inodev_entry **curr;
@@ -11250 +10683,10 @@
-+	return 'X';
++	entry->prev = NULL;
++
++	curr = &inodev_set.i_hash[index];
++	if (*curr != NULL)
++		(*curr)->prev = entry;
++	
++	entry->next = *curr;
++	*curr = entry;
++
++	return;
@@ -11253,2 +10695,2 @@
-+__inline__ int
-+gr_acl_tpe_check(void)
++static void
++__insert_acl_role_label(struct acl_role_label *role, uid_t uidgid)
@@ -11256,6 +10698,14 @@
-+	if (unlikely(!(gr_status & GR_READY)))
-+		return 0;
-+	if (current->role->roletype & GR_ROLE_TPE)
-+		return 1;
-+	else
-+		return 0;
++	unsigned int index =
++	    rhash(uidgid, role->roletype & (GR_ROLE_USER | GR_ROLE_GROUP), acl_role_set.r_size);
++	struct acl_role_label **curr;
++
++	role->prev = NULL;
++
++	curr = &acl_role_set.r_hash[index];
++	if (*curr != NULL)
++		(*curr)->prev = role;
++
++	role->next = *curr;
++	*curr = role;
++
++	return;
@@ -11264,2 +10714,2 @@
-+int
-+gr_handle_rawio(const struct inode *inode)
++static void
++insert_acl_role_label(struct acl_role_label *role)
@@ -11267,8 +10717 @@
-+#ifdef CONFIG_GRKERNSEC_CHROOT_CAPS
-+	if (inode && S_ISBLK(inode->i_mode) &&
-+	    grsec_enable_chroot_caps && proc_is_chrooted(current) &&
-+	    !capable(CAP_SYS_RAWIO))
-+		return 1;
-+#endif
-+	return 0;
-+}
++	int i;
@@ -11275,0 +10719,7 @@
++	if (role->roletype & GR_ROLE_DOMAIN) {
++		for (i = 0; i < role->domain_child_num; i++)
++			__insert_acl_role_label(role, role->domain_children[i]);
++	} else
++		__insert_acl_role_label(role, role->uidgid);
++}
++					
@@ -11277 +10727 @@
-+gr_streq(const char *a, const char *b, const unsigned int lena, const unsigned int lenb)
++insert_name_entry(char *name, const ino_t inode, const dev_t device)
@@ -11279,6 +10729,5 @@
-+	int i;
-+	unsigned long *l1;
-+	unsigned long *l2;
-+	unsigned char *c1;
-+	unsigned char *c2;
-+	int num_longs;
++	struct name_entry **curr, *nentry;
++	struct inodev_entry *ientry;
++	unsigned int len = strlen(name);
++	unsigned int key = full_name_hash(name, len);
++	unsigned int index = key % name_set.n_size;
@@ -11286,2 +10735 @@
-+	if (likely(lena != lenb))
-+		return 0;
++	curr = &name_set.n_hash[index];
@@ -11289,2 +10737,2 @@
-+	l1 = (unsigned long *)a;
-+	l2 = (unsigned long *)b;
++	while (*curr && ((*curr)->key != key || !gr_streq((*curr)->name, name, (*curr)->len, len)))
++		curr = &((*curr)->next);
@@ -11292 +10740,2 @@
-+	num_longs = lena / sizeof(unsigned long);
++	if (*curr != NULL)
++		return 1;
@@ -11294,4 +10743,7 @@
-+	for (i = num_longs; i--; l1++, l2++) {
-+		if (unlikely(*l1 != *l2))
-+			return 0;
-+	}
++	nentry = acl_alloc(sizeof (struct name_entry));
++	if (nentry == NULL)
++		return 0;
++	ientry = acl_alloc(sizeof (struct inodev_entry));
++	if (ientry == NULL)
++		return 0;
++	ientry->nentry = nentry;
@@ -11299,2 +10751,5 @@
-+	c1 = (unsigned char *) l1;
-+	c2 = (unsigned char *) l2;
++	nentry->key = key;
++	nentry->name = name;
++	nentry->inode = inode;
++	nentry->device = device;
++	nentry->len = len;
@@ -11302 +10757,6 @@
-+	i = lena - (num_longs * sizeof(unsigned long));	
++	nentry->prev = NULL;
++	curr = &name_set.n_hash[index];
++	if (*curr != NULL)
++		(*curr)->prev = nentry;
++	nentry->next = *curr;
++	*curr = nentry;
@@ -11304,4 +10764,2 @@
-+	for (; i--; c1++, c2++) {
-+		if (unlikely(*c1 != *c2))
-+			return 0;
-+	}
++	/* insert us into the table searchable by inode/dev */
++	insert_inodev_entry(ientry);
@@ -11311,8 +10768,0 @@
-+		
-+static char *
-+gen_full_path(struct dentry *dentry, struct vfsmount *vfsmnt,
-+              struct dentry *root, struct vfsmount *rootmnt, char *buf, int buflen)
-+{
-+	char *end = buf + buflen;
-+	char *retval;
-+	int namelen = 0;
@@ -11320 +10770,7 @@
-+	*--end = '\0';
++static void
++insert_acl_obj_label(struct acl_object_label *obj,
++		     struct acl_subject_label *subj)
++{
++	unsigned int index =
++	    fhash(obj->inode, obj->device, subj->obj_hash_size);
++	struct acl_object_label **curr;
@@ -11322,2 +10778,2 @@
-+	retval = end - 1;
-+	*retval = '/';
++	
++	obj->prev = NULL;
@@ -11325,10 +10781,3 @@
-+	if (dentry == root && vfsmnt == rootmnt)
-+		return retval;
-+	if (dentry != vfsmnt->mnt_root && !IS_ROOT(dentry)) {
-+		namelen = strlen(dentry->d_name.name);
-+		buflen -= namelen;
-+		if (buflen < 2)
-+			goto err;
-+		if (dentry->d_parent != root || vfsmnt != rootmnt)
-+			buflen--;
-+	}
++	curr = &subj->obj_hash[index];
++	if (*curr != NULL)
++		(*curr)->prev = obj;
@@ -11336,10 +10785,2 @@
-+	retval = __d_path(dentry->d_parent, vfsmnt, root, rootmnt, buf, buflen);
-+	if (unlikely(IS_ERR(retval)))
-+err:
-+		retval = strcpy(buf, "<path too long>");
-+	else if (namelen != 0) {
-+		end = buf + buflen - 1; // accounts for null termination
-+		if (dentry->d_parent != root || vfsmnt != rootmnt)
-+			*end++ = '/'; // accounted for above with buflen--
-+		memcpy(end, dentry->d_name.name, namelen);
-+	}
++	obj->next = *curr;
++	*curr = obj;
@@ -11347 +10788 @@
-+	return retval;
++	return;
@@ -11350,3 +10791,3 @@
-+static char *
-+__d_real_path(const struct dentry *dentry, const struct vfsmount *vfsmnt,
-+		char *buf, int buflen)
++static void
++insert_acl_subj_label(struct acl_subject_label *obj,
++		      struct acl_role_label *role)
@@ -11354 +10795,2 @@
-+	char *res;
++	unsigned int index = fhash(obj->inode, obj->device, role->subj_hash_size);
++	struct acl_subject_label **curr;
@@ -11356,3 +10798 @@
-+	/* we can use real_root, real_root_mnt, because this is only called
-+	   by the RBAC system */
-+	res = gen_full_path((struct dentry *)dentry, (struct vfsmount *)vfsmnt, real_root, real_root_mnt, buf, buflen);
++	obj->prev = NULL;
@@ -11360 +10800,8 @@
-+	return res;
++	curr = &role->subj_hash[index];
++	if (*curr != NULL)
++		(*curr)->prev = obj;
++
++	obj->next = *curr;
++	*curr = obj;
++
++	return;
@@ -11363,7 +10810 @@
-+static char *
-+d_real_path(const struct dentry *dentry, const struct vfsmount *vfsmnt,
-+	    char *buf, int buflen)
-+{
-+	char *res;
-+	struct dentry *root;
-+	struct vfsmount *rootmnt;
++/* allocating chained hash tables, so optimal size is where lambda ~ 1 */
@@ -11371,9 +10812,11 @@
-+	/* we can't use real_root, real_root_mnt, because they belong only to the RBAC system */
-+	read_lock(&child_reaper->fs->lock);
-+	root = dget(child_reaper->fs->root);
-+	rootmnt = mntget(child_reaper->fs->rootmnt);
-+	read_unlock(&child_reaper->fs->lock);
-+
-+	spin_lock(&dcache_lock);
-+	res = gen_full_path((struct dentry *)dentry, (struct vfsmount *)vfsmnt, root, rootmnt, buf, buflen);
-+	spin_unlock(&dcache_lock);
++static void *
++create_table(__u32 * len, int elementsize)
++{
++	unsigned int table_sizes[] = {
++		7, 13, 31, 61, 127, 251, 509, 1021, 2039, 4093, 8191, 16381,
++		32749, 65521, 131071, 262139, 524287, 1048573, 2097143,
++		4194301, 8388593, 16777213, 33554393, 67108859, 134217689,
++		268435399, 536870909, 1073741789, 2147483647
++	};
++	void *newtable = NULL;
++	unsigned int pwr = 0;
@@ -11381,4 +10824,3 @@
-+	dput(root);
-+	mntput(rootmnt);
-+	return res;
-+}
++	while ((pwr < ((sizeof (table_sizes) / sizeof (table_sizes[0])) - 1)) &&
++	       table_sizes[pwr] <= *len)
++		pwr++;
@@ -11386,10 +10828,2 @@
-+static char *
-+gr_to_filename_rbac(const struct dentry *dentry, const struct vfsmount *mnt)
-+{
-+	char *ret;
-+	spin_lock(&dcache_lock);
-+	ret = __d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[0],smp_processor_id()),
-+			     PAGE_SIZE);
-+	spin_unlock(&dcache_lock);
-+	return ret;
-+}
++	if (table_sizes[pwr] <= *len)
++		return newtable;
@@ -11397,6 +10831,5 @@
-+char *
-+gr_to_filename_nolock(const struct dentry *dentry, const struct vfsmount *mnt)
-+{
-+	return __d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[0],smp_processor_id()),
-+			     PAGE_SIZE);
-+}
++	if ((table_sizes[pwr] * elementsize) <= PAGE_SIZE)
++		newtable =
++		    kmalloc(table_sizes[pwr] * elementsize, GFP_KERNEL);
++	else
++		newtable = vmalloc(table_sizes[pwr] * elementsize);
@@ -11404,6 +10837 @@
-+char *
-+gr_to_filename(const struct dentry *dentry, const struct vfsmount *mnt)
-+{
-+	return d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[0], smp_processor_id()),
-+			   PAGE_SIZE);
-+}
++	*len = table_sizes[pwr];
@@ -11411,5 +10839 @@
-+char *
-+gr_to_filename1(const struct dentry *dentry, const struct vfsmount *mnt)
-+{
-+	return d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[1], smp_processor_id()),
-+			   PAGE_SIZE);
++	return newtable;
@@ -11418,2 +10842,2 @@
-+char *
-+gr_to_filename2(const struct dentry *dentry, const struct vfsmount *mnt)
++static int
++init_variables(const struct gr_arg *arg)
@@ -11421,3 +10845 @@
-+	return d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[2], smp_processor_id()),
-+			   PAGE_SIZE);
-+}
++	unsigned int stacksize;
@@ -11425,6 +10847,4 @@
-+char *
-+gr_to_filename3(const struct dentry *dentry, const struct vfsmount *mnt)
-+{
-+	return d_real_path(dentry, mnt, per_cpu_ptr(gr_shared_page[3], smp_processor_id()),
-+			   PAGE_SIZE);
-+}
++	subj_map_set.s_size = arg->role_db.num_subjects;
++	acl_role_set.r_size = arg->role_db.num_roles + arg->role_db.num_domain_children;
++	name_set.n_size = arg->role_db.num_objects;
++	inodev_set.i_size = arg->role_db.num_objects;
@@ -11432,8 +10852,3 @@
-+__inline__ __u32
-+to_gr_audit(const __u32 reqmode)
-+{
-+	/* masks off auditable permission flags, then shifts them to create
-+	   auditing flags, and adds the special case of append auditing if
-+	   we're requesting write */
-+	return (((reqmode & GR_AUDIT_READ) << 10) | ((reqmode & GR_WRITE) ? GR_AUDIT_APPEND : 0));
-+}
++	if (!subj_map_set.s_size || !acl_role_set.r_size ||
++	    !name_set.n_size || !inodev_set.i_size)
++		return 1;
@@ -11441,5 +10856,2 @@
-+struct acl_subject_label *
-+lookup_subject_map(const struct acl_subject_label *userp)
-+{
-+	unsigned int index = shash(userp, subj_map_set.s_size);
-+	struct subject_map *match;
++	if (!gr_init_uidset())
++		return 1;
@@ -11447 +10859 @@
-+	match = subj_map_set.s_hash[index];
++	/* set up the stack that holds allocation info */
@@ -11449,2 +10861 @@
-+	while (match && match->user != userp)
-+		match = match->next;
++	stacksize = arg->role_db.num_pointers + 5;
@@ -11452,5 +10863,2 @@
-+	if (match != NULL)
-+		return match->kernel;
-+	else
-+		return NULL;
-+}
++	if (!acl_alloc_stack_init(stacksize))
++		return 1;
@@ -11458,5 +10866,10 @@
-+static void
-+insert_subj_map_entry(struct subject_map *subjmap)
-+{
-+	unsigned int index = shash(subjmap->user, subj_map_set.s_size);
-+	struct subject_map **curr;
++	/* grab reference for the real root dentry and vfsmount */
++	read_lock(&child_reaper->fs->lock);
++	real_root_mnt = mntget(child_reaper->fs->rootmnt);
++	real_root = dget(child_reaper->fs->root);
++	read_unlock(&child_reaper->fs->lock);
++	
++	fakefs_obj = acl_alloc(sizeof(struct acl_object_label));
++	if (fakefs_obj == NULL)
++		return 1;
++	fakefs_obj->mode = GR_FIND | GR_READ | GR_WRITE | GR_EXEC;
@@ -11464 +10877,7 @@
-+	subjmap->prev = NULL;
++	subj_map_set.s_hash =
++	    (struct subject_map **) create_table(&subj_map_set.s_size, sizeof(void *));
++	acl_role_set.r_hash =
++	    (struct acl_role_label **) create_table(&acl_role_set.r_size, sizeof(void *));
++	name_set.n_hash = (struct name_entry **) create_table(&name_set.n_size, sizeof(void *));
++	inodev_set.i_hash =
++	    (struct inodev_entry **) create_table(&inodev_set.i_size, sizeof(void *));
@@ -11466,3 +10885,3 @@
-+	curr = &subj_map_set.s_hash[index];
-+	if (*curr != NULL)
-+		(*curr)->prev = subjmap;
++	if (!subj_map_set.s_hash || !acl_role_set.r_hash ||
++	    !name_set.n_hash || !inodev_set.i_hash)
++		return 1;
@@ -11470,2 +10889,8 @@
-+	subjmap->next = *curr;
-+	*curr = subjmap;
++	memset(subj_map_set.s_hash, 0,
++	       sizeof(struct subject_map *) * subj_map_set.s_size);
++	memset(acl_role_set.r_hash, 0,
++	       sizeof (struct acl_role_label *) * acl_role_set.r_size);
++	memset(name_set.n_hash, 0,
++	       sizeof (struct name_entry *) * name_set.n_size);
++	memset(inodev_set.i_hash, 0,
++	       sizeof (struct inodev_entry *) * inodev_set.i_size);
@@ -11473 +10898 @@
-+	return;
++	return 0;
@@ -11476,10 +10901,3 @@
-+static struct acl_role_label *
-+lookup_acl_role_label(const struct task_struct *task, const uid_t uid,
-+		      const gid_t gid)
-+{
-+	unsigned int index = rhash(uid, GR_ROLE_USER, acl_role_set.r_size);
-+	struct acl_role_label *match;
-+	struct role_allowed_ip *ipp;
-+	unsigned int x;
-+
-+	match = acl_role_set.r_hash[index];
++/* free information not needed after startup
++   currently contains user->kernel pointer mappings for subjects
++*/
@@ -11487,15 +10905,4 @@
-+	while (match) {
-+		if ((match->roletype & (GR_ROLE_DOMAIN | GR_ROLE_USER)) == (GR_ROLE_DOMAIN | GR_ROLE_USER)) {
-+			for (x = 0; x < match->domain_child_num; x++) {
-+				if (match->domain_children[x] == uid)
-+					goto found;
-+			}
-+		} else if (match->uidgid == uid && match->roletype & GR_ROLE_USER)
-+			break;
-+		match = match->next;
-+	}
-+found:
-+	if (match == NULL) {
-+	      try_group:
-+		index = rhash(gid, GR_ROLE_GROUP, acl_role_set.r_size);
-+		match = acl_role_set.r_hash[index];
++static void
++free_init_variables(void)
++{
++	__u32 i;
@@ -11503,21 +10910,5 @@
-+		while (match) {
-+			if ((match->roletype & (GR_ROLE_DOMAIN | GR_ROLE_GROUP)) == (GR_ROLE_DOMAIN | GR_ROLE_GROUP)) {
-+				for (x = 0; x < match->domain_child_num; x++) {
-+					if (match->domain_children[x] == gid)
-+						goto found2;
-+				}
-+			} else if (match->uidgid == gid && match->roletype & GR_ROLE_GROUP)
-+				break;
-+			match = match->next;
-+		}
-+found2:
-+		if (match == NULL)
-+			match = default_role;
-+		if (match->allowed_ips == NULL)
-+			return match;
-+		else {
-+			for (ipp = match->allowed_ips; ipp; ipp = ipp->next) {
-+				if (likely
-+				    ((ntohl(task->signal->curr_ip) & ipp->netmask) ==
-+				     (ntohl(ipp->addr) & ipp->netmask)))
-+					return match;
++	if (subj_map_set.s_hash) {
++		for (i = 0; i < subj_map_set.s_size; i++) {
++			if (subj_map_set.s_hash[i]) {
++				kfree(subj_map_set.s_hash[i]);
++				subj_map_set.s_hash[i] = NULL;
@@ -11525 +10915,0 @@
-+			match = default_role;
@@ -11527,10 +10917,6 @@
-+	} else if (match->allowed_ips == NULL) {
-+		return match;
-+	} else {
-+		for (ipp = match->allowed_ips; ipp; ipp = ipp->next) {
-+			if (likely
-+			    ((ntohl(task->signal->curr_ip) & ipp->netmask) ==
-+			     (ntohl(ipp->addr) & ipp->netmask)))
-+				return match;
-+		}
-+		goto try_group;
++
++		if ((subj_map_set.s_size * sizeof (struct subject_map *)) <=
++		    PAGE_SIZE)
++			kfree(subj_map_set.s_hash);
++		else
++			vfree(subj_map_set.s_hash);
@@ -11539 +10925 @@
-+	return match;
++	return;
@@ -11542,3 +10928,2 @@
-+struct acl_subject_label *
-+lookup_acl_subj_label(const ino_t ino, const dev_t dev,
-+		      const struct acl_role_label *role)
++static void
++free_variables(void)
@@ -11546,2 +10931,4 @@
-+	unsigned int index = fhash(ino, dev, role->subj_hash_size);
-+	struct acl_subject_label *match;
++	struct acl_subject_label *s;
++	struct acl_role_label *r;
++	struct task_struct *task, *task2;
++	unsigned int i, x;
@@ -11549 +10936 @@
-+	match = role->subj_hash[index];
++	gr_clear_learn_entries();
@@ -11551,4 +10938,8 @@
-+	while (match && (match->inode != ino || match->device != dev ||
-+	       (match->mode & GR_DELETED))) {
-+		match = match->next;
-+	}
++	read_lock(&tasklist_lock);
++	do_each_thread(task2, task) {
++		task->acl_sp_role = 0;
++		task->acl_role_id = 0;
++		task->acl = NULL;
++		task->role = NULL;
++	} while_each_thread(task2, task);
++	read_unlock(&tasklist_lock);
@@ -11556,19 +10947,7 @@
-+	if (match && !(match->mode & GR_DELETED))
-+		return match;
-+	else
-+		return NULL;
-+}
-+
-+static struct acl_object_label *
-+lookup_acl_obj_label(const ino_t ino, const dev_t dev,
-+		     const struct acl_subject_label *subj)
-+{
-+	unsigned int index = fhash(ino, dev, subj->obj_hash_size);
-+	struct acl_object_label *match;
-+
-+	match = subj->obj_hash[index];
-+
-+	while (match && (match->inode != ino || match->device != dev ||
-+	       (match->mode & GR_DELETED))) {
-+		match = match->next;
-+	}
++	/* release the reference to the real root dentry and vfsmount */
++	if (real_root)
++		dput(real_root);
++	real_root = NULL;
++	if (real_root_mnt)
++		mntput(real_root_mnt);
++	real_root_mnt = NULL;
@@ -11576,5 +10955 @@
-+	if (match && !(match->mode & GR_DELETED))
-+		return match;
-+	else
-+		return NULL;
-+}
++	/* free all object hash tables */
@@ -11582,6 +10957,25 @@
-+static struct acl_object_label *
-+lookup_acl_obj_label_create(const ino_t ino, const dev_t dev,
-+		     const struct acl_subject_label *subj)
-+{
-+	unsigned int index = fhash(ino, dev, subj->obj_hash_size);
-+	struct acl_object_label *match;
++	FOR_EACH_ROLE_START(r, i)
++		if (r->subj_hash == NULL)
++			break;
++		FOR_EACH_SUBJECT_START(r, s, x)
++			if (s->obj_hash == NULL)
++				break;
++			if ((s->obj_hash_size * sizeof (struct acl_object_label *)) <= PAGE_SIZE)
++				kfree(s->obj_hash);
++			else
++				vfree(s->obj_hash);
++		FOR_EACH_SUBJECT_END(s, x)
++		FOR_EACH_NESTED_SUBJECT_START(r, s)
++			if (s->obj_hash == NULL)
++				break;
++			if ((s->obj_hash_size * sizeof (struct acl_object_label *)) <= PAGE_SIZE)
++				kfree(s->obj_hash);
++			else
++				vfree(s->obj_hash);
++		FOR_EACH_NESTED_SUBJECT_END(s)
++		if ((r->subj_hash_size * sizeof (struct acl_subject_label *)) <= PAGE_SIZE)
++			kfree(r->subj_hash);
++		else
++			vfree(r->subj_hash);
++		r->subj_hash = NULL;
++	FOR_EACH_ROLE_END(r,i)
@@ -11589 +10983 @@
-+	match = subj->obj_hash[index];
++	acl_free_all();
@@ -11591,3 +10985,6 @@
-+	while (match && (match->inode != ino || match->device != dev ||
-+	       !(match->mode & GR_DELETED))) {
-+		match = match->next;
++	if (acl_role_set.r_hash) {
++		if ((acl_role_set.r_size * sizeof (struct acl_role_label *)) <=
++		    PAGE_SIZE)
++			kfree(acl_role_set.r_hash);
++		else
++			vfree(acl_role_set.r_hash);
@@ -11595,9 +10992,6 @@
-+
-+	if (match && (match->mode & GR_DELETED))
-+		return match;
-+
-+	match = subj->obj_hash[index];
-+
-+	while (match && (match->inode != ino || match->device != dev ||
-+	       (match->mode & GR_DELETED))) {
-+		match = match->next;
++	if (name_set.n_hash) {
++		if ((name_set.n_size * sizeof (struct name_entry *)) <=
++		    PAGE_SIZE)
++			kfree(name_set.n_hash);
++		else
++			vfree(name_set.n_hash);
@@ -11606,5 +11000,7 @@
-+	if (match && !(match->mode & GR_DELETED))
-+		return match;
-+	else
-+		return NULL;
-+}
++	if (inodev_set.i_hash) {
++		if ((inodev_set.i_size * sizeof (struct inodev_entry *)) <=
++		    PAGE_SIZE)
++			kfree(inodev_set.i_hash);
++		else
++			vfree(inodev_set.i_hash);
++	}
@@ -11612,7 +11008 @@
-+static struct name_entry *
-+lookup_name_entry(const char *name)
-+{
-+	unsigned int len = strlen(name);
-+	unsigned int key = full_name_hash(name, len);
-+	unsigned int index = key % name_set.n_size;
-+	struct name_entry *match;
++	gr_free_uidset();
@@ -11620 +11010,4 @@
-+	match = name_set.n_hash[index];
++	memset(&name_set, 0, sizeof (struct name_db));
++	memset(&inodev_set, 0, sizeof (struct inodev_db));
++	memset(&acl_role_set, 0, sizeof (struct acl_role_db));
++	memset(&subj_map_set, 0, sizeof (struct acl_subj_map_db));
@@ -11622,2 +11015 @@
-+	while (match && (match->key != key || !gr_streq(match->name, name, match->len, len)))
-+		match = match->next;
++	default_role = NULL;
@@ -11625 +11017 @@
-+	return match;
++	return;
@@ -11628,2 +11020,2 @@
-+static struct inodev_entry *
-+lookup_inodev_entry(const ino_t ino, const dev_t dev)
++static __u32
++count_user_objs(struct acl_object_label *userp)
@@ -11631,2 +11023,2 @@
-+	unsigned int index = fhash(ino, dev, inodev_set.i_size);
-+	struct inodev_entry *match;
++	struct acl_object_label o_tmp;
++	__u32 num = 0;
@@ -11634 +11026,4 @@
-+	match = inodev_set.i_hash[index];
++	while (userp) {
++		if (copy_from_user(&o_tmp, userp,
++				   sizeof (struct acl_object_label)))
++			break;
@@ -11636,2 +11031,3 @@
-+	while (match && (match->nentry->inode != ino || match->nentry->device != dev))
-+		match = match->next;
++		userp = o_tmp.prev;
++		num++;
++	}
@@ -11639 +11035 @@
-+	return match;
++	return num;
@@ -11642,2 +11038,5 @@
-+static void
-+insert_inodev_entry(struct inodev_entry *entry)
++static struct acl_subject_label *
++do_copy_user_subj(struct acl_subject_label *userp, struct acl_role_label *role);
++
++static int
++copy_user_glob(struct acl_object_label *obj)
@@ -11645,3 +11044,3 @@
-+	unsigned int index = fhash(entry->nentry->inode, entry->nentry->device,
-+				    inodev_set.i_size);
-+	struct inodev_entry **curr;
++	struct acl_object_label *g_tmp, **guser;
++	unsigned int len;
++	char *tmp;
@@ -11649 +11048,2 @@
-+	entry->prev = NULL;
++	if (obj->globbed == NULL)
++		return 0;
@@ -11651,6 +11051,6 @@
-+	curr = &inodev_set.i_hash[index];
-+	if (*curr != NULL)
-+		(*curr)->prev = entry;
-+	
-+	entry->next = *curr;
-+	*curr = entry;
++	guser = &obj->globbed;
++	while (*guser) {
++		g_tmp = (struct acl_object_label *)
++			acl_alloc(sizeof (struct acl_object_label));
++		if (g_tmp == NULL)
++			return -ENOMEM;
@@ -11658,2 +11058,3 @@
-+	return;
-+}
++		if (copy_from_user(g_tmp, *guser,
++				   sizeof (struct acl_object_label)))
++			return -EFAULT;
@@ -11661,6 +11062 @@
-+static void
-+__insert_acl_role_label(struct acl_role_label *role, uid_t uidgid)
-+{
-+	unsigned int index =
-+	    rhash(uidgid, role->roletype & (GR_ROLE_USER | GR_ROLE_GROUP), acl_role_set.r_size);
-+	struct acl_role_label **curr;
++		len = strnlen_user(g_tmp->filename, PATH_MAX);
@@ -11668 +11064,2 @@
-+	role->prev = NULL;
++		if (!len || len >= PATH_MAX)
++			return -EINVAL;
@@ -11670,3 +11067,2 @@
-+	curr = &acl_role_set.r_hash[index];
-+	if (*curr != NULL)
-+		(*curr)->prev = role;
++		if ((tmp = (char *) acl_alloc(len)) == NULL)
++			return -ENOMEM;
@@ -11674,2 +11070,2 @@
-+	role->next = *curr;
-+	*curr = role;
++		if (copy_from_user(tmp, g_tmp->filename, len))
++			return -EFAULT;
@@ -11677,2 +11073 @@
-+	return;
-+}
++		g_tmp->filename = tmp;
@@ -11680,4 +11075,3 @@
-+static void
-+insert_acl_role_label(struct acl_role_label *role)
-+{
-+	int i;
++		*guser = g_tmp;
++		guser = &(g_tmp->next);
++	}
@@ -11685,5 +11079 @@
-+	if (role->roletype & GR_ROLE_DOMAIN) {
-+		for (i = 0; i < role->domain_child_num; i++)
-+			__insert_acl_role_label(role, role->domain_children[i]);
-+	} else
-+		__insert_acl_role_label(role, role->uidgid);
++	return 0;
@@ -11691 +11081 @@
-+					
++
@@ -11693 +11083,2 @@
-+insert_name_entry(char *name, const ino_t inode, const dev_t device)
++copy_user_objs(struct acl_object_label *userp, struct acl_subject_label *subj,
++	       struct acl_role_label *role)
@@ -11695,5 +11086,4 @@
-+	struct name_entry **curr, *nentry;
-+	struct inodev_entry *ientry;
-+	unsigned int len = strlen(name);
-+	unsigned int key = full_name_hash(name, len);
-+	unsigned int index = key % name_set.n_size;
++	struct acl_object_label *o_tmp;
++	unsigned int len;
++	int ret;
++	char *tmp;
@@ -11701 +11091,4 @@
-+	curr = &name_set.n_hash[index];
++	while (userp) {
++		if ((o_tmp = (struct acl_object_label *)
++		     acl_alloc(sizeof (struct acl_object_label))) == NULL)
++			return -ENOMEM;
@@ -11703,2 +11096,3 @@
-+	while (*curr && ((*curr)->key != key || !gr_streq((*curr)->name, name, (*curr)->len, len)))
-+		curr = &((*curr)->next);
++		if (copy_from_user(o_tmp, userp,
++				   sizeof (struct acl_object_label)))
++			return -EFAULT;
@@ -11706,2 +11100 @@
-+	if (*curr != NULL)
-+		return 1;
++		userp = o_tmp->prev;
@@ -11709,7 +11102 @@
-+	nentry = acl_alloc(sizeof (struct name_entry));
-+	if (nentry == NULL)
-+		return 0;
-+	ientry = acl_alloc(sizeof (struct inodev_entry));
-+	if (ientry == NULL)
-+		return 0;
-+	ientry->nentry = nentry;
++		len = strnlen_user(o_tmp->filename, PATH_MAX);
@@ -11717,5 +11104,2 @@
-+	nentry->key = key;
-+	nentry->name = name;
-+	nentry->inode = inode;
-+	nentry->device = device;
-+	nentry->len = len;
++		if (!len || len >= PATH_MAX)
++			return -EINVAL;
@@ -11723,6 +11107,2 @@
-+	nentry->prev = NULL;
-+	curr = &name_set.n_hash[index];
-+	if (*curr != NULL)
-+		(*curr)->prev = nentry;
-+	nentry->next = *curr;
-+	*curr = nentry;
++		if ((tmp = (char *) acl_alloc(len)) == NULL)
++			return -ENOMEM;
@@ -11730,2 +11110,2 @@
-+	/* insert us into the table searchable by inode/dev */
-+	insert_inodev_entry(ientry);
++		if (copy_from_user(tmp, o_tmp->filename, len))
++			return -EFAULT;
@@ -11733,2 +11113 @@
-+	return 1;
-+}
++		o_tmp->filename = tmp;
@@ -11736,7 +11115,4 @@
-+static void
-+insert_acl_obj_label(struct acl_object_label *obj,
-+		     struct acl_subject_label *subj)
-+{
-+	unsigned int index =
-+	    fhash(obj->inode, obj->device, subj->obj_hash_size);
-+	struct acl_object_label **curr;
++		insert_acl_obj_label(o_tmp, subj);
++		if (!insert_name_entry(o_tmp->filename, o_tmp->inode,
++				       o_tmp->device))
++			return -ENOMEM;
@@ -11744,2 +11120,3 @@
-+	
-+	obj->prev = NULL;
++		ret = copy_user_glob(o_tmp);
++		if (ret)
++			return ret;
@@ -11747,3 +11124,4 @@
-+	curr = &subj->obj_hash[index];
-+	if (*curr != NULL)
-+		(*curr)->prev = obj;
++		if (o_tmp->nested) {
++			o_tmp->nested = do_copy_user_subj(o_tmp->nested, role);
++			if (IS_ERR(o_tmp->nested))
++				return PTR_ERR(o_tmp->nested);
@@ -11751,2 +11129,5 @@
-+	obj->next = *curr;
-+	*curr = obj;
++			/* insert into nested subject list */
++			o_tmp->nested->next = role->hash->first;
++			role->hash->first = o_tmp->nested;
++		}
++	}
@@ -11754 +11135 @@
-+	return;
++	return 0;
@@ -11757,3 +11138,2 @@
-+static void
-+insert_acl_subj_label(struct acl_subject_label *obj,
-+		      struct acl_role_label *role)
++static __u32
++count_user_subjs(struct acl_subject_label *userp)
@@ -11761,4 +11141,2 @@
-+	unsigned int index = fhash(obj->inode, obj->device, role->subj_hash_size);
-+	struct acl_subject_label **curr;
-+
-+	obj->prev = NULL;
++	struct acl_subject_label s_tmp;
++	__u32 num = 0;
@@ -11766,3 +11144,4 @@
-+	curr = &role->subj_hash[index];
-+	if (*curr != NULL)
-+		(*curr)->prev = obj;
++	while (userp) {
++		if (copy_from_user(&s_tmp, userp,
++				   sizeof (struct acl_subject_label)))
++			break;
@@ -11770,2 +11149,10 @@
-+	obj->next = *curr;
-+	*curr = obj;
++		userp = s_tmp.prev;
++		/* do not count nested subjects against this count, since
++		   they are not included in the hash table, but are
++		   attached to objects.  We have already counted
++		   the subjects in userspace for the allocation 
++		   stack
++		*/
++		if (!(s_tmp.mode & GR_NESTED))
++			num++;
++	}
@@ -11773 +11160 @@
-+	return;
++	return num;
@@ -11776,4 +11163,2 @@
-+/* allocating chained hash tables, so optimal size is where lambda ~ 1 */
-+
-+static void *
-+create_table(__u32 * len, int elementsize)
++static int
++copy_user_allowedips(struct acl_role_label *rolep)
@@ -11781,8 +11166 @@
-+	unsigned int table_sizes[] = {
-+		7, 13, 31, 61, 127, 251, 509, 1021, 2039, 4093, 8191, 16381,
-+		32749, 65521, 131071, 262139, 524287, 1048573, 2097143,
-+		4194301, 8388593, 16777213, 33554393, 67108859, 134217689,
-+		268435399, 536870909, 1073741789, 2147483647
-+	};
-+	void *newtable = NULL;
-+	unsigned int pwr = 0;
++	struct role_allowed_ip *ruserip, *rtmp = NULL, *rlast;
@@ -11790,3 +11168 @@
-+	while ((pwr < ((sizeof (table_sizes) / sizeof (table_sizes[0])) - 1)) &&
-+	       table_sizes[pwr] <= *len)
-+		pwr++;
++	ruserip = rolep->allowed_ips;
@@ -11794,2 +11170,2 @@
-+	if (table_sizes[pwr] <= *len)
-+		return newtable;
++	while (ruserip) {
++		rlast = rtmp;
@@ -11797,5 +11173,3 @@
-+	if ((table_sizes[pwr] * elementsize) <= PAGE_SIZE)
-+		newtable =
-+		    kmalloc(table_sizes[pwr] * elementsize, GFP_KERNEL);
-+	else
-+		newtable = vmalloc(table_sizes[pwr] * elementsize);
++		if ((rtmp = (struct role_allowed_ip *)
++		     acl_alloc(sizeof (struct role_allowed_ip))) == NULL)
++			return -ENOMEM;
@@ -11803 +11177,3 @@
-+	*len = table_sizes[pwr];
++		if (copy_from_user(rtmp, ruserip,
++				   sizeof (struct role_allowed_ip)))
++			return -EFAULT;
@@ -11805,2 +11181 @@
-+	return newtable;
-+}
++		ruserip = rtmp->prev;
@@ -11808,4 +11183,7 @@
-+static int
-+init_variables(const struct gr_arg *arg)
-+{
-+	unsigned int stacksize;
++		if (!rlast) {
++			rtmp->prev = NULL;
++			rolep->allowed_ips = rtmp;
++		} else {
++			rlast->next = rtmp;
++			rtmp->prev = rlast;
++		}
@@ -11813,4 +11191,3 @@
-+	subj_map_set.s_size = arg->role_db.num_subjects;
-+	acl_role_set.r_size = arg->role_db.num_roles + arg->role_db.num_domain_children;
-+	name_set.n_size = arg->role_db.num_objects;
-+	inodev_set.i_size = arg->role_db.num_objects;
++		if (!ruserip)
++			rtmp->next = NULL;
++	}
@@ -11818,3 +11195,2 @@
-+	if (!subj_map_set.s_size || !acl_role_set.r_size ||
-+	    !name_set.n_size || !inodev_set.i_size)
-+		return 1;
++	return 0;
++}
@@ -11822,2 +11198,7 @@
-+	if (!gr_init_uidset())
-+		return 1;
++static int
++copy_user_transitions(struct acl_role_label *rolep)
++{
++	struct role_transition *rusertp, *rtmp = NULL, *rlast;
++	
++	unsigned int len;
++	char *tmp;
@@ -11825 +11206 @@
-+	/* set up the stack that holds allocation info */
++	rusertp = rolep->transitions;
@@ -11827 +11208,2 @@
-+	stacksize = arg->role_db.num_pointers + 5;
++	while (rusertp) {
++		rlast = rtmp;
@@ -11829,2 +11211,3 @@
-+	if (!acl_alloc_stack_init(stacksize))
-+		return 1;
++		if ((rtmp = (struct role_transition *)
++		     acl_alloc(sizeof (struct role_transition))) == NULL)
++			return -ENOMEM;
@@ -11832,10 +11215,3 @@
-+	/* grab reference for the real root dentry and vfsmount */
-+	read_lock(&child_reaper->fs->lock);
-+	real_root_mnt = mntget(child_reaper->fs->rootmnt);
-+	real_root = dget(child_reaper->fs->root);
-+	read_unlock(&child_reaper->fs->lock);
-+	
-+	fakefs_obj = acl_alloc(sizeof(struct acl_object_label));
-+	if (fakefs_obj == NULL)
-+		return 1;
-+	fakefs_obj->mode = GR_FIND | GR_READ | GR_WRITE | GR_EXEC;
++		if (copy_from_user(rtmp, rusertp,
++				   sizeof (struct role_transition)))
++			return -EFAULT;
@@ -11843,7 +11219 @@
-+	subj_map_set.s_hash =
-+	    (struct subject_map **) create_table(&subj_map_set.s_size, sizeof(void *));
-+	acl_role_set.r_hash =
-+	    (struct acl_role_label **) create_table(&acl_role_set.r_size, sizeof(void *));
-+	name_set.n_hash = (struct name_entry **) create_table(&name_set.n_size, sizeof(void *));
-+	inodev_set.i_hash =
-+	    (struct inodev_entry **) create_table(&inodev_set.i_size, sizeof(void *));
++		rusertp = rtmp->prev;
@@ -11851,3 +11221 @@
-+	if (!subj_map_set.s_hash || !acl_role_set.r_hash ||
-+	    !name_set.n_hash || !inodev_set.i_hash)
-+		return 1;
++		len = strnlen_user(rtmp->rolename, GR_SPROLE_LEN);
@@ -11855,8 +11223,2 @@
-+	memset(subj_map_set.s_hash, 0,
-+	       sizeof(struct subject_map *) * subj_map_set.s_size);
-+	memset(acl_role_set.r_hash, 0,
-+	       sizeof (struct acl_role_label *) * acl_role_set.r_size);
-+	memset(name_set.n_hash, 0,
-+	       sizeof (struct name_entry *) * name_set.n_size);
-+	memset(inodev_set.i_hash, 0,
-+	       sizeof (struct inodev_entry *) * inodev_set.i_size);
++		if (!len || len >= GR_SPROLE_LEN)
++			return -EINVAL;
@@ -11864,2 +11226,2 @@
-+	return 0;
-+}
++		if ((tmp = (char *) acl_alloc(len)) == NULL)
++			return -ENOMEM;
@@ -11867,3 +11229,2 @@
-+/* free information not needed after startup
-+   currently contains user->kernel pointer mappings for subjects
-+*/
++		if (copy_from_user(tmp, rtmp->rolename, len))
++			return -EFAULT;
@@ -11871,4 +11232 @@
-+static void
-+free_init_variables(void)
-+{
-+	__u32 i;
++		rtmp->rolename = tmp;
@@ -11876,6 +11234,6 @@
-+	if (subj_map_set.s_hash) {
-+		for (i = 0; i < subj_map_set.s_size; i++) {
-+			if (subj_map_set.s_hash[i]) {
-+				kfree(subj_map_set.s_hash[i]);
-+				subj_map_set.s_hash[i] = NULL;
-+			}
++		if (!rlast) {
++			rtmp->prev = NULL;
++			rolep->transitions = rtmp;
++		} else {
++			rlast->next = rtmp;
++			rtmp->prev = rlast;
@@ -11884,5 +11242,2 @@
-+		if ((subj_map_set.s_size * sizeof (struct subject_map *)) <=
-+		    PAGE_SIZE)
-+			kfree(subj_map_set.s_hash);
-+		else
-+			vfree(subj_map_set.s_hash);
++		if (!rusertp)
++			rtmp->next = NULL;
@@ -11891 +11246 @@
-+	return;
++	return 0;
@@ -11894,2 +11249,2 @@
-+static void
-+free_variables(void)
++static struct acl_subject_label *
++do_copy_user_subj(struct acl_subject_label *userp, struct acl_role_label *role)
@@ -11897,4 +11252,9 @@
-+	struct acl_subject_label *s;
-+	struct acl_role_label *r;
-+	struct task_struct *task, *task2;
-+	unsigned int i, x;
++	struct acl_subject_label *s_tmp = NULL, *s_tmp2;
++	unsigned int len;
++	char *tmp;
++	__u32 num_objs;
++	struct acl_ip_label **i_tmp, *i_utmp2;
++	struct gr_hash_struct ghash;
++	struct subject_map *subjmap;
++	unsigned int i_num;
++	int err;
@@ -11902 +11262 @@
-+	gr_clear_learn_entries();
++	s_tmp = lookup_subject_map(userp);
@@ -11904,8 +11264,5 @@
-+	read_lock(&tasklist_lock);
-+	do_each_thread(task2, task) {
-+		task->acl_sp_role = 0;
-+		task->acl_role_id = 0;
-+		task->acl = NULL;
-+		task->role = NULL;
-+	} while_each_thread(task2, task);
-+	read_unlock(&tasklist_lock);
++	/* we've already copied this subject into the kernel, just return
++	   the reference to it, and don't copy it over again
++	*/
++	if (s_tmp)
++		return(s_tmp);
@@ -11913,35 +11270,3 @@
-+	/* release the reference to the real root dentry and vfsmount */
-+	if (real_root)
-+		dput(real_root);
-+	real_root = NULL;
-+	if (real_root_mnt)
-+		mntput(real_root_mnt);
-+	real_root_mnt = NULL;
-+
-+	/* free all object hash tables */
-+
-+	FOR_EACH_ROLE_START(r, i)
-+		if (r->subj_hash == NULL)
-+			break;
-+		FOR_EACH_SUBJECT_START(r, s, x)
-+			if (s->obj_hash == NULL)
-+				break;
-+			if ((s->obj_hash_size * sizeof (struct acl_object_label *)) <= PAGE_SIZE)
-+				kfree(s->obj_hash);
-+			else
-+				vfree(s->obj_hash);
-+		FOR_EACH_SUBJECT_END(s, x)
-+		FOR_EACH_NESTED_SUBJECT_START(r, s)
-+			if (s->obj_hash == NULL)
-+				break;
-+			if ((s->obj_hash_size * sizeof (struct acl_object_label *)) <= PAGE_SIZE)
-+				kfree(s->obj_hash);
-+			else
-+				vfree(s->obj_hash);
-+		FOR_EACH_NESTED_SUBJECT_END(s)
-+		if ((r->subj_hash_size * sizeof (struct acl_subject_label *)) <= PAGE_SIZE)
-+			kfree(r->subj_hash);
-+		else
-+			vfree(r->subj_hash);
-+		r->subj_hash = NULL;
-+	FOR_EACH_ROLE_END(r,i)
++	if ((s_tmp = (struct acl_subject_label *)
++	    acl_alloc(sizeof (struct acl_subject_label))) == NULL)
++		return ERR_PTR(-ENOMEM);
@@ -11949 +11274,3 @@
-+	acl_free_all();
++	subjmap = (struct subject_map *)kmalloc(sizeof (struct subject_map), GFP_KERNEL);
++	if (subjmap == NULL)
++		return ERR_PTR(-ENOMEM);
@@ -11951,14 +11278,3 @@
-+	if (acl_role_set.r_hash) {
-+		if ((acl_role_set.r_size * sizeof (struct acl_role_label *)) <=
-+		    PAGE_SIZE)
-+			kfree(acl_role_set.r_hash);
-+		else
-+			vfree(acl_role_set.r_hash);
-+	}
-+	if (name_set.n_hash) {
-+		if ((name_set.n_size * sizeof (struct name_entry *)) <=
-+		    PAGE_SIZE)
-+			kfree(name_set.n_hash);
-+		else
-+			vfree(name_set.n_hash);
-+	}
++	subjmap->user = userp;
++	subjmap->kernel = s_tmp;
++	insert_subj_map_entry(subjmap);
@@ -11966,7 +11282,3 @@
-+	if (inodev_set.i_hash) {
-+		if ((inodev_set.i_size * sizeof (struct inodev_entry *)) <=
-+		    PAGE_SIZE)
-+			kfree(inodev_set.i_hash);
-+		else
-+			vfree(inodev_set.i_hash);
-+	}
++	if (copy_from_user(s_tmp, userp,
++			   sizeof (struct acl_subject_label)))
++		return ERR_PTR(-EFAULT);
@@ -11974 +11286 @@
-+	gr_free_uidset();
++	len = strnlen_user(s_tmp->filename, PATH_MAX);
@@ -11976,4 +11288,2 @@
-+	memset(&name_set, 0, sizeof (struct name_db));
-+	memset(&inodev_set, 0, sizeof (struct inodev_db));
-+	memset(&acl_role_set, 0, sizeof (struct acl_role_db));
-+	memset(&subj_map_set, 0, sizeof (struct acl_subj_map_db));
++	if (!len || len >= PATH_MAX)
++		return ERR_PTR(-EINVAL);
@@ -11981 +11291,2 @@
-+	default_role = NULL;
++	if ((tmp = (char *) acl_alloc(len)) == NULL)
++		return ERR_PTR(-ENOMEM);
@@ -11983,2 +11294,2 @@
-+	return;
-+}
++	if (copy_from_user(tmp, s_tmp->filename, len))
++		return ERR_PTR(-EFAULT);
@@ -11986,5 +11297 @@
-+static __u32
-+count_user_objs(struct acl_object_label *userp)
-+{
-+	struct acl_object_label o_tmp;
-+	__u32 num = 0;
++	s_tmp->filename = tmp;
@@ -11992,4 +11299,2 @@
-+	while (userp) {
-+		if (copy_from_user(&o_tmp, userp,
-+				   sizeof (struct acl_object_label)))
-+			break;
++	if (!strcmp(s_tmp->filename, "/"))
++		role->root_label = s_tmp;
@@ -11997,3 +11302,2 @@
-+		userp = o_tmp.prev;
-+		num++;
-+	}
++	if (copy_from_user(&ghash, s_tmp->hash, sizeof(struct gr_hash_struct)))
++		return ERR_PTR(-EFAULT);
@@ -12001,2 +11305 @@
-+	return num;
-+}
++	/* copy user and group transition tables */
@@ -12004,2 +11307,2 @@
-+static struct acl_subject_label *
-+do_copy_user_subj(struct acl_subject_label *userp, struct acl_role_label *role);
++	if (s_tmp->user_trans_num) {
++		uid_t *uidlist;
@@ -12007,6 +11310,5 @@
-+static int
-+copy_user_glob(struct acl_object_label *obj)
-+{
-+	struct acl_object_label *g_tmp, **guser;
-+	unsigned int len;
-+	char *tmp;
++		uidlist = (uid_t *)acl_alloc(s_tmp->user_trans_num * sizeof(uid_t));
++		if (uidlist == NULL)
++			return ERR_PTR(-ENOMEM);
++		if (copy_from_user(uidlist, s_tmp->user_transitions, s_tmp->user_trans_num * sizeof(uid_t)))
++			return ERR_PTR(-EFAULT);
@@ -12014,2 +11316,2 @@
-+	if (obj->globbed == NULL)
-+		return 0;
++		s_tmp->user_transitions = uidlist;
++	}
@@ -12017,6 +11319,2 @@
-+	guser = &obj->globbed;
-+	while (*guser) {
-+		g_tmp = (struct acl_object_label *)
-+			acl_alloc(sizeof (struct acl_object_label));
-+		if (g_tmp == NULL)
-+			return -ENOMEM;
++	if (s_tmp->group_trans_num) {
++		gid_t *gidlist;
@@ -12024,3 +11322,5 @@
-+		if (copy_from_user(g_tmp, *guser,
-+				   sizeof (struct acl_object_label)))
-+			return -EFAULT;
++		gidlist = (gid_t *)acl_alloc(s_tmp->group_trans_num * sizeof(gid_t));
++		if (gidlist == NULL)
++			return ERR_PTR(-ENOMEM);
++		if (copy_from_user(gidlist, s_tmp->group_transitions, s_tmp->group_trans_num * sizeof(gid_t)))
++			return ERR_PTR(-EFAULT);
@@ -12028 +11328,2 @@
-+		len = strnlen_user(g_tmp->filename, PATH_MAX);
++		s_tmp->group_transitions = gidlist;
++	}
@@ -12030,2 +11331,2 @@
-+		if (!len || len >= PATH_MAX)
-+			return -EINVAL;
++	/* set up object hash table */
++	num_objs = count_user_objs(ghash.first);
@@ -12033,2 +11334,4 @@
-+		if ((tmp = (char *) acl_alloc(len)) == NULL)
-+			return -ENOMEM;
++	s_tmp->obj_hash_size = num_objs;
++	s_tmp->obj_hash =
++	    (struct acl_object_label **)
++	    create_table(&(s_tmp->obj_hash_size), sizeof(void *));
@@ -12036,2 +11339,2 @@
-+		if (copy_from_user(tmp, g_tmp->filename, len))
-+			return -EFAULT;
++	if (!s_tmp->obj_hash)
++		return ERR_PTR(-ENOMEM);
@@ -12039 +11342,3 @@
-+		g_tmp->filename = tmp;
++	memset(s_tmp->obj_hash, 0,
++	       s_tmp->obj_hash_size *
++	       sizeof (struct acl_object_label *));
@@ -12041,3 +11346,2 @@
-+		*guser = g_tmp;
-+		guser = &(g_tmp->next);
-+	}
++	/* add in objects */
++	err = copy_user_objs(ghash.first, s_tmp, role);
@@ -12045,2 +11349,2 @@
-+	return 0;
-+}
++	if (err)
++		return ERR_PTR(err);
@@ -12048,8 +11352,3 @@
-+static int
-+copy_user_objs(struct acl_object_label *userp, struct acl_subject_label *subj,
-+	       struct acl_role_label *role)
-+{
-+	struct acl_object_label *o_tmp;
-+	unsigned int len;
-+	int ret;
-+	char *tmp;
++	/* set pointer for parent subject */
++	if (s_tmp->parent_subject) {
++		s_tmp2 = do_copy_user_subj(s_tmp->parent_subject, role);
@@ -12057,4 +11356,2 @@
-+	while (userp) {
-+		if ((o_tmp = (struct acl_object_label *)
-+		     acl_alloc(sizeof (struct acl_object_label))) == NULL)
-+			return -ENOMEM;
++		if (IS_ERR(s_tmp2))
++			return s_tmp2;
@@ -12062,3 +11359,2 @@
-+		if (copy_from_user(o_tmp, userp,
-+				   sizeof (struct acl_object_label)))
-+			return -EFAULT;
++		s_tmp->parent_subject = s_tmp2;
++	}
@@ -12066 +11362 @@
-+		userp = o_tmp->prev;
++	/* add in ip acls */
@@ -12068 +11364,4 @@
-+		len = strnlen_user(o_tmp->filename, PATH_MAX);
++	if (!s_tmp->ip_num) {
++		s_tmp->ips = NULL;
++		goto insert;
++	}
@@ -12070,2 +11369,4 @@
-+		if (!len || len >= PATH_MAX)
-+			return -EINVAL;
++	i_tmp =
++	    (struct acl_ip_label **) acl_alloc(s_tmp->ip_num *
++					       sizeof (struct
++						       acl_ip_label *));
@@ -12073,2 +11374,2 @@
-+		if ((tmp = (char *) acl_alloc(len)) == NULL)
-+			return -ENOMEM;
++	if (!i_tmp)
++		return ERR_PTR(-ENOMEM);
@@ -12076,2 +11377,6 @@
-+		if (copy_from_user(tmp, o_tmp->filename, len))
-+			return -EFAULT;
++	for (i_num = 0; i_num < s_tmp->ip_num; i_num++) {
++		*(i_tmp + i_num) =
++		    (struct acl_ip_label *)
++		    acl_alloc(sizeof (struct acl_ip_label));
++		if (!*(i_tmp + i_num))
++			return ERR_PTR(-ENOMEM);
@@ -12079 +11384,4 @@
-+		o_tmp->filename = tmp;
++		if (copy_from_user
++		    (&i_utmp2, s_tmp->ips + i_num,
++		     sizeof (struct acl_ip_label *)))
++			return ERR_PTR(-EFAULT);
@@ -12081,4 +11389,7 @@
-+		insert_acl_obj_label(o_tmp, subj);
-+		if (!insert_name_entry(o_tmp->filename, o_tmp->inode,
-+				       o_tmp->device))
-+			return -ENOMEM;
++		if (copy_from_user
++		    (*(i_tmp + i_num), i_utmp2,
++		     sizeof (struct acl_ip_label)))
++			return ERR_PTR(-EFAULT);
++		
++		if ((*(i_tmp + i_num))->iface == NULL)
++			continue;
@@ -12086,3 +11397,10 @@
-+		ret = copy_user_glob(o_tmp);
-+		if (ret)
-+			return ret;
++		len = strnlen_user((*(i_tmp + i_num))->iface, IFNAMSIZ);
++		if (!len || len >= IFNAMSIZ)
++			return ERR_PTR(-EINVAL);
++		tmp = acl_alloc(len);
++		if (tmp == NULL)
++			return ERR_PTR(-ENOMEM);
++		if (copy_from_user(tmp, (*(i_tmp + i_num))->iface, len))
++			return ERR_PTR(-EFAULT);
++		(*(i_tmp + i_num))->iface = tmp;
++	}
@@ -12090,4 +11408 @@
-+		if (o_tmp->nested) {
-+			o_tmp->nested = do_copy_user_subj(o_tmp->nested, role);
-+			if (IS_ERR(o_tmp->nested))
-+				return PTR_ERR(o_tmp->nested);
++	s_tmp->ips = i_tmp;
@@ -12095,5 +11410,4 @@
-+			/* insert into nested subject list */
-+			o_tmp->nested->next = role->hash->first;
-+			role->hash->first = o_tmp->nested;
-+		}
-+	}
++insert:
++	if (!insert_name_entry(s_tmp->filename, s_tmp->inode,
++			       s_tmp->device))
++		return ERR_PTR(-ENOMEM);
@@ -12101 +11415 @@
-+	return 0;
++	return s_tmp;
@@ -12104,2 +11418,2 @@
-+static __u32
-+count_user_subjs(struct acl_subject_label *userp)
++static int
++copy_user_subjs(struct acl_subject_label *userp, struct acl_role_label *role)
@@ -12107,2 +11421,3 @@
-+	struct acl_subject_label s_tmp;
-+	__u32 num = 0;
++	struct acl_subject_label s_pre;
++	struct acl_subject_label * ret;
++	int err;
@@ -12111 +11426 @@
-+		if (copy_from_user(&s_tmp, userp,
++		if (copy_from_user(&s_pre, userp,
@@ -12113,8 +11428,4 @@
-+			break;
-+
-+		userp = s_tmp.prev;
-+		/* do not count nested subjects against this count, since
-+		   they are not included in the hash table, but are
-+		   attached to objects.  We have already counted
-+		   the subjects in userspace for the allocation 
-+		   stack
++			return -EFAULT;
++		
++		/* do not add nested subjects here, add
++		   while parsing objects
@@ -12122,11 +11432,0 @@
-+		if (!(s_tmp.mode & GR_NESTED))
-+			num++;
-+	}
-+
-+	return num;
-+}
-+
-+static int
-+copy_user_allowedips(struct acl_role_label *rolep)
-+{
-+	struct role_allowed_ip *ruserip, *rtmp = NULL, *rlast;
@@ -12134,8 +11434,4 @@
-+	ruserip = rolep->allowed_ips;
-+
-+	while (ruserip) {
-+		rlast = rtmp;
-+
-+		if ((rtmp = (struct role_allowed_ip *)
-+		     acl_alloc(sizeof (struct role_allowed_ip))) == NULL)
-+			return -ENOMEM;
++		if (s_pre.mode & GR_NESTED) {
++			userp = s_pre.prev;
++			continue;
++		}
@@ -12143,3 +11439 @@
-+		if (copy_from_user(rtmp, ruserip,
-+				   sizeof (struct role_allowed_ip)))
-+			return -EFAULT;
++		ret = do_copy_user_subj(userp, role);
@@ -12147 +11441,3 @@
-+		ruserip = rtmp->prev;
++		err = PTR_ERR(ret);
++		if (IS_ERR(ret))
++			return err;
@@ -12149,7 +11445 @@
-+		if (!rlast) {
-+			rtmp->prev = NULL;
-+			rolep->allowed_ips = rtmp;
-+		} else {
-+			rlast->next = rtmp;
-+			rtmp->prev = rlast;
-+		}
++		insert_acl_subj_label(ret, role);
@@ -12157,2 +11447 @@
-+		if (!ruserip)
-+			rtmp->next = NULL;
++		userp = s_pre.prev;
@@ -12165 +11454 @@
-+copy_user_transitions(struct acl_role_label *rolep)
++copy_user_acl(struct gr_arg *arg)
@@ -12167,2 +11456,5 @@
-+	struct role_transition *rusertp, *rtmp = NULL, *rlast;
-+	
++	struct acl_role_label *r_tmp = NULL, **r_utmp, *r_utmp2;
++	struct sprole_pw *sptmp;
++	struct gr_hash_struct *ghash;
++	uid_t *domainlist;
++	unsigned int r_num;
@@ -12170,0 +11463,3 @@
++	int err = 0;
++	__u16 i;
++	__u32 num_subjs;
@@ -12172,8 +11467,3 @@
-+	rusertp = rolep->transitions;
-+
-+	while (rusertp) {
-+		rlast = rtmp;
-+
-+		if ((rtmp = (struct role_transition *)
-+		     acl_alloc(sizeof (struct role_transition))) == NULL)
-+			return -ENOMEM;
++	/* we need a default and kernel role */
++	if (arg->role_db.num_roles < 2)
++		return -EINVAL;
@@ -12181,3 +11471 @@
-+		if (copy_from_user(rtmp, rusertp,
-+				   sizeof (struct role_transition)))
-+			return -EFAULT;
++	/* copy special role authentication info from userspace */
@@ -12185 +11473,2 @@
-+		rusertp = rtmp->prev;
++	num_sprole_pws = arg->num_sprole_pws;
++	acl_special_roles = (struct sprole_pw **) acl_alloc(num_sprole_pws * sizeof(struct sprole_pw *));
@@ -12187 +11476,4 @@
-+		len = strnlen_user(rtmp->rolename, GR_SPROLE_LEN);
++	if (!acl_special_roles) {
++		err = -ENOMEM;
++		goto cleanup;
++	}
@@ -12189,2 +11481,11 @@
-+		if (!len || len >= GR_SPROLE_LEN)
-+			return -EINVAL;
++	for (i = 0; i < num_sprole_pws; i++) {
++		sptmp = (struct sprole_pw *) acl_alloc(sizeof(struct sprole_pw));
++		if (!sptmp) {
++			err = -ENOMEM;
++			goto cleanup;
++		}
++		if (copy_from_user(sptmp, arg->sprole_pws + i,
++				   sizeof (struct sprole_pw))) {
++			err = -EFAULT;
++			goto cleanup;
++		}
@@ -12192,2 +11493,2 @@
-+		if ((tmp = (char *) acl_alloc(len)) == NULL)
-+			return -ENOMEM;
++		len =
++		    strnlen_user(sptmp->rolename, GR_SPROLE_LEN);
@@ -12195,2 +11496,4 @@
-+		if (copy_from_user(tmp, rtmp->rolename, len))
-+			return -EFAULT;
++		if (!len || len >= GR_SPROLE_LEN) {
++			err = -EINVAL;
++			goto cleanup;
++		}
@@ -12198 +11501,4 @@
-+		rtmp->rolename = tmp;
++		if ((tmp = (char *) acl_alloc(len)) == NULL) {
++			err = -ENOMEM;
++			goto cleanup;
++		}
@@ -12200,6 +11506,3 @@
-+		if (!rlast) {
-+			rtmp->prev = NULL;
-+			rolep->transitions = rtmp;
-+		} else {
-+			rlast->next = rtmp;
-+			rtmp->prev = rlast;
++		if (copy_from_user(tmp, sptmp->rolename, len)) {
++			err = -EFAULT;
++			goto cleanup;
@@ -12208,2 +11511,5 @@
-+		if (!rusertp)
-+			rtmp->next = NULL;
++#ifdef CONFIG_GRKERNSEC_ACL_DEBUG
++		printk(KERN_ALERT "Copying special role %s\n", tmp);
++#endif
++		sptmp->rolename = tmp;
++		acl_special_roles[i] = sptmp;
@@ -12212,23 +11518 @@
-+	return 0;
-+}
-+
-+static struct acl_subject_label *
-+do_copy_user_subj(struct acl_subject_label *userp, struct acl_role_label *role)
-+{
-+	struct acl_subject_label *s_tmp = NULL, *s_tmp2;
-+	unsigned int len;
-+	char *tmp;
-+	__u32 num_objs;
-+	struct acl_ip_label **i_tmp, *i_utmp2;
-+	struct gr_hash_struct ghash;
-+	struct subject_map *subjmap;
-+	unsigned int i_num;
-+	int err;
-+
-+	s_tmp = lookup_subject_map(userp);
-+
-+	/* we've already copied this subject into the kernel, just return
-+	   the reference to it, and don't copy it over again
-+	*/
-+	if (s_tmp)
-+		return(s_tmp);
++	r_utmp = (struct acl_role_label **) arg->role_db.r_table;
@@ -12236,3 +11520,2 @@
-+	if ((s_tmp = (struct acl_subject_label *)
-+	    acl_alloc(sizeof (struct acl_subject_label))) == NULL)
-+		return ERR_PTR(-ENOMEM);
++	for (r_num = 0; r_num < arg->role_db.num_roles; r_num++) {
++		r_tmp = acl_alloc(sizeof (struct acl_role_label));
@@ -12240,3 +11523,4 @@
-+	subjmap = (struct subject_map *)kmalloc(sizeof (struct subject_map), GFP_KERNEL);
-+	if (subjmap == NULL)
-+		return ERR_PTR(-ENOMEM);
++		if (!r_tmp) {
++			err = -ENOMEM;
++			goto cleanup;
++		}
@@ -12244,3 +11528,5 @@
-+	subjmap->user = userp;
-+	subjmap->kernel = s_tmp;
-+	insert_subj_map_entry(subjmap);
++		if (copy_from_user(&r_utmp2, r_utmp + r_num,
++				   sizeof (struct acl_role_label *))) {
++			err = -EFAULT;
++			goto cleanup;
++		}
@@ -12248,3 +11534,5 @@
-+	if (copy_from_user(s_tmp, userp,
-+			   sizeof (struct acl_subject_label)))
-+		return ERR_PTR(-EFAULT);
++		if (copy_from_user(r_tmp, r_utmp2,
++				   sizeof (struct acl_role_label))) {
++			err = -EFAULT;
++			goto cleanup;
++		}
@@ -12252 +11540 @@
-+	len = strnlen_user(s_tmp->filename, PATH_MAX);
++		len = strnlen_user(r_tmp->rolename, GR_SPROLE_LEN);
@@ -12254,2 +11542,4 @@
-+	if (!len || len >= PATH_MAX)
-+		return ERR_PTR(-EINVAL);
++		if (!len || len >= PATH_MAX) {
++			err = -EINVAL;
++			goto cleanup;
++		}
@@ -12257,2 +11547,9 @@
-+	if ((tmp = (char *) acl_alloc(len)) == NULL)
-+		return ERR_PTR(-ENOMEM);
++		if ((tmp = (char *) acl_alloc(len)) == NULL) {
++			err = -ENOMEM;
++			goto cleanup;
++		}
++		if (copy_from_user(tmp, r_tmp->rolename, len)) {
++			err = -EFAULT;
++			goto cleanup;
++		}
++		r_tmp->rolename = tmp;
@@ -12260,2 +11557,6 @@
-+	if (copy_from_user(tmp, s_tmp->filename, len))
-+		return ERR_PTR(-EFAULT);
++		if (!strcmp(r_tmp->rolename, "default")
++		    && (r_tmp->roletype & GR_ROLE_DEFAULT)) {
++			default_role = r_tmp;
++		} else if (!strcmp(r_tmp->rolename, ":::kernel:::")) {
++			kernel_role = r_tmp;
++		}
@@ -12263 +11564,8 @@
-+	s_tmp->filename = tmp;
++		if ((ghash = (struct gr_hash_struct *) acl_alloc(sizeof(struct gr_hash_struct))) == NULL) {
++			err = -ENOMEM;
++			goto cleanup;
++		}
++		if (copy_from_user(ghash, r_tmp->hash, sizeof(struct gr_hash_struct))) {
++			err = -EFAULT;
++			goto cleanup;
++		}
@@ -12265,2 +11573 @@
-+	if (!strcmp(s_tmp->filename, "/"))
-+		role->root_label = s_tmp;
++		r_tmp->hash = ghash;
@@ -12268,2 +11575 @@
-+	if (copy_from_user(&ghash, s_tmp->hash, sizeof(struct gr_hash_struct)))
-+		return ERR_PTR(-EFAULT);
++		num_subjs = count_user_subjs(r_tmp->hash->first);
@@ -12271 +11577,4 @@
-+	/* copy user and group transition tables */
++		r_tmp->subj_hash_size = num_subjs;
++		r_tmp->subj_hash =
++		    (struct acl_subject_label **)
++		    create_table(&(r_tmp->subj_hash_size), sizeof(void *));
@@ -12273,2 +11582,4 @@
-+	if (s_tmp->user_trans_num) {
-+		uid_t *uidlist;
++		if (!r_tmp->subj_hash) {
++			err = -ENOMEM;
++			goto cleanup;
++		}
@@ -12276,5 +11587,3 @@
-+		uidlist = (uid_t *)acl_alloc(s_tmp->user_trans_num * sizeof(uid_t));
-+		if (uidlist == NULL)
-+			return ERR_PTR(-ENOMEM);
-+		if (copy_from_user(uidlist, s_tmp->user_transitions, s_tmp->user_trans_num * sizeof(uid_t)))
-+			return ERR_PTR(-EFAULT);
++		err = copy_user_allowedips(r_tmp);
++		if (err)
++			goto cleanup;
@@ -12282,5 +11591,13 @@
-+		s_tmp->user_transitions = uidlist;
-+	}
-+
-+	if (s_tmp->group_trans_num) {
-+		gid_t *gidlist;
++		/* copy domain info */
++		if (r_tmp->domain_children != NULL) {
++			domainlist = acl_alloc(r_tmp->domain_child_num * sizeof(uid_t));
++			if (domainlist == NULL) {
++				err = -ENOMEM;
++				goto cleanup;
++			}
++			if (copy_from_user(domainlist, r_tmp->domain_children, r_tmp->domain_child_num * sizeof(uid_t))) {
++				err = -EFAULT;
++				goto cleanup;
++			}
++			r_tmp->domain_children = domainlist;
++		}
@@ -12288,5 +11605,3 @@
-+		gidlist = (gid_t *)acl_alloc(s_tmp->group_trans_num * sizeof(gid_t));
-+		if (gidlist == NULL)
-+			return ERR_PTR(-ENOMEM);
-+		if (copy_from_user(gidlist, s_tmp->group_transitions, s_tmp->group_trans_num * sizeof(gid_t)))
-+			return ERR_PTR(-EFAULT);
++		err = copy_user_transitions(r_tmp);
++		if (err)
++			goto cleanup;
@@ -12294,2 +11609,3 @@
-+		s_tmp->group_transitions = gidlist;
-+	}
++		memset(r_tmp->subj_hash, 0,
++		       r_tmp->subj_hash_size *
++		       sizeof (struct acl_subject_label *));
@@ -12297,2 +11613 @@
-+	/* set up object hash table */
-+	num_objs = count_user_objs(ghash.first);
++		err = copy_user_subjs(r_tmp->hash->first, r_tmp);
@@ -12300,4 +11615,2 @@
-+	s_tmp->obj_hash_size = num_objs;
-+	s_tmp->obj_hash =
-+	    (struct acl_object_label **)
-+	    create_table(&(s_tmp->obj_hash_size), sizeof(void *));
++		if (err)
++			goto cleanup;
@@ -12305,2 +11618,2 @@
-+	if (!s_tmp->obj_hash)
-+		return ERR_PTR(-ENOMEM);
++		/* set nested subject list to null */
++		r_tmp->hash->first = NULL;
@@ -12308,3 +11621,2 @@
-+	memset(s_tmp->obj_hash, 0,
-+	       s_tmp->obj_hash_size *
-+	       sizeof (struct acl_object_label *));
++		insert_acl_role_label(r_tmp);
++	}
@@ -12312,2 +11624,5 @@
-+	/* add in objects */
-+	err = copy_user_objs(ghash.first, s_tmp, role);
++	goto return_err;
++      cleanup:
++	free_variables();
++      return_err:
++	return err;
@@ -12315,2 +11630 @@
-+	if (err)
-+		return ERR_PTR(err);
++}
@@ -12318,3 +11632,4 @@
-+	/* set pointer for parent subject */
-+	if (s_tmp->parent_subject) {
-+		s_tmp2 = do_copy_user_subj(s_tmp->parent_subject, role);
++static int
++gracl_init(struct gr_arg *args)
++{
++	int error = 0;
@@ -12322,2 +11637,2 @@
-+		if (IS_ERR(s_tmp2))
-+			return s_tmp2;
++	memcpy(gr_system_salt, args->salt, GR_SALT_LEN);
++	memcpy(gr_system_sum, args->sum, GR_SHA_LEN);
@@ -12325 +11640,5 @@
-+		s_tmp->parent_subject = s_tmp2;
++	if (init_variables(args)) {
++		gr_log_str(GR_DONT_AUDIT_GOOD, GR_INITF_ACL_MSG, GR_VERSION);
++		error = -ENOMEM;
++		free_variables();
++		goto out;
@@ -12328,5 +11647,5 @@
-+	/* add in ip acls */
-+
-+	if (!s_tmp->ip_num) {
-+		s_tmp->ips = NULL;
-+		goto insert;
++	error = copy_user_acl(args);
++	free_init_variables();
++	if (error) {
++		free_variables();
++		goto out;
@@ -12335,37 +11654,3 @@
-+	i_tmp =
-+	    (struct acl_ip_label **) acl_alloc(s_tmp->ip_num *
-+					       sizeof (struct
-+						       acl_ip_label *));
-+
-+	if (!i_tmp)
-+		return ERR_PTR(-ENOMEM);
-+
-+	for (i_num = 0; i_num < s_tmp->ip_num; i_num++) {
-+		*(i_tmp + i_num) =
-+		    (struct acl_ip_label *)
-+		    acl_alloc(sizeof (struct acl_ip_label));
-+		if (!*(i_tmp + i_num))
-+			return ERR_PTR(-ENOMEM);
-+
-+		if (copy_from_user
-+		    (&i_utmp2, s_tmp->ips + i_num,
-+		     sizeof (struct acl_ip_label *)))
-+			return ERR_PTR(-EFAULT);
-+
-+		if (copy_from_user
-+		    (*(i_tmp + i_num), i_utmp2,
-+		     sizeof (struct acl_ip_label)))
-+			return ERR_PTR(-EFAULT);
-+		
-+		if ((*(i_tmp + i_num))->iface == NULL)
-+			continue;
-+
-+		len = strnlen_user((*(i_tmp + i_num))->iface, IFNAMSIZ);
-+		if (!len || len >= IFNAMSIZ)
-+			return ERR_PTR(-EINVAL);
-+		tmp = acl_alloc(len);
-+		if (tmp == NULL)
-+			return ERR_PTR(-ENOMEM);
-+		if (copy_from_user(tmp, (*(i_tmp + i_num))->iface, len))
-+			return ERR_PTR(-EFAULT);
-+		(*(i_tmp + i_num))->iface = tmp;
++	if ((error = gr_set_acls(0))) {
++		free_variables();
++		goto out;
@@ -12374,8 +11659,3 @@
-+	s_tmp->ips = i_tmp;
-+
-+insert:
-+	if (!insert_name_entry(s_tmp->filename, s_tmp->inode,
-+			       s_tmp->device))
-+		return ERR_PTR(-ENOMEM);
-+
-+	return s_tmp;
++	gr_status |= GR_READY;
++      out:
++	return error;
@@ -12383,0 +11664,2 @@
++/* derived from glibc fnmatch() 0: match, 1: no match*/
++
@@ -12385 +11667 @@
-+copy_user_subjs(struct acl_subject_label *userp, struct acl_role_label *role)
++glob_match(const char *p, const char *n)
@@ -12387,3 +11669 @@
-+	struct acl_subject_label s_pre;
-+	struct acl_subject_label * ret;
-+	int err;
++	char c;
@@ -12391,8 +11671,27 @@
-+	while (userp) {
-+		if (copy_from_user(&s_pre, userp,
-+				   sizeof (struct acl_subject_label)))
-+			return -EFAULT;
-+		
-+		/* do not add nested subjects here, add
-+		   while parsing objects
-+		*/
++	while ((c = *p++) != '\0') {
++	switch (c) {
++		case '?':
++			if (*n == '\0')
++				return 1;
++			else if (*n == '/')
++				return 1;
++			break;
++		case '\\':
++			if (*n != c)
++				return 1;
++			break;
++		case '*':
++			for (c = *p++; c == '?' || c == '*'; c = *p++) {
++				if (*n == '/')
++					return 1;
++				else if (c == '?') {
++					if (*n == '\0')
++						return 1;
++					else
++						++n;
++				}
++			}
++			if (c == '\0') {
++				return 0;
++			} else {
++				const char *endp;
@@ -12400,4 +11699,2 @@
-+		if (s_pre.mode & GR_NESTED) {
-+			userp = s_pre.prev;
-+			continue;
-+		}
++				if ((endp = strchr(n, '/')) == NULL)
++					endp = n + strlen(n);
@@ -12405 +11702,14 @@
-+		ret = do_copy_user_subj(userp, role);
++				if (c == '[') {
++					for (--p; n < endp; ++n)
++						if (!glob_match(p, n))
++							return 0;
++				} else if (c == '/') {
++					while (*n != '\0' && *n != '/')
++						++n;
++					if (*n == '/' && !glob_match(p, n + 1))
++						return 0;
++				} else {
++					for (--p; n < endp; ++n)
++						if (*n == c && !glob_match(p, n))
++							return 0;
++				}
@@ -12407,3 +11717,6 @@
-+		err = PTR_ERR(ret);
-+		if (IS_ERR(ret))
-+			return err;
++				return 1;
++			}
++		case '[':
++			{
++			int not;
++			char cold;
@@ -12411 +11724,2 @@
-+		insert_acl_subj_label(ret, role);
++			if (*n == '\0' || *n == '/')
++				return 1;
@@ -12413,2 +11727,3 @@
-+		userp = s_pre.prev;
-+	}
++			not = (*p == '!' || *p == '^');
++			if (not)
++				++p;
@@ -12416,2 +11731,3 @@
-+	return 0;
-+}
++			c = *p++;
++			for (;;) {
++				unsigned char fn = (unsigned char)*n;
@@ -12419,13 +11735,7 @@
-+static int
-+copy_user_acl(struct gr_arg *arg)
-+{
-+	struct acl_role_label *r_tmp = NULL, **r_utmp, *r_utmp2;
-+	struct sprole_pw *sptmp;
-+	struct gr_hash_struct *ghash;
-+	uid_t *domainlist;
-+	unsigned int r_num;
-+	unsigned int len;
-+	char *tmp;
-+	int err = 0;
-+	__u16 i;
-+	__u32 num_subjs;
++				if (c == '\0')
++					return 1;
++				else {
++					if (c == fn)
++						goto matched;
++					cold = c;
++					c = *p++;
@@ -12433,3 +11743,2 @@
-+	/* we need a default and kernel role */
-+	if (arg->role_db.num_roles < 2)
-+		return -EINVAL;
++					if (c == '-' && *p != ']') {
++						unsigned char cend = *p++;
@@ -12437 +11746,2 @@
-+	/* copy special role authentication info from userspace */
++						if (cend == '\0')
++							return 1;
@@ -12439,2 +11749,2 @@
-+	num_sprole_pws = arg->num_sprole_pws;
-+	acl_special_roles = (struct sprole_pw **) acl_alloc(num_sprole_pws * sizeof(struct sprole_pw *));
++						if (cold <= fn && fn <= cend)
++							goto matched;
@@ -12442,24 +11752,3 @@
-+	if (!acl_special_roles) {
-+		err = -ENOMEM;
-+		goto cleanup;
-+	}
-+
-+	for (i = 0; i < num_sprole_pws; i++) {
-+		sptmp = (struct sprole_pw *) acl_alloc(sizeof(struct sprole_pw));
-+		if (!sptmp) {
-+			err = -ENOMEM;
-+			goto cleanup;
-+		}
-+		if (copy_from_user(sptmp, arg->sprole_pws + i,
-+				   sizeof (struct sprole_pw))) {
-+			err = -EFAULT;
-+			goto cleanup;
-+		}
-+
-+		len =
-+		    strnlen_user(sptmp->rolename, GR_SPROLE_LEN);
-+
-+		if (!len || len >= GR_SPROLE_LEN) {
-+			err = -EINVAL;
-+			goto cleanup;
-+		}
++						c = *p++;
++					}
++				}
@@ -12467,4 +11756,10 @@
-+		if ((tmp = (char *) acl_alloc(len)) == NULL) {
-+			err = -ENOMEM;
-+			goto cleanup;
-+		}
++				if (c == ']')
++					break;
++			}
++			if (!not)
++				return 1;
++			break;
++		matched:
++			while (c != ']') {
++				if (c == '\0')
++					return 1;
@@ -12472,3 +11767,4 @@
-+		if (copy_from_user(tmp, sptmp->rolename, len)) {
-+			err = -EFAULT;
-+			goto cleanup;
++				c = *p++;
++			}
++			if (not)
++				return 1;
@@ -12475,0 +11772,5 @@
++		break;
++	default:
++		if (c != *n)
++			return 1;
++	}
@@ -12477,5 +11778 @@
-+#ifdef CONFIG_GRKERNSEC_ACL_DEBUG
-+		printk(KERN_ALERT "Copying special role %s\n", tmp);
-+#endif
-+		sptmp->rolename = tmp;
-+		acl_special_roles[i] = sptmp;
++	++n;
@@ -12484 +11781,2 @@
-+	r_utmp = (struct acl_role_label **) arg->role_db.r_table;
++	if (*n == '\0')
++		return 0;
@@ -12486,2 +11784,2 @@
-+	for (r_num = 0; r_num < arg->role_db.num_roles; r_num++) {
-+		r_tmp = acl_alloc(sizeof (struct acl_role_label));
++	if (*n == '/')
++		return 0;
@@ -12489,4 +11787,2 @@
-+		if (!r_tmp) {
-+			err = -ENOMEM;
-+			goto cleanup;
-+		}
++	return 1;
++}
@@ -12494,5 +11790,5 @@
-+		if (copy_from_user(&r_utmp2, r_utmp + r_num,
-+				   sizeof (struct acl_role_label *))) {
-+			err = -EFAULT;
-+			goto cleanup;
-+		}
++static struct acl_object_label *
++chk_glob_label(struct acl_object_label *globbed,
++	struct dentry *dentry, struct vfsmount *mnt, char **path)
++{
++	struct acl_object_label *tmp;
@@ -12500,5 +11796,2 @@
-+		if (copy_from_user(r_tmp, r_utmp2,
-+				   sizeof (struct acl_role_label))) {
-+			err = -EFAULT;
-+			goto cleanup;
-+		}
++	if (*path == NULL)
++		*path = gr_to_filename_nolock(dentry, mnt);
@@ -12506 +11799 @@
-+		len = strnlen_user(r_tmp->rolename, GR_SPROLE_LEN);
++	tmp = globbed;
@@ -12508,4 +11801,5 @@
-+		if (!len || len >= PATH_MAX) {
-+			err = -EINVAL;
-+			goto cleanup;
-+		}
++	while (tmp) {
++		if (!glob_match(tmp->filename, *path))
++			return tmp;
++		tmp = tmp->next;
++	}
@@ -12513,9 +11807,2 @@
-+		if ((tmp = (char *) acl_alloc(len)) == NULL) {
-+			err = -ENOMEM;
-+			goto cleanup;
-+		}
-+		if (copy_from_user(tmp, r_tmp->rolename, len)) {
-+			err = -EFAULT;
-+			goto cleanup;
-+		}
-+		r_tmp->rolename = tmp;
++	return NULL;
++}
@@ -12523,6 +11810,8 @@
-+		if (!strcmp(r_tmp->rolename, "default")
-+		    && (r_tmp->roletype & GR_ROLE_DEFAULT)) {
-+			default_role = r_tmp;
-+		} else if (!strcmp(r_tmp->rolename, ":::kernel:::")) {
-+			kernel_role = r_tmp;
-+		}
++static struct acl_object_label *
++__full_lookup(const struct dentry *orig_dentry, const struct vfsmount *orig_mnt,
++	    const ino_t curr_ino, const dev_t curr_dev,
++	    const struct acl_subject_label *subj, char **path)
++{
++	struct acl_subject_label *tmpsubj;
++	struct acl_object_label *retval;
++	struct acl_object_label *retval2;
@@ -12530,7 +11819,12 @@
-+		if ((ghash = (struct gr_hash_struct *) acl_alloc(sizeof(struct gr_hash_struct))) == NULL) {
-+			err = -ENOMEM;
-+			goto cleanup;
-+		}
-+		if (copy_from_user(ghash, r_tmp->hash, sizeof(struct gr_hash_struct))) {
-+			err = -EFAULT;
-+			goto cleanup;
++	tmpsubj = (struct acl_subject_label *) subj;
++	read_lock(&gr_inode_lock);
++	do {
++		retval = lookup_acl_obj_label(curr_ino, curr_dev, tmpsubj);
++		if (retval) {
++			if (retval->globbed) {
++				retval2 = chk_glob_label(retval->globbed, (struct dentry *)orig_dentry,
++						(struct vfsmount *)orig_mnt, path);
++				if (retval2)
++					retval = retval2;
++			}
++			break;
@@ -12537,0 +11832,2 @@
++	} while ((tmpsubj = tmpsubj->parent_subject));
++	read_unlock(&gr_inode_lock);
@@ -12539,3 +11835,2 @@
-+		r_tmp->hash = ghash;
-+
-+		num_subjs = count_user_subjs(r_tmp->hash->first);
++	return retval;
++}
@@ -12543,4 +11838,9 @@
-+		r_tmp->subj_hash_size = num_subjs;
-+		r_tmp->subj_hash =
-+		    (struct acl_subject_label **)
-+		    create_table(&(r_tmp->subj_hash_size), sizeof(void *));
++static __inline__ struct acl_object_label *
++full_lookup(const struct dentry *orig_dentry, const struct vfsmount *orig_mnt,
++	    const struct dentry *curr_dentry,
++	    const struct acl_subject_label *subj, char **path)
++{
++	return __full_lookup(orig_dentry, orig_mnt,
++			     curr_dentry->d_inode->i_ino, 
++			     curr_dentry->d_inode->i_sb->s_dev, subj, path);
++}
@@ -12548,4 +11848,7 @@
-+		if (!r_tmp->subj_hash) {
-+			err = -ENOMEM;
-+			goto cleanup;
-+		}
++static struct acl_object_label *
++__chk_obj_label(const struct dentry *l_dentry, const struct vfsmount *l_mnt,
++	      const struct acl_subject_label *subj, char *path)
++{
++	struct dentry *dentry = (struct dentry *) l_dentry;
++	struct vfsmount *mnt = (struct vfsmount *) l_mnt;
++	struct acl_object_label *retval;
@@ -12553,3 +11856 @@
-+		err = copy_user_allowedips(r_tmp);
-+		if (err)
-+			goto cleanup;
++	spin_lock(&dcache_lock);
@@ -12557,13 +11858,4 @@
-+		/* copy domain info */
-+		if (r_tmp->domain_children != NULL) {
-+			domainlist = acl_alloc(r_tmp->domain_child_num * sizeof(uid_t));
-+			if (domainlist == NULL) {
-+				err = -ENOMEM;
-+				goto cleanup;
-+			}
-+			if (copy_from_user(domainlist, r_tmp->domain_children, r_tmp->domain_child_num * sizeof(uid_t))) {
-+				err = -EFAULT;
-+				goto cleanup;
-+			}
-+			r_tmp->domain_children = domainlist;
-+		}
++	if (unlikely(mnt == shm_mnt || mnt == pipe_mnt || mnt == sock_mnt)) {
++		retval = fakefs_obj;
++		goto out;
++	}
@@ -12571,3 +11863,3 @@
-+		err = copy_user_transitions(r_tmp);
-+		if (err)
-+			goto cleanup;
++	for (;;) {
++		if (dentry == real_root && mnt == real_root_mnt)
++			break;
@@ -12575,3 +11867,3 @@
-+		memset(r_tmp->subj_hash, 0,
-+		       r_tmp->subj_hash_size *
-+		       sizeof (struct acl_subject_label *));
++		if (dentry == mnt->mnt_root || IS_ROOT(dentry)) {
++			if (mnt->mnt_parent == mnt)
++				break;
@@ -12579 +11871,3 @@
-+		err = copy_user_subjs(r_tmp->hash->first, r_tmp);
++			retval = full_lookup(l_dentry, l_mnt, dentry, subj, &path);
++			if (retval != NULL)
++				goto out;
@@ -12581,2 +11875,4 @@
-+		if (err)
-+			goto cleanup;
++			dentry = mnt->mnt_mountpoint;
++			mnt = mnt->mnt_parent;
++			continue;
++		}
@@ -12584,2 +11880,3 @@
-+		/* set nested subject list to null */
-+		r_tmp->hash->first = NULL;
++		retval = full_lookup(l_dentry, l_mnt, dentry, subj, &path);
++		if (retval != NULL)
++			goto out;
@@ -12587 +11884 @@
-+		insert_acl_role_label(r_tmp);
++		dentry = dentry->d_parent;
@@ -12590,5 +11887 @@
-+	goto return_err;
-+      cleanup:
-+	free_variables();
-+      return_err:
-+	return err;
++	retval = full_lookup(l_dentry, l_mnt, dentry, subj, &path);
@@ -12595,0 +11889,5 @@
++	if (retval == NULL)
++		retval = full_lookup(l_dentry, l_mnt, real_root, subj, &path);
++out:
++	spin_unlock(&dcache_lock);
++	return retval;
@@ -12598,2 +11896,3 @@
-+static int
-+gracl_init(struct gr_arg *args)
++static __inline__ struct acl_object_label *
++chk_obj_label(const struct dentry *l_dentry, const struct vfsmount *l_mnt,
++	      const struct acl_subject_label *subj)
@@ -12601 +11900,3 @@
-+	int error = 0;
++	char *path = NULL;
++	return __chk_obj_label(l_dentry, l_mnt, subj, path);
++}
@@ -12603,2 +11904,6 @@
-+	memcpy(gr_system_salt, args->salt, GR_SALT_LEN);
-+	memcpy(gr_system_sum, args->sum, GR_SHA_LEN);
++static __inline__ struct acl_object_label *
++chk_obj_create_label(const struct dentry *l_dentry, const struct vfsmount *l_mnt,
++		     const struct acl_subject_label *subj, char *path)
++{
++	return __chk_obj_label(l_dentry, l_mnt, subj, path);
++}
@@ -12606,211 +11911,3 @@
-+	if (init_variables(args)) {
-+		gr_log_str(GR_DONT_AUDIT_GOOD, GR_INITF_ACL_MSG, GR_VERSION);
-+		error = -ENOMEM;
-+		free_variables();
-+		goto out;
-+	}
-+
-+	error = copy_user_acl(args);
-+	free_init_variables();
-+	if (error) {
-+		free_variables();
-+		goto out;
-+	}
-+
-+	if ((error = gr_set_acls(0))) {
-+		free_variables();
-+		goto out;
-+	}
-+
-+	gr_status |= GR_READY;
-+      out:
-+	return error;
-+}
-+
-+/* derived from glibc fnmatch() 0: match, 1: no match*/
-+
-+static int
-+glob_match(const char *p, const char *n)
-+{
-+	char c;
-+
-+	while ((c = *p++) != '\0') {
-+	switch (c) {
-+		case '?':
-+			if (*n == '\0')
-+				return 1;
-+			else if (*n == '/')
-+				return 1;
-+			break;
-+		case '\\':
-+			if (*n != c)
-+				return 1;
-+			break;
-+		case '*':
-+			for (c = *p++; c == '?' || c == '*'; c = *p++) {
-+				if (*n == '/')
-+					return 1;
-+				else if (c == '?') {
-+					if (*n == '\0')
-+						return 1;
-+					else
-+						++n;
-+				}
-+			}
-+			if (c == '\0') {
-+				return 0;
-+			} else {
-+				const char *endp;
-+
-+				if ((endp = strchr(n, '/')) == NULL)
-+					endp = n + strlen(n);
-+
-+				if (c == '[') {
-+					for (--p; n < endp; ++n)
-+						if (!glob_match(p, n))
-+							return 0;
-+				} else if (c == '/') {
-+					while (*n != '\0' && *n != '/')
-+						++n;
-+					if (*n == '/' && !glob_match(p, n + 1))
-+						return 0;
-+				} else {
-+					for (--p; n < endp; ++n)
-+						if (*n == c && !glob_match(p, n))
-+							return 0;
-+				}
-+
-+				return 1;
-+			}
-+		case '[':
-+			{
-+			int not;
-+			char cold;
-+
-+			if (*n == '\0' || *n == '/')
-+				return 1;
-+
-+			not = (*p == '!' || *p == '^');
-+			if (not)
-+				++p;
-+
-+			c = *p++;
-+			for (;;) {
-+				unsigned char fn = (unsigned char)*n;
-+
-+				if (c == '\0')
-+					return 1;
-+				else {
-+					if (c == fn)
-+						goto matched;
-+					cold = c;
-+					c = *p++;
-+
-+					if (c == '-' && *p != ']') {
-+						unsigned char cend = *p++;
-+
-+						if (cend == '\0')
-+							return 1;
-+
-+						if (cold <= fn && fn <= cend)
-+							goto matched;
-+
-+						c = *p++;
-+					}
-+				}
-+
-+				if (c == ']')
-+					break;
-+			}
-+			if (!not)
-+				return 1;
-+			break;
-+		matched:
-+			while (c != ']') {
-+				if (c == '\0')
-+					return 1;
-+
-+				c = *p++;
-+			}
-+			if (not)
-+				return 1;
-+		}
-+		break;
-+	default:
-+		if (c != *n)
-+			return 1;
-+	}
-+
-+	++n;
-+	}
-+
-+	if (*n == '\0')
-+		return 0;
-+
-+	if (*n == '/')
-+		return 0;
-+
-+	return 1;
-+}
-+
-+static struct acl_object_label *
-+chk_glob_label(struct acl_object_label *globbed,
-+	struct dentry *dentry, struct vfsmount *mnt, char **path)
-+{
-+	struct acl_object_label *tmp;
-+
-+	if (*path == NULL)
-+		*path = gr_to_filename_nolock(dentry, mnt);
-+
-+	tmp = globbed;
-+
-+	while (tmp) {
-+		if (!glob_match(tmp->filename, *path))
-+			return tmp;
-+		tmp = tmp->next;
-+	}
-+
-+	return NULL;
-+}
-+
-+static struct acl_object_label *
-+__full_lookup(const struct dentry *orig_dentry, const struct vfsmount *orig_mnt,
-+	    const ino_t curr_ino, const dev_t curr_dev,
-+	    const struct acl_subject_label *subj, char **path)
-+{
-+	struct acl_subject_label *tmpsubj;
-+	struct acl_object_label *retval;
-+	struct acl_object_label *retval2;
-+
-+	tmpsubj = (struct acl_subject_label *) subj;
-+	read_lock(&gr_inode_lock);
-+	do {
-+		retval = lookup_acl_obj_label(curr_ino, curr_dev, tmpsubj);
-+		if (retval) {
-+			if (retval->globbed) {
-+				retval2 = chk_glob_label(retval->globbed, (struct dentry *)orig_dentry,
-+						(struct vfsmount *)orig_mnt, path);
-+				if (retval2)
-+					retval = retval2;
-+			}
-+			break;
-+		}
-+	} while ((tmpsubj = tmpsubj->parent_subject));
-+	read_unlock(&gr_inode_lock);
-+
-+	return retval;
-+}
-+
-+static __inline__ struct acl_object_label *
-+full_lookup(const struct dentry *orig_dentry, const struct vfsmount *orig_mnt,
-+	    const struct dentry *curr_dentry,
-+	    const struct acl_subject_label *subj, char **path)
-+{
-+	return __full_lookup(orig_dentry, orig_mnt,
-+			     curr_dentry->d_inode->i_ino, 
-+			     curr_dentry->d_inode->i_sb->s_dev, subj, path);
-+}
-+
-+static struct acl_object_label *
-+__chk_obj_label(const struct dentry *l_dentry, const struct vfsmount *l_mnt,
-+	      const struct acl_subject_label *subj, char *path)
++static struct acl_subject_label *
++chk_subj_label(const struct dentry *l_dentry, const struct vfsmount *l_mnt,
++	       const struct acl_role_label *role)
@@ -12820 +11917 @@
-+	struct acl_object_label *retval;
++	struct acl_subject_label *retval;
@@ -12824,5 +11920,0 @@
-+	if (unlikely(mnt == shm_mnt || mnt == pipe_mnt || mnt == sock_mnt)) {
-+		retval = fakefs_obj;
-+		goto out;
-+	}
-+
@@ -12832 +11923,0 @@
-+
@@ -12837 +11928,5 @@
-+			retval = full_lookup(l_dentry, l_mnt, dentry, subj, &path);
++			read_lock(&gr_inode_lock);
++			retval =
++				lookup_acl_subj_label(dentry->d_inode->i_ino,
++						dentry->d_inode->i_sb->s_dev, role);
++			read_unlock(&gr_inode_lock);
@@ -12846 +11941,4 @@
-+		retval = full_lookup(l_dentry, l_mnt, dentry, subj, &path);
++		read_lock(&gr_inode_lock);
++		retval = lookup_acl_subj_label(dentry->d_inode->i_ino,
++					  dentry->d_inode->i_sb->s_dev, role);
++		read_unlock(&gr_inode_lock);
@@ -12853 +11951,4 @@
-+	retval = full_lookup(l_dentry, l_mnt, dentry, subj, &path);
++	read_lock(&gr_inode_lock);
++	retval = lookup_acl_subj_label(dentry->d_inode->i_ino,
++				  dentry->d_inode->i_sb->s_dev, role);
++	read_unlock(&gr_inode_lock);
@@ -12855,2 +11956,6 @@
-+	if (retval == NULL)
-+		retval = full_lookup(l_dentry, l_mnt, real_root, subj, &path);
++	if (unlikely(retval == NULL)) {
++		read_lock(&gr_inode_lock);
++		retval = lookup_acl_subj_label(real_root->d_inode->i_ino,
++					  real_root->d_inode->i_sb->s_dev, role);
++		read_unlock(&gr_inode_lock);
++	}
@@ -12858,0 +11964 @@
++
@@ -12862,3 +11968,2 @@
-+static __inline__ struct acl_object_label *
-+chk_obj_label(const struct dentry *l_dentry, const struct vfsmount *l_mnt,
-+	      const struct acl_subject_label *subj)
++static void
++gr_log_learn(const struct task_struct *task, const struct dentry *dentry, const struct vfsmount *mnt, const __u32 mode)
@@ -12866,77 +11971,6 @@
-+	char *path = NULL;
-+	return __chk_obj_label(l_dentry, l_mnt, subj, path);
-+}
-+
-+static __inline__ struct acl_object_label *
-+chk_obj_create_label(const struct dentry *l_dentry, const struct vfsmount *l_mnt,
-+		     const struct acl_subject_label *subj, char *path)
-+{
-+	return __chk_obj_label(l_dentry, l_mnt, subj, path);
-+}
-+
-+static struct acl_subject_label *
-+chk_subj_label(const struct dentry *l_dentry, const struct vfsmount *l_mnt,
-+	       const struct acl_role_label *role)
-+{
-+	struct dentry *dentry = (struct dentry *) l_dentry;
-+	struct vfsmount *mnt = (struct vfsmount *) l_mnt;
-+	struct acl_subject_label *retval;
-+
-+	spin_lock(&dcache_lock);
-+
-+	for (;;) {
-+		if (dentry == real_root && mnt == real_root_mnt)
-+			break;
-+		if (dentry == mnt->mnt_root || IS_ROOT(dentry)) {
-+			if (mnt->mnt_parent == mnt)
-+				break;
-+
-+			read_lock(&gr_inode_lock);
-+			retval =
-+				lookup_acl_subj_label(dentry->d_inode->i_ino,
-+						dentry->d_inode->i_sb->s_dev, role);
-+			read_unlock(&gr_inode_lock);
-+			if (retval != NULL)
-+				goto out;
-+
-+			dentry = mnt->mnt_mountpoint;
-+			mnt = mnt->mnt_parent;
-+			continue;
-+		}
-+
-+		read_lock(&gr_inode_lock);
-+		retval = lookup_acl_subj_label(dentry->d_inode->i_ino,
-+					  dentry->d_inode->i_sb->s_dev, role);
-+		read_unlock(&gr_inode_lock);
-+		if (retval != NULL)
-+			goto out;
-+
-+		dentry = dentry->d_parent;
-+	}
-+
-+	read_lock(&gr_inode_lock);
-+	retval = lookup_acl_subj_label(dentry->d_inode->i_ino,
-+				  dentry->d_inode->i_sb->s_dev, role);
-+	read_unlock(&gr_inode_lock);
-+
-+	if (unlikely(retval == NULL)) {
-+		read_lock(&gr_inode_lock);
-+		retval = lookup_acl_subj_label(real_root->d_inode->i_ino,
-+					  real_root->d_inode->i_sb->s_dev, role);
-+		read_unlock(&gr_inode_lock);
-+	}
-+out:
-+	spin_unlock(&dcache_lock);
-+
-+	return retval;
-+}
-+
-+static void
-+gr_log_learn(const struct task_struct *task, const struct dentry *dentry, const struct vfsmount *mnt, const __u32 mode)
-+{
-+	security_learn(GR_LEARN_AUDIT_MSG, task->role->rolename, task->role->roletype,
-+		       task->uid, task->gid, task->exec_file ? gr_to_filename1(task->exec_file->f_dentry,
-+		       task->exec_file->f_vfsmnt) : task->acl->filename, task->acl->filename,
-+		       1, 1, gr_to_filename(dentry, mnt), (unsigned long) mode, NIPQUAD(task->signal->curr_ip));
-+
-+	return;
++	security_learn(GR_LEARN_AUDIT_MSG, task->role->rolename, task->role->roletype,
++		       task->uid, task->gid, task->exec_file ? gr_to_filename1(task->exec_file->f_dentry,
++		       task->exec_file->f_vfsmnt) : task->acl->filename, task->acl->filename,
++		       1, 1, gr_to_filename(dentry, mnt), (unsigned long) mode, NIPQUAD(task->signal->curr_ip));
++
++	return;
@@ -14690,102 +13724,3 @@
-diff --git a/grsecurity/gracl_alloc.c b/grsecurity/gracl_alloc.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..207dd450db814071c2e6b6b564996e9a4dc95641
---- /dev/null
-+++ b/grsecurity/gracl_alloc.c
-@@ -0,0 +1,91 @@
-+#include <linux/kernel.h>
-+#include <linux/mm.h>
-+#include <linux/slab.h>
-+#include <linux/vmalloc.h>
-+#include <linux/gracl.h>
-+#include <linux/grsecurity.h>
-+
-+static unsigned long alloc_stack_next = 1;
-+static unsigned long alloc_stack_size = 1;
-+static void **alloc_stack;
-+
-+static __inline__ int
-+alloc_pop(void)
-+{
-+	if (alloc_stack_next == 1)
-+		return 0;
-+
-+	kfree(alloc_stack[alloc_stack_next - 2]);
-+
-+	alloc_stack_next--;
-+
-+	return 1;
-+}
-+
-+static __inline__ void
-+alloc_push(void *buf)
-+{
-+	if (alloc_stack_next >= alloc_stack_size)
-+		BUG();
-+
-+	alloc_stack[alloc_stack_next - 1] = buf;
-+
-+	alloc_stack_next++;
-+
-+	return;
-+}
-+
-+void *
-+acl_alloc(unsigned long len)
-+{
-+	void *ret;
-+
-+	if (len > PAGE_SIZE)
-+		BUG();
-+
-+	ret = kmalloc(len, GFP_KERNEL);
-+
-+	if (ret)
-+		alloc_push(ret);
-+
-+	return ret;
-+}
-+
-+void
-+acl_free_all(void)
-+{
-+	if (gr_acl_is_enabled() || !alloc_stack)
-+		return;
-+
-+	while (alloc_pop()) ;
-+
-+	if (alloc_stack) {
-+		if ((alloc_stack_size * sizeof (void *)) <= PAGE_SIZE)
-+			kfree(alloc_stack);
-+		else
-+			vfree(alloc_stack);
-+	}
-+
-+	alloc_stack = NULL;
-+	alloc_stack_size = 1;
-+	alloc_stack_next = 1;
-+
-+	return;
-+}
-+
-+int
-+acl_alloc_stack_init(unsigned long size)
-+{
-+	if ((size * sizeof (void *)) <= PAGE_SIZE)
-+		alloc_stack =
-+		    (void **) kmalloc(size * sizeof (void *), GFP_KERNEL);
-+	else
-+		alloc_stack = (void **) vmalloc(size * sizeof (void *));
-+
-+	alloc_stack_size = size;
-+
-+	if (!alloc_stack)
-+		return 0;
-+	else
-+		return 1;
-+}
-diff --git a/grsecurity/gracl_cap.c b/grsecurity/gracl_cap.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..61b74c971cdb3e102d7c8473c16faa49c21ff0b0
---- /dev/null
-+++ b/grsecurity/gracl_cap.c
+diff -urNp linux-2.6.17.4/grsecurity/gracl_cap.c linux-2.6.17.4/grsecurity/gracl_cap.c
+--- linux-2.6.17.4/grsecurity/gracl_cap.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/gracl_cap.c	2006-07-01 15:39:05.000000000 -0400
@@ -14903,5 +13838,3 @@
-diff --git a/grsecurity/gracl_fs.c b/grsecurity/gracl_fs.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..d3b01a7c9d2bb6f5d26c0770a844606c0d3ddc1a
---- /dev/null
-+++ b/grsecurity/gracl_fs.c
+diff -urNp linux-2.6.17.4/grsecurity/gracl_fs.c linux-2.6.17.4/grsecurity/gracl_fs.c
+--- linux-2.6.17.4/grsecurity/gracl_fs.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/gracl_fs.c	2006-07-01 15:39:05.000000000 -0400
@@ -15332,5 +14265,3 @@
-diff --git a/grsecurity/gracl_ip.c b/grsecurity/gracl_ip.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..39bf457af50d0233cb394a4059442727e083c690
---- /dev/null
-+++ b/grsecurity/gracl_ip.c
+diff -urNp linux-2.6.17.4/grsecurity/gracl_ip.c linux-2.6.17.4/grsecurity/gracl_ip.c
+--- linux-2.6.17.4/grsecurity/gracl_ip.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/gracl_ip.c	2006-07-01 15:39:05.000000000 -0400
@@ -15651,5 +14582,3 @@
-diff --git a/grsecurity/gracl_learn.c b/grsecurity/gracl_learn.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..cc269e3d70a44878b14b808f89ab7b0aecc5673b
---- /dev/null
-+++ b/grsecurity/gracl_learn.c
+diff -urNp linux-2.6.17.4/grsecurity/gracl_learn.c linux-2.6.17.4/grsecurity/gracl_learn.c
+--- linux-2.6.17.4/grsecurity/gracl_learn.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/gracl_learn.c	2006-07-01 15:39:05.000000000 -0400
@@ -15861,5 +14790,3 @@
-diff --git a/grsecurity/gracl_res.c b/grsecurity/gracl_res.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..04779c92cef8ee719015aa3a4b47352d70d8b788
---- /dev/null
-+++ b/grsecurity/gracl_res.c
+diff -urNp linux-2.6.17.4/grsecurity/gracl_res.c linux-2.6.17.4/grsecurity/gracl_res.c
+--- linux-2.6.17.4/grsecurity/gracl_res.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/gracl_res.c	2006-07-01 20:23:26.000000000 -0400
@@ -15912,5 +14839,3 @@
-diff --git a/grsecurity/gracl_segv.c b/grsecurity/gracl_segv.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..f81930357bc9fa0ecf67b8cb60851d86310b5490
---- /dev/null
-+++ b/grsecurity/gracl_segv.c
+diff -urNp linux-2.6.17.4/grsecurity/gracl_segv.c linux-2.6.17.4/grsecurity/gracl_segv.c
+--- linux-2.6.17.4/grsecurity/gracl_segv.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/gracl_segv.c	2006-07-01 15:39:05.000000000 -0400
@@ -16213,5 +15138,3 @@
-diff --git a/grsecurity/gracl_shm.c b/grsecurity/gracl_shm.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..cce81195ef1fea3913486b3d3a5a4b9fd224f358
---- /dev/null
-+++ b/grsecurity/gracl_shm.c
+diff -urNp linux-2.6.17.4/grsecurity/gracl_shm.c linux-2.6.17.4/grsecurity/gracl_shm.c
+--- linux-2.6.17.4/grsecurity/gracl_shm.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/gracl_shm.c	2006-07-01 15:39:05.000000000 -0400
@@ -16252,5 +15175,3 @@
-diff --git a/grsecurity/grsec_chdir.c b/grsecurity/grsec_chdir.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..bc0be01b02a0774733a0fa06313a5e81ea55c13b
---- /dev/null
-+++ b/grsecurity/grsec_chdir.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_chdir.c linux-2.6.17.4/grsecurity/grsec_chdir.c
+--- linux-2.6.17.4/grsecurity/grsec_chdir.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_chdir.c	2006-07-01 15:39:05.000000000 -0400
@@ -16277,5 +15198,3 @@
-diff --git a/grsecurity/grsec_chroot.c b/grsecurity/grsec_chroot.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..199a0d3b81d6931a1233d1457802f32209d38809
---- /dev/null
-+++ b/grsecurity/grsec_chroot.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_chroot.c linux-2.6.17.4/grsecurity/grsec_chroot.c
+--- linux-2.6.17.4/grsecurity/grsec_chroot.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_chroot.c	2006-07-01 17:25:17.000000000 -0400
@@ -16615,5 +15534,3 @@
-diff --git a/grsecurity/grsec_disabled.c b/grsecurity/grsec_disabled.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..92ed6191e36b1efb5086939c7f456bd5dd7822a0
---- /dev/null
-+++ b/grsecurity/grsec_disabled.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_disabled.c linux-2.6.17.4/grsecurity/grsec_disabled.c
+--- linux-2.6.17.4/grsecurity/grsec_disabled.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_disabled.c	2006-07-01 15:39:05.000000000 -0400
@@ -17039,5 +15956,3 @@
-diff --git a/grsecurity/grsec_exec.c b/grsecurity/grsec_exec.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..7b1479e518093b0f64cd287b12b76e1b780da728
---- /dev/null
-+++ b/grsecurity/grsec_exec.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_exec.c linux-2.6.17.4/grsecurity/grsec_exec.c
+--- linux-2.6.17.4/grsecurity/grsec_exec.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_exec.c	2006-07-01 15:39:05.000000000 -0400
@@ -17133,5 +16048,3 @@
-diff --git a/grsecurity/grsec_fifo.c b/grsecurity/grsec_fifo.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..cf3169ac19c93c78cf469398010bafd3d4dd4e07
---- /dev/null
-+++ b/grsecurity/grsec_fifo.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_fifo.c linux-2.6.17.4/grsecurity/grsec_fifo.c
+--- linux-2.6.17.4/grsecurity/grsec_fifo.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_fifo.c	2006-07-01 15:39:05.000000000 -0400
@@ -17161,5 +16074,3 @@
-diff --git a/grsecurity/grsec_fork.c b/grsecurity/grsec_fork.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..6728f54538966632d050ebd9fd413f7e5a16acf6
---- /dev/null
-+++ b/grsecurity/grsec_fork.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_fork.c linux-2.6.17.4/grsecurity/grsec_fork.c
+--- linux-2.6.17.4/grsecurity/grsec_fork.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_fork.c	2006-07-01 15:39:05.000000000 -0400
@@ -17181,5 +16092,3 @@
-diff --git a/grsecurity/grsec_init.c b/grsecurity/grsec_init.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..ea520b5d4895a27efa668be224ac31ed683fa759
---- /dev/null
-+++ b/grsecurity/grsec_init.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_init.c linux-2.6.17.4/grsecurity/grsec_init.c
+--- linux-2.6.17.4/grsecurity/grsec_init.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_init.c	2006-07-01 20:22:38.000000000 -0400
@@ -17423,5 +16332,3 @@
-diff --git a/grsecurity/grsec_ipc.c b/grsecurity/grsec_ipc.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..9cace6e9dea7b972c155e52ead74dc4da2c96b5d
---- /dev/null
-+++ b/grsecurity/grsec_ipc.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_ipc.c linux-2.6.17.4/grsecurity/grsec_ipc.c
+--- linux-2.6.17.4/grsecurity/grsec_ipc.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_ipc.c	2006-07-01 15:39:05.000000000 -0400
@@ -17510,5 +16417,3 @@
-diff --git a/grsecurity/grsec_link.c b/grsecurity/grsec_link.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..b8309ee50af1302d8bdad0f1b85de1c5470b1215
---- /dev/null
-+++ b/grsecurity/grsec_link.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_link.c linux-2.6.17.4/grsecurity/grsec_link.c
+--- linux-2.6.17.4/grsecurity/grsec_link.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_link.c	2006-07-01 15:39:05.000000000 -0400
@@ -17555,5 +16460,3 @@
-diff --git a/grsecurity/grsec_log.c b/grsecurity/grsec_log.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..b767d97159a84ceff60e42db05ff212e67958286
---- /dev/null
-+++ b/grsecurity/grsec_log.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_log.c linux-2.6.17.4/grsecurity/grsec_log.c
+--- linux-2.6.17.4/grsecurity/grsec_log.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_log.c	2006-07-01 15:39:05.000000000 -0400
@@ -17826,5 +16729,3 @@
-diff --git a/grsecurity/grsec_mem.c b/grsecurity/grsec_mem.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..3361642bf7c1ba85444491160dc6818bc8890e9a
---- /dev/null
-+++ b/grsecurity/grsec_mem.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_mem.c linux-2.6.17.4/grsecurity/grsec_mem.c
+--- linux-2.6.17.4/grsecurity/grsec_mem.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_mem.c	2006-07-01 15:39:05.000000000 -0400
@@ -17903,5 +16804,3 @@
-diff --git a/grsecurity/grsec_mount.c b/grsecurity/grsec_mount.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..28866541d8e9093f53179a9ffbf9c3ef84b3659f
---- /dev/null
-+++ b/grsecurity/grsec_mount.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_mount.c linux-2.6.17.4/grsecurity/grsec_mount.c
+--- linux-2.6.17.4/grsecurity/grsec_mount.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_mount.c	2006-07-01 15:39:05.000000000 -0400
@@ -17943,5 +16842,3 @@
-diff --git a/grsecurity/grsec_rand.c b/grsecurity/grsec_rand.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..5216ef42b1bb8503e607a31b729ccdc7037427aa
---- /dev/null
-+++ b/grsecurity/grsec_rand.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_rand.c linux-2.6.17.4/grsecurity/grsec_rand.c
+--- linux-2.6.17.4/grsecurity/grsec_rand.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_rand.c	2006-07-01 15:39:05.000000000 -0400
@@ -17975,5 +16872,3 @@
-diff --git a/grsecurity/grsec_sig.c b/grsecurity/grsec_sig.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..7a7a2de03a48288eb8b4a26cb53904e7abbe0a61
---- /dev/null
-+++ b/grsecurity/grsec_sig.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_sig.c linux-2.6.17.4/grsecurity/grsec_sig.c
+--- linux-2.6.17.4/grsecurity/grsec_sig.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_sig.c	2006-07-01 15:39:05.000000000 -0400
@@ -18040,5 +16935,3 @@
-diff --git a/grsecurity/grsec_sock.c b/grsecurity/grsec_sock.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..dea8189fe8be3150448c443b12c44892b2929813
---- /dev/null
-+++ b/grsecurity/grsec_sock.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_sock.c linux-2.6.17.4/grsecurity/grsec_sock.c
+--- linux-2.6.17.4/grsecurity/grsec_sock.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_sock.c	2006-07-01 15:39:05.000000000 -0400
@@ -18309,5 +17202,3 @@
-diff --git a/grsecurity/grsec_sysctl.c b/grsecurity/grsec_sysctl.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..4a4504c14283e3aca961fe471dbd2e70c1ff31d9
---- /dev/null
-+++ b/grsecurity/grsec_sysctl.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_sysctl.c linux-2.6.17.4/grsecurity/grsec_sysctl.c
+--- linux-2.6.17.4/grsecurity/grsec_sysctl.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_sysctl.c	2006-07-01 20:21:56.000000000 -0400
@@ -18781,5 +17672,3 @@
-diff --git a/grsecurity/grsec_textrel.c b/grsecurity/grsec_textrel.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..143ed92d5ad412940eff915c3ef6c4609d3494c1
---- /dev/null
-+++ b/grsecurity/grsec_textrel.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_textrel.c linux-2.6.17.4/grsecurity/grsec_textrel.c
+--- linux-2.6.17.4/grsecurity/grsec_textrel.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_textrel.c	2006-07-01 15:39:05.000000000 -0400
@@ -18803,5 +17692,3 @@
-diff --git a/grsecurity/grsec_time.c b/grsecurity/grsec_time.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..9501ab48e537e79b8335a51c79fdca1910edc2d2
---- /dev/null
-+++ b/grsecurity/grsec_time.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_time.c linux-2.6.17.4/grsecurity/grsec_time.c
+--- linux-2.6.17.4/grsecurity/grsec_time.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_time.c	2006-07-01 15:39:05.000000000 -0400
@@ -18822,5 +17709,3 @@
-diff --git a/grsecurity/grsec_tpe.c b/grsecurity/grsec_tpe.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..5bfb1ff5d49a22d113ce97057f5f41867dde2754
---- /dev/null
-+++ b/grsecurity/grsec_tpe.c
+diff -urNp linux-2.6.17.4/grsecurity/grsec_tpe.c linux-2.6.17.4/grsecurity/grsec_tpe.c
+--- linux-2.6.17.4/grsecurity/grsec_tpe.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsec_tpe.c	2006-07-01 15:39:05.000000000 -0400
@@ -18865,5 +17750,3 @@
-diff --git a/grsecurity/grsum.c b/grsecurity/grsum.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..4d00f01b43dbc164617a52cab3f17917a1403590
---- /dev/null
-+++ b/grsecurity/grsum.c
+diff -urNp linux-2.6.17.4/grsecurity/grsum.c linux-2.6.17.4/grsecurity/grsum.c
+--- linux-2.6.17.4/grsecurity/grsum.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/grsum.c	2006-07-01 15:39:05.000000000 -0400
@@ -18879,3 +17762,887 @@
-+#if !defined(CONFIG_CRYPTO) || defined(CONFIG_CRYPTO_MODULE) || !defined(CONFIG_CRYPTO_SHA256) || defined(CONFIG_CRYPTO_SHA256_MODULE)
-+#error "crypto and sha256 must be built into the kernel"
-+#endif
++#if !defined(CONFIG_CRYPTO) || defined(CONFIG_CRYPTO_MODULE) || !defined(CONFIG_CRYPTO_SHA256) || defined(CONFIG_CRYPTO_SHA256_MODULE)
++#error "crypto and sha256 must be built into the kernel"
++#endif
++
++int
++chkpw(struct gr_arg *entry, unsigned char *salt, unsigned char *sum)
++{
++	char *p;
++	struct crypto_tfm *tfm;
++	unsigned char temp_sum[GR_SHA_LEN];
++	struct scatterlist sg[2];
++	volatile int retval = 0;
++	volatile int dummy = 0;
++	unsigned int i;
++
++	tfm = crypto_alloc_tfm("sha256", 0);
++	if (tfm == NULL) {
++		/* should never happen, since sha256 should be built in */
++		return 1;
++	}
++
++	crypto_digest_init(tfm);
++
++	p = salt;
++	sg[0].page = virt_to_page(p);
++	sg[0].offset = ((long) p & ~PAGE_MASK);
++	sg[0].length = GR_SALT_LEN;
++	
++	crypto_digest_update(tfm, sg, 1);
++
++	p = entry->pw;
++	sg[0].page = virt_to_page(p);
++	sg[0].offset = ((long) p & ~PAGE_MASK);
++	sg[0].length = strlen(entry->pw);
++
++	crypto_digest_update(tfm, sg, 1);
++
++	crypto_digest_final(tfm, temp_sum);
++
++	memset(entry->pw, 0, GR_PW_LEN);
++
++	for (i = 0; i < GR_SHA_LEN; i++)
++		if (sum[i] != temp_sum[i])
++			retval = 1;
++		else
++			dummy = 1;	// waste a cycle
++
++	crypto_free_tfm(tfm);
++
++	return retval;
++}
+diff -urNp linux-2.6.17.4/grsecurity/Kconfig linux-2.6.17.4/grsecurity/Kconfig
+--- linux-2.6.17.4/grsecurity/Kconfig	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/Kconfig	2006-07-01 20:19:39.000000000 -0400
+@@ -0,0 +1,890 @@
++#
++# grecurity configuration
++#
++
++menu "Grsecurity"
++
++config GRKERNSEC
++	bool "Grsecurity"
++	select CRYPTO
++	select CRYPTO_SHA256
++	help
++	  If you say Y here, you will be able to configure many features
++	  that will enhance the security of your system.  It is highly
++	  recommended that you say Y here and read through the help
++	  for each option so that you fully understand the features and
++	  can evaluate their usefulness for your machine.
++
++choice
++	prompt "Security Level"
++	depends GRKERNSEC
++	default GRKERNSEC_CUSTOM
++
++config GRKERNSEC_LOW
++	bool "Low"
++	select GRKERNSEC_LINK
++	select GRKERNSEC_FIFO
++	select GRKERNSEC_RANDPID
++	select GRKERNSEC_EXECVE
++	select GRKERNSEC_RANDNET
++	select GRKERNSEC_DMESG
++	select GRKERNSEC_CHROOT_CHDIR
++	select GRKERNSEC_MODSTOP if (MODULES)
++
++	help
++	  If you choose this option, several of the grsecurity options will
++	  be enabled that will give you greater protection against a number
++	  of attacks, while assuring that none of your software will have any
++	  conflicts with the additional security measures.  If you run a lot
++	  of unusual software, or you are having problems with the higher
++	  security levels, you should say Y here.  With this option, the
++	  following features are enabled:
++
++	  - Linking restrictions
++	  - FIFO restrictions
++	  - Randomized PIDs
++	  - Enforcing RLIMIT_NPROC on execve
++	  - Restricted dmesg
++	  - Enforced chdir("/") on chroot
++	  - Runtime module disabling
++
++config GRKERNSEC_MEDIUM
++	bool "Medium"
++	select PAX
++	select PAX_EI_PAX
++	select PAX_PT_PAX_FLAGS
++	select PAX_HAVE_ACL_FLAGS
++	select GRKERNSEC_PROC_MEMMAP if (PAX_NOEXEC || PAX_ASLR)
++	select GRKERNSEC_CHROOT_SYSCTL
++	select GRKERNSEC_LINK
++	select GRKERNSEC_FIFO
++	select GRKERNSEC_RANDPID
++	select GRKERNSEC_EXECVE
++	select GRKERNSEC_DMESG
++	select GRKERNSEC_RANDNET
++	select GRKERNSEC_FORKFAIL
++	select GRKERNSEC_TIME
++	select GRKERNSEC_SIGNAL
++	select GRKERNSEC_CHROOT
++	select GRKERNSEC_CHROOT_UNIX
++	select GRKERNSEC_CHROOT_MOUNT
++	select GRKERNSEC_CHROOT_PIVOT
++	select GRKERNSEC_CHROOT_DOUBLE
++	select GRKERNSEC_CHROOT_CHDIR
++	select GRKERNSEC_CHROOT_MKNOD
++	select GRKERNSEC_PROC
++	select GRKERNSEC_PROC_USERGROUP
++	select GRKERNSEC_MODSTOP if (MODULES)
++	select PAX_RANDUSTACK
++	select PAX_ASLR
++	select PAX_RANDMMAP
++	select PAX_NOVSYSCALL if (X86 && !X86_64)
++
++	help
++	  If you say Y here, several features in addition to those included
++	  in the low additional security level will be enabled.  These
++	  features provide even more security to your system, though in rare
++	  cases they may be incompatible with very old or poorly written
++	  software.  If you enable this option, make sure that your auth
++	  service (identd) is running as gid 1001.  With this option, 
++	  the following features (in addition to those provided in the 
++	  low additional security level) will be enabled:
++
++	  - Randomized TCP source ports
++	  - Failed fork logging
++	  - Time change logging
++	  - Signal logging
++	  - Deny mounts in chroot
++	  - Deny double chrooting
++	  - Deny sysctl writes in chroot
++	  - Deny mknod in chroot
++	  - Deny access to abstract AF_UNIX sockets out of chroot
++	  - Deny pivot_root in chroot
++	  - Denied writes of /dev/kmem, /dev/mem, and /dev/port
++	  - /proc restrictions with special GID set to 10 (usually wheel)
++	  - Address Space Layout Randomization (ASLR)
++
++config GRKERNSEC_HIGH
++	bool "High"
++	select GRKERNSEC_LINK
++	select GRKERNSEC_FIFO
++	select GRKERNSEC_RANDPID
++	select GRKERNSEC_EXECVE
++	select GRKERNSEC_DMESG
++	select GRKERNSEC_FORKFAIL
++	select GRKERNSEC_TIME
++	select GRKERNSEC_SIGNAL
++	select GRKERNSEC_CHROOT_SHMAT
++	select GRKERNSEC_CHROOT_UNIX
++	select GRKERNSEC_CHROOT_MOUNT
++	select GRKERNSEC_CHROOT_FCHDIR
++	select GRKERNSEC_CHROOT_PIVOT
++	select GRKERNSEC_CHROOT_DOUBLE
++	select GRKERNSEC_CHROOT_CHDIR
++	select GRKERNSEC_CHROOT_MKNOD
++	select GRKERNSEC_CHROOT_CAPS
++	select GRKERNSEC_CHROOT_SYSCTL
++	select GRKERNSEC_CHROOT_FINDTASK
++	select GRKERNSEC_PROC
++	select GRKERNSEC_PROC_MEMMAP if (PAX_NOEXEC || PAX_ASLR)
++	select GRKERNSEC_HIDESYM
++	select GRKERNSEC_BRUTE
++	select GRKERNSEC_SHM if (SYSVIPC)
++	select GRKERNSEC_PROC_USERGROUP
++	select GRKERNSEC_KMEM
++	select GRKERNSEC_RESLOG
++	select GRKERNSEC_RANDNET
++	select GRKERNSEC_PROC_ADD
++	select GRKERNSEC_CHROOT_CHMOD
++	select GRKERNSEC_CHROOT_NICE
++	select GRKERNSEC_AUDIT_MOUNT
++	select GRKERNSEC_MODSTOP if (MODULES)
++	select PAX
++	select PAX_RANDUSTACK
++	select PAX_ASLR
++	select PAX_RANDMMAP
++	select PAX_NOEXEC
++	select PAX_MPROTECT
++	select PAX_EI_PAX
++	select PAX_PT_PAX_FLAGS
++	select PAX_HAVE_ACL_FLAGS
++	select PAX_KERNEXEC if (!X86_64 && !MODULES && !HOTPLUG_PCI_COMPAQ_NVRAM && !PCI_BIOS)
++	select PAX_RANDKSTACK if (X86_TSC && !X86_64)
++	select PAX_SEGMEXEC if (X86 && !X86_64)
++	select PAX_PAGEEXEC if (!X86)
++	select PAX_EMUPLT if (ALPHA || PARISC || PPC32 || SPARC32 || SPARC64)
++	select PAX_DLRESOLVE if (SPARC32 || SPARC64)
++	select PAX_SYSCALL if (PPC32)
++	select PAX_EMUTRAMP if (PARISC)
++	select PAX_EMUSIGRT if (PARISC)
++	select PAX_NOVSYSCALL if (X86 && !X86_64)
++	select PAX_ETEXECRELOCS if (ALPHA || IA64 || PARISC)
++	help
++	  If you say Y here, many of the features of grsecurity will be
++	  enabled, which will protect you against many kinds of attacks
++	  against your system.  The heightened security comes at a cost
++	  of an increased chance of incompatibilities with rare software
++	  on your machine.  Since this security level enables PaX, you should
++	  view <http://pax.grsecurity.net> and read about the PaX
++	  project.  While you are there, download chpax and run it on
++	  binaries that cause problems with PaX.  Also remember that
++	  since the /proc restrictions are enabled, you must run your
++	  identd as gid 1001.  This security level enables the following 
++	  features in addition to those listed in the low and medium 
++	  security levels:
++
++	  - Additional /proc restrictions
++	  - Chmod restrictions in chroot
++	  - No signals, ptrace, or viewing of processes outside of chroot
++	  - Capability restrictions in chroot
++	  - Deny fchdir out of chroot
++	  - Priority restrictions in chroot
++	  - Segmentation-based implementation of PaX
++	  - Mprotect restrictions
++	  - Removal of addresses from /proc/<pid>/[smaps|maps|stat]
++	  - Kernel stack randomization
++	  - Mount/unmount/remount logging
++	  - Kernel symbol hiding
++	  - Destroy unused shared memory	
++	  - Prevention of memory exhaustion-based exploits
++config GRKERNSEC_CUSTOM
++	bool "Custom"
++	help
++	  If you say Y here, you will be able to configure every grsecurity
++	  option, which allows you to enable many more features that aren't
++	  covered in the basic security levels.  These additional features
++	  include TPE, socket restrictions, and the sysctl system for
++	  grsecurity.  It is advised that you read through the help for
++	  each option to determine its usefulness in your situation.
++
++endchoice
++
++menu "Address Space Protection"
++depends on GRKERNSEC
++
++config GRKERNSEC_KMEM
++	bool "Deny writing to /dev/kmem, /dev/mem, and /dev/port"
++	help
++	  If you say Y here, /dev/kmem and /dev/mem won't be allowed to
++	  be written to via mmap or otherwise to modify the running kernel.
++	  /dev/port will also not be allowed to be opened. If you have module
++	  support disabled, enabling this will close up four ways that are
++	  currently used  to insert malicious code into the running kernel.
++	  Even with all these features enabled, we still highly recommend that
++	  you use the RBAC system, as it is still possible for an attacker to
++	  modify the running kernel through privileged I/O granted by ioperm/iopl.
++	  If you are not using XFree86, you may be able to stop this additional
++	  case by enabling the 'Disable privileged I/O' option. Though nothing
++	  legitimately writes to /dev/kmem, XFree86 does need to write to /dev/mem,
++	  but only to video memory, which is the only writing we allow in this
++	  case.  If /dev/kmem or /dev/mem are mmaped without PROT_WRITE, they will
++	  not be allowed to mprotect it with PROT_WRITE later.
++	  It is highly recommended that you say Y here if you meet all the
++	  conditions above.
++
++config GRKERNSEC_IO
++	bool "Disable privileged I/O"
++	depends on X86
++	select RTC
++	help
++	  If you say Y here, all ioperm and iopl calls will return an error.
++	  Ioperm and iopl can be used to modify the running kernel.
++	  Unfortunately, some programs need this access to operate properly,
++	  the most notable of which are XFree86 and hwclock.  hwclock can be
++	  remedied by having RTC support in the kernel, so CONFIG_RTC is
++	  enabled if this option is enabled, to ensure that hwclock operates
++	  correctly.  XFree86 still will not operate correctly with this option
++	  enabled, so DO NOT CHOOSE Y IF YOU USE XFree86.  If you use XFree86
++	  and you still want to protect your kernel against modification,
++	  use the RBAC system.
++
++config GRKERNSEC_PROC_MEMMAP
++	bool "Remove addresses from /proc/<pid>/[smaps|maps|stat]"
++	depends on PAX_NOEXEC || PAX_ASLR
++	help
++	  If you say Y here, the /proc/<pid>/maps and /proc/<pid>/stat files will
++	  give no information about the addresses of its mappings if
++	  PaX features that rely on random addresses are enabled on the task.
++	  If you use PaX it is greatly recommended that you say Y here as it
++	  closes up a hole that makes the full ASLR useless for suid
++	  binaries.
++
++config GRKERNSEC_BRUTE
++	bool "Deter exploit bruteforcing"
++	help
++	  If you say Y here, attempts to bruteforce exploits against forking
++	  daemons such as apache or sshd will be deterred.  When a child of a
++	  forking daemon is killed by PaX or crashes due to an illegal
++	  instruction, the parent process will be delayed 30 seconds upon every
++	  subsequent fork until the administrator is able to assess the
++	  situation and restart the daemon.  It is recommended that you also
++	  enable signal logging in the auditing section so that logs are
++	  generated when a process performs an illegal instruction.
++
++config GRKERNSEC_MODSTOP
++	bool "Runtime module disabling"
++	depends on MODULES
++	help
++	  If you say Y here, you will be able to disable the ability to (un)load
++	  modules at runtime.  This feature is useful if you need the ability
++	  to load kernel modules at boot time, but do not want to allow an
++	  attacker to load a rootkit kernel module into the system, or to remove
++	  a loaded kernel module important to system functioning.  You should
++	  enable the /dev/mem protection feature as well, since rootkits can be
++	  inserted into the kernel via other methods than kernel modules.  Since
++	  an untrusted module could still be loaded by modifying init scripts and
++	  rebooting the system, it is also recommended that you enable the RBAC
++	  system.  If you enable this option, a sysctl option with name
++	  "disable_modules" will be created.  Setting this option to "1" disables
++	  module loading.  After this option is set, no further writes to it are
++	  allowed until the system is rebooted.
++
++config GRKERNSEC_HIDESYM
++	bool "Hide kernel symbols"
++	help
++	  If you say Y here, getting information on loaded modules, and
++	  displaying all kernel symbols through a syscall will be restricted
++	  to users with CAP_SYS_MODULE.  This option is only effective
++	  provided the following conditions are met:
++	  1) The kernel using grsecurity is not precompiled by some distribution
++	  2) You are using the RBAC system and hiding other files such as your
++	     kernel image and System.map
++	  3) You have the additional /proc restrictions enabled, which removes
++	     /proc/kcore
++	  If the above conditions are met, this option will aid to provide a
++	  useful protection against local and remote kernel exploitation of
++	  overflows and arbitrary read/write vulnerabilities.
++
++endmenu
++menu "Role Based Access Control Options"
++depends on GRKERNSEC
++
++config GRKERNSEC_ACL_HIDEKERN
++	bool "Hide kernel processes"
++	help
++	  If you say Y here, all kernel threads will be hidden to all
++	  processes but those whose subject has the "view hidden processes"
++	  flag.
++
++config GRKERNSEC_ACL_MAXTRIES
++	int "Maximum tries before password lockout"
++	default 3
++	help
++	  This option enforces the maximum number of times a user can attempt
++	  to authorize themselves with the grsecurity RBAC system before being
++	  denied the ability to attempt authorization again for a specified time.
++	  The lower the number, the harder it will be to brute-force a password.
++
++config GRKERNSEC_ACL_TIMEOUT
++	int "Time to wait after max password tries, in seconds"
++	default 30
++	help
++	  This option specifies the time the user must wait after attempting to
++	  authorize to the RBAC system with the maximum number of invalid
++	  passwords.  The higher the number, the harder it will be to brute-force
++	  a password.
++
++endmenu
++menu "Filesystem Protections"
++depends on GRKERNSEC
++
++config GRKERNSEC_PROC
++	bool "Proc restrictions"
++	help
++	  If you say Y here, the permissions of the /proc filesystem
++	  will be altered to enhance system security and privacy.  You MUST
++  	  choose either a user only restriction or a user and group restriction.
++	  Depending upon the option you choose, you can either restrict users to
++	  see only the processes they themselves run, or choose a group that can
++	  view all processes and files normally restricted to root if you choose
++	  the "restrict to user only" option.  NOTE: If you're running identd as
++	  a non-root user, you will have to run it as the group you specify here.
++
++config GRKERNSEC_PROC_USER
++	bool "Restrict /proc to user only"
++	depends on GRKERNSEC_PROC
++	help
++	  If you say Y here, non-root users will only be able to view their own
++	  processes, and restricts them from viewing network-related information,
++	  and viewing kernel symbol and module information.
++
++config GRKERNSEC_PROC_USERGROUP
++	bool "Allow special group"
++	depends on GRKERNSEC_PROC && !GRKERNSEC_PROC_USER
++	help
++	  If you say Y here, you will be able to select a group that will be
++	  able to view all processes, network-related information, and
++	  kernel and symbol information.  This option is useful if you want
++	  to run identd as a non-root user.
++
++config GRKERNSEC_PROC_GID
++	int "GID for special group"
++	depends on GRKERNSEC_PROC_USERGROUP
++	default 1001
++
++config GRKERNSEC_PROC_ADD
++	bool "Additional restrictions"
++	depends on GRKERNSEC_PROC_USER || GRKERNSEC_PROC_USERGROUP
++	help
++	  If you say Y here, additional restrictions will be placed on
++	  /proc that keep normal users from viewing device information and 
++	  slabinfo information that could be useful for exploits.
++
++config GRKERNSEC_LINK
++	bool "Linking restrictions"
++	help
++	  If you say Y here, /tmp race exploits will be prevented, since users
++	  will no longer be able to follow symlinks owned by other users in
++	  world-writable +t directories (i.e. /tmp), unless the owner of the
++	  symlink is the owner of the directory. users will also not be
++	  able to hardlink to files they do not own.  If the sysctl option is
++	  enabled, a sysctl option with name "linking_restrictions" is created.
++
++config GRKERNSEC_FIFO
++	bool "FIFO restrictions"
++	help
++	  If you say Y here, users will not be able to write to FIFOs they don't
++	  own in world-writable +t directories (i.e. /tmp), unless the owner of
++	  the FIFO is the same owner of the directory it's held in.  If the sysctl
++	  option is enabled, a sysctl option with name "fifo_restrictions" is
++	  created.
++
++config GRKERNSEC_CHROOT
++	bool "Chroot jail restrictions"
++	help
++	  If you say Y here, you will be able to choose several options that will
++	  make breaking out of a chrooted jail much more difficult.  If you
++	  encounter no software incompatibilities with the following options, it
++	  is recommended that you enable each one.
++
++config GRKERNSEC_CHROOT_MOUNT
++	bool "Deny mounts"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, processes inside a chroot will not be able to
++	  mount or remount filesystems.  If the sysctl option is enabled, a
++	  sysctl option with name "chroot_deny_mount" is created.
++
++config GRKERNSEC_CHROOT_DOUBLE
++	bool "Deny double-chroots"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, processes inside a chroot will not be able to chroot
++	  again outside the chroot.  This is a widely used method of breaking
++	  out of a chroot jail and should not be allowed.  If the sysctl 
++	  option is enabled, a sysctl option with name 
++	  "chroot_deny_chroot" is created.
++
++config GRKERNSEC_CHROOT_PIVOT
++	bool "Deny pivot_root in chroot"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, processes inside a chroot will not be able to use
++	  a function called pivot_root() that was introduced in Linux 2.3.41.  It
++	  works similar to chroot in that it changes the root filesystem.  This
++	  function could be misused in a chrooted process to attempt to break out
++	  of the chroot, and therefore should not be allowed.  If the sysctl
++	  option is enabled, a sysctl option with name "chroot_deny_pivot" is
++	  created.
++
++config GRKERNSEC_CHROOT_CHDIR
++	bool "Enforce chdir(\"/\") on all chroots"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, the current working directory of all newly-chrooted
++	  applications will be set to the the root directory of the chroot.
++	  The man page on chroot(2) states:
++	  Note that this call does not change  the  current  working
++	  directory,  so  that `.' can be outside the tree rooted at
++	  `/'.  In particular, the  super-user  can  escape  from  a
++	  `chroot jail' by doing `mkdir foo; chroot foo; cd ..'.
++
++	  It is recommended that you say Y here, since it's not known to break
++	  any software.  If the sysctl option is enabled, a sysctl option with
++	  name "chroot_enforce_chdir" is created.
++
++config GRKERNSEC_CHROOT_CHMOD
++	bool "Deny (f)chmod +s"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, processes inside a chroot will not be able to chmod
++	  or fchmod files to make them have suid or sgid bits.  This protects
++	  against another published method of breaking a chroot.  If the sysctl
++	  option is enabled, a sysctl option with name "chroot_deny_chmod" is
++	  created.
++
++config GRKERNSEC_CHROOT_FCHDIR
++	bool "Deny fchdir out of chroot"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, a well-known method of breaking chroots by fchdir'ing
++	  to a file descriptor of the chrooting process that points to a directory
++	  outside the filesystem will be stopped.  If the sysctl option
++	  is enabled, a sysctl option with name "chroot_deny_fchdir" is created.
++
++config GRKERNSEC_CHROOT_MKNOD
++	bool "Deny mknod"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, processes inside a chroot will not be allowed to
++	  mknod.  The problem with using mknod inside a chroot is that it
++	  would allow an attacker to create a device entry that is the same
++	  as one on the physical root of your system, which could range from
++	  anything from the console device to a device for your harddrive (which
++	  they could then use to wipe the drive or steal data).  It is recommended
++	  that you say Y here, unless you run into software incompatibilities.
++	  If the sysctl option is enabled, a sysctl option with name
++	  "chroot_deny_mknod" is created.
++
++config GRKERNSEC_CHROOT_SHMAT
++	bool "Deny shmat() out of chroot"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, processes inside a chroot will not be able to attach
++	  to shared memory segments that were created outside of the chroot jail.
++	  It is recommended that you say Y here.  If the sysctl option is enabled,
++	  a sysctl option with name "chroot_deny_shmat" is created.
++
++config GRKERNSEC_CHROOT_UNIX
++	bool "Deny access to abstract AF_UNIX sockets out of chroot"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, processes inside a chroot will not be able to
++	  connect to abstract (meaning not belonging to a filesystem) Unix
++	  domain sockets that were bound outside of a chroot.  It is recommended
++	  that you say Y here.  If the sysctl option is enabled, a sysctl option
++	  with name "chroot_deny_unix" is created.
++
++config GRKERNSEC_CHROOT_FINDTASK
++	bool "Protect outside processes"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, processes inside a chroot will not be able to
++	  kill, send signals with fcntl, ptrace, capget, setpgid, getpgid,
++	  getsid, or view any process outside of the chroot.  If the sysctl
++	  option is enabled, a sysctl option with name "chroot_findtask" is
++	  created.
++
++config GRKERNSEC_CHROOT_NICE
++	bool "Restrict priority changes"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, processes inside a chroot will not be able to raise
++	  the priority of processes in the chroot, or alter the priority of
++	  processes outside the chroot.  This provides more security than simply
++	  removing CAP_SYS_NICE from the process' capability set.  If the
++	  sysctl option is enabled, a sysctl option with name "chroot_restrict_nice"
++	  is created.
++
++config GRKERNSEC_CHROOT_SYSCTL
++	bool "Deny sysctl writes"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, an attacker in a chroot will not be able to
++	  write to sysctl entries, either by sysctl(2) or through a /proc
++	  interface.  It is strongly recommended that you say Y here. If the
++	  sysctl option is enabled, a sysctl option with name
++	  "chroot_deny_sysctl" is created.
++
++config GRKERNSEC_CHROOT_CAPS
++	bool "Capability restrictions"
++	depends on GRKERNSEC_CHROOT
++	help
++	  If you say Y here, the capabilities on all root processes within a
++	  chroot jail will be lowered to stop module insertion, raw i/o,
++	  system and net admin tasks, rebooting the system, modifying immutable
++	  files, modifying IPC owned by another, and changing the system time.
++	  This is left an option because it can break some apps.  Disable this
++	  if your chrooted apps are having problems performing those kinds of
++	  tasks.  If the sysctl option is enabled, a sysctl option with
++	  name "chroot_caps" is created.
++
++endmenu
++menu "Kernel Auditing"
++depends on GRKERNSEC
++
++config GRKERNSEC_AUDIT_GROUP
++	bool "Single group for auditing"
++	help
++	  If you say Y here, the exec, chdir, (un)mount, and ipc logging features
++	  will only operate on a group you specify.  This option is recommended
++	  if you only want to watch certain users instead of having a large
++	  amount of logs from the entire system.  If the sysctl option is enabled,
++	  a sysctl option with name "audit_group" is created.
++
++config GRKERNSEC_AUDIT_GID
++	int "GID for auditing"
++	depends on GRKERNSEC_AUDIT_GROUP
++	default 1007
++
++config GRKERNSEC_EXECLOG
++	bool "Exec logging"
++	help
++	  If you say Y here, all execve() calls will be logged (since the
++	  other exec*() calls are frontends to execve(), all execution
++	  will be logged).  Useful for shell-servers that like to keep track
++	  of their users.  If the sysctl option is enabled, a sysctl option with
++	  name "exec_logging" is created.
++	  WARNING: This option when enabled will produce a LOT of logs, especially
++	  on an active system.
++
++config GRKERNSEC_RESLOG
++	bool "Resource logging"
++	help
++	  If you say Y here, all attempts to overstep resource limits will
++	  be logged with the resource name, the requested size, and the current
++	  limit.  It is highly recommended that you say Y here.  If the sysctl
++	  option is enabled, a sysctl option with name "resource_logging" is
++	  created.  If the RBAC system is enabled, the sysctl value is ignored.
++
++config GRKERNSEC_CHROOT_EXECLOG
++	bool "Log execs within chroot"
++	help
++	  If you say Y here, all executions inside a chroot jail will be logged
++	  to syslog.  This can cause a large amount of logs if certain
++	  applications (eg. djb's daemontools) are installed on the system, and
++	  is therefore left as an option.  If the sysctl option is enabled, a
++	  sysctl option with name "chroot_execlog" is created.
++
++config GRKERNSEC_AUDIT_CHDIR
++	bool "Chdir logging"
++	help
++	  If you say Y here, all chdir() calls will be logged.  If the sysctl
++ 	  option is enabled, a sysctl option with name "audit_chdir" is created.
++
++config GRKERNSEC_AUDIT_MOUNT
++	bool "(Un)Mount logging"
++	help
++	  If you say Y here, all mounts and unmounts will be logged.  If the
++	  sysctl option is enabled, a sysctl option with name "audit_mount" is
++	  created.
++
++config GRKERNSEC_AUDIT_IPC
++	bool "IPC logging"
++	help
++	  If you say Y here, creation and removal of message queues, semaphores,
++	  and shared memory will be logged.  If the sysctl option is enabled, a
++	  sysctl option with name "audit_ipc" is created.
++
++config GRKERNSEC_SIGNAL
++	bool "Signal logging"
++	help
++	  If you say Y here, certain important signals will be logged, such as
++	  SIGSEGV, which will as a result inform you of when a error in a program
++	  occurred, which in some cases could mean a possible exploit attempt.
++	  If the sysctl option is enabled, a sysctl option with name
++	  "signal_logging" is created.
++
++config GRKERNSEC_FORKFAIL
++	bool "Fork failure logging"
++	help
++	  If you say Y here, all failed fork() attempts will be logged.
++	  This could suggest a fork bomb, or someone attempting to overstep
++	  their process limit.  If the sysctl option is enabled, a sysctl option
++	  with name "forkfail_logging" is created.
++
++config GRKERNSEC_TIME
++	bool "Time change logging"
++	help
++	  If you say Y here, any changes of the system clock will be logged.
++	  If the sysctl option is enabled, a sysctl option with name
++	  "timechange_logging" is created.
++
++config GRKERNSEC_PROC_IPADDR
++	bool "/proc/<pid>/ipaddr support"
++	help
++	  If you say Y here, a new entry will be added to each /proc/<pid>
++	  directory that contains the IP address of the person using the task.
++	  The IP is carried across local TCP and AF_UNIX stream sockets.
++	  This information can be useful for IDS/IPSes to perform remote response
++	  to a local attack.  The entry is readable by only the owner of the
++	  process (and root if he has CAP_DAC_OVERRIDE, which can be removed via
++	  the RBAC system), and thus does not create privacy concerns.
++
++config GRKERNSEC_AUDIT_TEXTREL
++	bool 'ELF text relocations logging (READ HELP)'
++	depends on PAX_MPROTECT
++	help
++	  If you say Y here, text relocations will be logged with the filename
++	  of the offending library or binary.  The purpose of the feature is
++	  to help Linux distribution developers get rid of libraries and
++	  binaries that need text relocations which hinder the future progress
++	  of PaX.  Only Linux distribution developers should say Y here, and
++	  never on a production machine, as this option creates an information
++	  leak that could aid an attacker in defeating the randomization of
++	  a single memory region.  If the sysctl option is enabled, a sysctl
++	  option with name "audit_textrel" is created.
++
++endmenu
++
++menu "Executable Protections"
++depends on GRKERNSEC
++
++config GRKERNSEC_EXECVE
++	bool "Enforce RLIMIT_NPROC on execs"
++	help
++	  If you say Y here, users with a resource limit on processes will
++	  have the value checked during execve() calls.  The current system
++	  only checks the system limit during fork() calls.  If the sysctl option
++	  is enabled, a sysctl option with name "execve_limiting" is created.
++
++config GRKERNSEC_SHM
++	bool "Destroy unused shared memory"
++	depends on SYSVIPC
++	help
++	  If you say Y here, shared memory will be destroyed when no one is
++	  attached to it.  Otherwise, resources involved with the shared
++	  memory can be used up and not be associated with any process (as the
++	  shared memory still exists, and the creating process has exited).  If
++	  the sysctl option is enabled, a sysctl option with name
++	  "destroy_unused_shm" is created.
++
++config GRKERNSEC_DMESG
++	bool "Dmesg(8) restriction"
++	help
++	  If you say Y here, non-root users will not be able to use dmesg(8)
++	  to view up to the last 4kb of messages in the kernel's log buffer.
++	  If the sysctl option is enabled, a sysctl option with name "dmesg" is
++	  created.
++
++config GRKERNSEC_RANDPID
++	bool "Randomized PIDs"
++	help
++	  If you say Y here, all PIDs created on the system will be
++	  pseudo-randomly generated.  This is extremely effective along
++	  with the /proc restrictions to disallow an attacker from guessing
++	  pids of daemons, etc.  PIDs are also used in some cases as part
++	  of a naming system for temporary files, so this option would keep
++	  those filenames from being predicted as well.  We also use code
++	  to make sure that PID numbers aren't reused too soon.  If the sysctl
++	  option is enabled, a sysctl option with name "rand_pids" is created.
++
++config GRKERNSEC_TPE
++	bool "Trusted Path Execution (TPE)"
++	help
++	  If you say Y here, you will be able to choose a gid to add to the
++	  supplementary groups of users you want to mark as "untrusted."
++	  These users will not be able to execute any files that are not in
++	  root-owned directories writable only by root.  If the sysctl option
++	  is enabled, a sysctl option with name "tpe" is created.
++
++config GRKERNSEC_TPE_ALL
++	bool "Partially restrict non-root users"
++	depends on GRKERNSEC_TPE
++	help
++	  If you say Y here, All non-root users other than the ones in the
++	  group specified in the main TPE option will only be allowed to
++	  execute files in directories they own that are not group or
++	  world-writable, or in directories owned by root and writable only by
++	  root.  If the sysctl option is enabled, a sysctl option with name
++	  "tpe_restrict_all" is created.
++
++config GRKERNSEC_TPE_INVERT
++	bool "Invert GID option"
++	depends on GRKERNSEC_TPE
++	help
++	  If you say Y here, the group you specify in the TPE configuration will
++	  decide what group TPE restrictions will be *disabled* for.  This
++	  option is useful if you want TPE restrictions to be applied to most
++	  users on the system.
++
++config GRKERNSEC_TPE_GID
++	int "GID for untrusted users"
++	depends on GRKERNSEC_TPE && !GRKERNSEC_TPE_INVERT
++	default 1005
++	help
++	  If you have selected the "Invert GID option" above, setting this
++	  GID determines what group TPE restrictions will be *disabled* for.
++	  If you have not selected the "Invert GID option" above, setting this
++	  GID determines what group TPE restrictions will be *enabled* for.
++	  If the sysctl option is enabled, a sysctl option with name "tpe_gid"
++	  is created.
++
++config GRKERNSEC_TPE_GID
++	int "GID for trusted users"
++	depends on GRKERNSEC_TPE && GRKERNSEC_TPE_INVERT
++	default 1005
++	help
++	  If you have selected the "Invert GID option" above, setting this
++	  GID determines what group TPE restrictions will be *disabled* for.
++	  If you have not selected the "Invert GID option" above, setting this
++	  GID determines what group TPE restrictions will be *enabled* for.
++	  If the sysctl option is enabled, a sysctl option with name "tpe_gid"
++	  is created.
++
++endmenu
++menu "Network Protections"
++depends on GRKERNSEC
++
++config GRKERNSEC_RANDNET
++	bool "Larger entropy pools"
++	help
++	  If you say Y here, the entropy pools used for many features of Linux
++	  and grsecurity will be doubled in size.  Since several grsecurity
++	  features use additional randomness, it is recommended that you say Y
++	  here.  Saying Y here has a similar effect as modifying
++	  /proc/sys/kernel/random/poolsize.
++
++config GRKERNSEC_SOCKET
++	bool "Socket restrictions"
++	help
++	  If you say Y here, you will be able to choose from several options.
++	  If you assign a GID on your system and add it to the supplementary
++	  groups of users you want to restrict socket access to, this patch
++	  will perform up to three things, based on the option(s) you choose.
++
++config GRKERNSEC_SOCKET_ALL
++	bool "Deny any sockets to group"
++	depends on GRKERNSEC_SOCKET
++	help
++	  If you say Y here, you will be able to choose a GID of whose users will
++	  be unable to connect to other hosts from your machine or run server
++	  applications from your machine.  If the sysctl option is enabled, a
++	  sysctl option with name "socket_all" is created.
++
++config GRKERNSEC_SOCKET_ALL_GID
++	int "GID to deny all sockets for"
++	depends on GRKERNSEC_SOCKET_ALL
++	default 1004
++	help
++	  Here you can choose the GID to disable socket access for. Remember to
++	  add the users you want socket access disabled for to the GID
++	  specified here.  If the sysctl option is enabled, a sysctl option
++	  with name "socket_all_gid" is created.
++
++config GRKERNSEC_SOCKET_CLIENT
++	bool "Deny client sockets to group"
++	depends on GRKERNSEC_SOCKET
++	help
++	  If you say Y here, you will be able to choose a GID of whose users will
++	  be unable to connect to other hosts from your machine, but will be
++	  able to run servers.  If this option is enabled, all users in the group
++	  you specify will have to use passive mode when initiating ftp transfers
++	  from the shell on your machine.  If the sysctl option is enabled, a
++	  sysctl option with name "socket_client" is created.
++
++config GRKERNSEC_SOCKET_CLIENT_GID
++	int "GID to deny client sockets for"
++	depends on GRKERNSEC_SOCKET_CLIENT
++	default 1003
++	help
++	  Here you can choose the GID to disable client socket access for.
++	  Remember to add the users you want client socket access disabled for to
++	  the GID specified here.  If the sysctl option is enabled, a sysctl
++	  option with name "socket_client_gid" is created.
++
++config GRKERNSEC_SOCKET_SERVER
++	bool "Deny server sockets to group"
++	depends on GRKERNSEC_SOCKET
++	help
++	  If you say Y here, you will be able to choose a GID of whose users will
++	  be unable to run server applications from your machine.  If the sysctl
++	  option is enabled, a sysctl option with name "socket_server" is created.
++
++config GRKERNSEC_SOCKET_SERVER_GID
++	int "GID to deny server sockets for"
++	depends on GRKERNSEC_SOCKET_SERVER
++	default 1002
++	help
++	  Here you can choose the GID to disable server socket access for.
++	  Remember to add the users you want server socket access disabled for to
++	  the GID specified here.  If the sysctl option is enabled, a sysctl
++	  option with name "socket_server_gid" is created.
@@ -18883,10 +18650,3 @@
-+int
-+chkpw(struct gr_arg *entry, unsigned char *salt, unsigned char *sum)
-+{
-+	char *p;
-+	struct crypto_tfm *tfm;
-+	unsigned char temp_sum[GR_SHA_LEN];
-+	struct scatterlist sg[2];
-+	volatile int retval = 0;
-+	volatile int dummy = 0;
-+	unsigned int i;
++endmenu
++menu "Sysctl support"
++depends on GRKERNSEC && SYSCTL
@@ -18894,5 +18654,13 @@
-+	tfm = crypto_alloc_tfm("sha256", 0);
-+	if (tfm == NULL) {
-+		/* should never happen, since sha256 should be built in */
-+		return 1;
-+	}
++config GRKERNSEC_SYSCTL
++	bool "Sysctl support"
++	help
++	  If you say Y here, you will be able to change the options that
++	  grsecurity runs with at bootup, without having to recompile your
++	  kernel.  You can echo values to files in /proc/sys/kernel/grsecurity
++	  to enable (1) or disable (0) various features.  All the sysctl entries
++	  are mutable until the "grsec_lock" entry is set to a non-zero value.
++	  All features enabled in the kernel configuration are disabled at boot
++	  if you do not say Y to the "Turn on features by default" option.
++	  All options should be set at startup, and the grsec_lock entry should
++	  be set to a non-zero value after all the options are set.
++	  *THIS IS EXTREMELY IMPORTANT*
@@ -18900 +18668,11 @@
-+	crypto_digest_init(tfm);
++config GRKERNSEC_SYSCTL_ON
++	bool "Turn on features by default"
++	depends on GRKERNSEC_SYSCTL
++	help
++	  If you say Y here, instead of having all features enabled in the
++	  kernel configuration disabled at boot time, the features will be
++	  enabled at boot time.  It is recommended you say Y here unless
++	  there is some reason you would want all sysctl-tunable features to
++	  be disabled by default.  As mentioned elsewhere, it is important
++	  to enable the grsec_lock entry once you have finished modifying
++	  the sysctl entries.
@@ -18902,6 +18680,3 @@
-+	p = salt;
-+	sg[0].page = virt_to_page(p);
-+	sg[0].offset = ((long) p & ~PAGE_MASK);
-+	sg[0].length = GR_SALT_LEN;
-+	
-+	crypto_digest_update(tfm, sg, 1);
++endmenu
++menu "Logging Options"
++depends on GRKERNSEC
@@ -18909,4 +18684,9 @@
-+	p = entry->pw;
-+	sg[0].page = virt_to_page(p);
-+	sg[0].offset = ((long) p & ~PAGE_MASK);
-+	sg[0].length = strlen(entry->pw);
++config GRKERNSEC_FLOODTIME
++	int "Seconds in between log messages (minimum)"
++	default 10
++	help
++	  This option allows you to enforce the number of seconds between
++	  grsecurity log messages.  The default should be suitable for most
++	  people, however, if you choose to change it, choose a value small enough
++	  to allow informative logs to be produced, but large enough to
++	  prevent flooding.
@@ -18914 +18694,9 @@
-+	crypto_digest_update(tfm, sg, 1);
++config GRKERNSEC_FLOODBURST
++	int "Number of messages in a burst (maximum)"
++	default 4
++	help
++	  This option allows you to choose the maximum number of messages allowed
++	  within the flood time interval you chose in a separate option.  The
++	  default should be suitable for most people, however if you find that
++	  many of your logs are being interpreted as flooding, you may want to
++	  raise this value.
@@ -18916 +18704 @@
-+	crypto_digest_final(tfm, temp_sum);
++endmenu
@@ -18918 +18706,11 @@
-+	memset(entry->pw, 0, GR_PW_LEN);
++endmenu
+diff -urNp linux-2.6.17.4/grsecurity/Makefile linux-2.6.17.4/grsecurity/Makefile
+--- linux-2.6.17.4/grsecurity/Makefile	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/grsecurity/Makefile	2006-07-01 15:39:05.000000000 -0400
+@@ -0,0 +1,20 @@
++# grsecurity's ACL system was originally written in 2001 by Michael Dalton
++# during 2001-2005 it has been completely redesigned by Brad Spengler
++# into an RBAC system
++#
++# All code in this directory and various hooks inserted throughout the kernel
++# are copyright Brad Spengler, and released under the GPL v2 or higher
@@ -18920,5 +18718,3 @@
-+	for (i = 0; i < GR_SHA_LEN; i++)
-+		if (sum[i] != temp_sum[i])
-+			retval = 1;
-+		else
-+			dummy = 1;	// waste a cycle
++obj-y = grsec_chdir.o grsec_chroot.o grsec_exec.o grsec_fifo.o grsec_fork.o \
++	grsec_mount.o grsec_rand.o grsec_sig.o grsec_sock.o grsec_sysctl.o \
++	grsec_time.o grsec_tpe.o grsec_ipc.o grsec_link.o grsec_textrel.o
@@ -18926 +18722,4 @@
-+	crypto_free_tfm(tfm);
++obj-$(CONFIG_GRKERNSEC) += grsec_init.o grsum.o gracl.o gracl_ip.o gracl_segv.o \
++	gracl_cap.o gracl_alloc.o gracl_shm.o grsec_mem.o gracl_fs.o \
++	gracl_learn.o grsec_log.o
++obj-$(CONFIG_GRKERNSEC_RESLOG) += gracl_res.o
@@ -18928,6 +18727,7 @@
-+	return retval;
-+}
-diff --git a/include/asm-alpha/a.out.h b/include/asm-alpha/a.out.h
-index d97daf42753d72092744207dbb69ecd61542f8fd..5c5113530b68de7458df1ba31ebefa73ccc39136 100644
---- a/include/asm-alpha/a.out.h
-+++ b/include/asm-alpha/a.out.h
++ifndef CONFIG_GRKERNSEC
++obj-y += grsec_disabled.o
++endif
++
+diff -urNp linux-2.6.17.4/include/asm-alpha/a.out.h linux-2.6.17.4/include/asm-alpha/a.out.h
+--- linux-2.6.17.4/include/asm-alpha/a.out.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-alpha/a.out.h	2006-07-01 14:35:29.000000000 -0400
@@ -18943,5 +18743,4 @@
-diff --git a/include/asm-alpha/elf.h b/include/asm-alpha/elf.h
-index 6c2d78fba264ac21ce616fcf9622bf1ea9b89fc7..a0385f89679a4f4279cba2154223f7e2015fe9fb 100644
---- a/include/asm-alpha/elf.h
-+++ b/include/asm-alpha/elf.h
-@@ -91,6 +91,17 @@ typedef elf_fpreg_t elf_fpregset_t[ELF_NFPREG];
+diff -urNp linux-2.6.17.4/include/asm-alpha/elf.h linux-2.6.17.4/include/asm-alpha/elf.h
+--- linux-2.6.17.4/include/asm-alpha/elf.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-alpha/elf.h	2006-07-01 14:35:29.000000000 -0400
+@@ -91,6 +91,17 @@ typedef elf_fpreg_t elf_fpregset_t[ELF_N
@@ -18965,4 +18764,3 @@
-diff --git a/include/asm-alpha/kmap_types.h b/include/asm-alpha/kmap_types.h
-index 3d10cd3ea75fe1d9f5bc7640a5f5de5355fde506..c5dad305f897e0fecf473165f9fa7a451e0f67f8 100644
---- a/include/asm-alpha/kmap_types.h
-+++ b/include/asm-alpha/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-alpha/kmap_types.h linux-2.6.17.4/include/asm-alpha/kmap_types.h
+--- linux-2.6.17.4/include/asm-alpha/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-alpha/kmap_types.h	2006-07-02 00:07:40.000000000 -0400
@@ -18979,4 +18777,3 @@
-diff --git a/include/asm-alpha/page.h b/include/asm-alpha/page.h
-index 61bcf70b5eac66852a19e47fe61fb07c07b1a953..9fb7c506ebc1e5fb889aa9199e4af7a82d17bc01 100644
---- a/include/asm-alpha/page.h
-+++ b/include/asm-alpha/page.h
+diff -urNp linux-2.6.17.4/include/asm-alpha/page.h linux-2.6.17.4/include/asm-alpha/page.h
+--- linux-2.6.17.4/include/asm-alpha/page.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-alpha/page.h	2006-07-01 14:35:29.000000000 -0400
@@ -19000,4 +18797,3 @@
-diff --git a/include/asm-alpha/pgtable.h b/include/asm-alpha/pgtable.h
-index a985cd29b6db2f5dc013d7313cf92b4f40c7b7e2..a965d79d6c893defcf21299769ebdaaeb7ab5e84 100644
---- a/include/asm-alpha/pgtable.h
-+++ b/include/asm-alpha/pgtable.h
+diff -urNp linux-2.6.17.4/include/asm-alpha/pgtable.h linux-2.6.17.4/include/asm-alpha/pgtable.h
+--- linux-2.6.17.4/include/asm-alpha/pgtable.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-alpha/pgtable.h	2006-07-01 14:35:29.000000000 -0400
@@ -19022,4 +18818,3 @@
-diff --git a/include/asm-arm/a.out.h b/include/asm-arm/a.out.h
-index 3e5fe64c439492dc274871595370e7e51f4fa55e..a23d5f2558cba41b758061ec9defd0aca873ac91 100644
---- a/include/asm-arm/a.out.h
-+++ b/include/asm-arm/a.out.h
+diff -urNp linux-2.6.17.4/include/asm-arm/a.out.h linux-2.6.17.4/include/asm-arm/a.out.h
+--- linux-2.6.17.4/include/asm-arm/a.out.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-arm/a.out.h	2006-07-01 14:35:29.000000000 -0400
@@ -19035,4 +18830,3 @@
-diff --git a/include/asm-arm/elf.h b/include/asm-arm/elf.h
-index 2d44b42d1847871a8b6fcc22238eeaa2507ee02a..97885f64fb53bffb2d34ab2bb974f4ecdcc4fe27 100644
---- a/include/asm-arm/elf.h
-+++ b/include/asm-arm/elf.h
+diff -urNp linux-2.6.17.4/include/asm-arm/elf.h linux-2.6.17.4/include/asm-arm/elf.h
+--- linux-2.6.17.4/include/asm-arm/elf.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-arm/elf.h	2006-07-01 14:35:29.000000000 -0400
@@ -19057,4 +18851,3 @@
-diff --git a/include/asm-arm/kmap_types.h b/include/asm-arm/kmap_types.h
-index 45def13ee17a5fc4150a92173f57f556679faee5..3d0f36f7581b3a40f26555b0861e687af99dd189 100644
---- a/include/asm-arm/kmap_types.h
-+++ b/include/asm-arm/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-arm/kmap_types.h linux-2.6.17.4/include/asm-arm/kmap_types.h
+--- linux-2.6.17.4/include/asm-arm/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-arm/kmap_types.h	2006-07-02 00:07:40.000000000 -0400
@@ -19069,4 +18862,3 @@
-diff --git a/include/asm-arm26/kmap_types.h b/include/asm-arm26/kmap_types.h
-index d5da712b723c033df62ecc777d31472676b3a0fd..196bcf9ecf5d21fc40847ae93bfb348a2c21de6e 100644
---- a/include/asm-arm26/kmap_types.h
-+++ b/include/asm-arm26/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-arm26/kmap_types.h linux-2.6.17.4/include/asm-arm26/kmap_types.h
+--- linux-2.6.17.4/include/asm-arm26/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-arm26/kmap_types.h	2006-07-02 00:07:40.000000000 -0400
@@ -19083,4 +18875,3 @@
-diff --git a/include/asm-cris/kmap_types.h b/include/asm-cris/kmap_types.h
-index 492988cb9077978be3a9589173e37381aaaed87a..12b486c65088791314f6ccdf9eafa022ad79bec1 100644
---- a/include/asm-cris/kmap_types.h
-+++ b/include/asm-cris/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-cris/kmap_types.h linux-2.6.17.4/include/asm-cris/kmap_types.h
+--- linux-2.6.17.4/include/asm-cris/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-cris/kmap_types.h	2006-07-02 00:07:40.000000000 -0400
@@ -19095,4 +18886,3 @@
-diff --git a/include/asm-frv/kmap_types.h b/include/asm-frv/kmap_types.h
-index f8e16b2a58047c35877fe8d8637133af25ec8023..c73ff7949f55c24142124471b26c0bceacbec1e3 100644
---- a/include/asm-frv/kmap_types.h
-+++ b/include/asm-frv/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-frv/kmap_types.h linux-2.6.17.4/include/asm-frv/kmap_types.h
+--- linux-2.6.17.4/include/asm-frv/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-frv/kmap_types.h	2006-07-02 00:07:40.000000000 -0400
@@ -19107,4 +18897,3 @@
-diff --git a/include/asm-h8300/kmap_types.h b/include/asm-h8300/kmap_types.h
-index 1ec8a3427120876f6ef7d998b72798a37c0cc53a..ffdcd189a2c57f6872a389b93d68c9a331fa93f7 100644
---- a/include/asm-h8300/kmap_types.h
-+++ b/include/asm-h8300/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-h8300/kmap_types.h linux-2.6.17.4/include/asm-h8300/kmap_types.h
+--- linux-2.6.17.4/include/asm-h8300/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-h8300/kmap_types.h	2006-07-02 00:07:40.000000000 -0400
@@ -19119,22 +18908,4 @@
-diff --git a/include/asm-i386/a.out.h b/include/asm-i386/a.out.h
-index ab17bb8e546518e341213ce60fe05d6de5665a41..10a9e95258656112874df4527091ec98a53a8d09 100644
---- a/include/asm-i386/a.out.h
-+++ b/include/asm-i386/a.out.h
-@@ -19,7 +19,11 @@ struct exec
- 
- #ifdef __KERNEL__
- 
--#define STACK_TOP	TASK_SIZE
-+#ifdef CONFIG_PAX_SEGMEXEC
-+#define __STACK_TOP ((current->mm->pax_flags & MF_PAX_SEGMEXEC)?TASK_SIZE/2:TASK_SIZE)
-+#else
-+#define __STACK_TOP TASK_SIZE
-+#endif
- 
- #endif
- 
-diff --git a/include/asm-i386/alternative.h b/include/asm-i386/alternative.h
-index d79e9ee10fd7039f3669aa43b4aa55f7af538438..db74907513fc6039742c1d1112338a8896c97a67 100644
---- a/include/asm-i386/alternative.h
-+++ b/include/asm-i386/alternative.h
-@@ -47,7 +47,7 @@ extern void alternatives_smp_switch(int smp);
+diff -urNp linux-2.6.17.4/include/asm-i386/alternative.h linux-2.6.17.4/include/asm-i386/alternative.h
+--- linux-2.6.17.4/include/asm-i386/alternative.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/alternative.h	2006-07-01 14:35:29.000000000 -0400
+@@ -47,7 +47,7 @@ extern void alternatives_smp_switch(int 
@@ -19149 +18920 @@
-@@ -71,7 +71,7 @@ extern void alternatives_smp_switch(int smp);
+@@ -71,7 +71,7 @@ extern void alternatives_smp_switch(int 
@@ -19158 +18929 @@
-@@ -110,7 +110,7 @@ extern void alternatives_smp_switch(int smp);
+@@ -110,7 +110,7 @@ extern void alternatives_smp_switch(int 
@@ -19167,4 +18938,19 @@
-diff --git a/include/asm-i386/auxvec.h b/include/asm-i386/auxvec.h
-index 395e13016bfb4a7c1a93d847ff1aae506809a229..cdcbbfee4adae0dd529c35cee0cc4dac7e6dff7c 100644
---- a/include/asm-i386/auxvec.h
-+++ b/include/asm-i386/auxvec.h
+diff -urNp linux-2.6.17.4/include/asm-i386/a.out.h linux-2.6.17.4/include/asm-i386/a.out.h
+--- linux-2.6.17.4/include/asm-i386/a.out.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/a.out.h	2006-07-01 14:35:29.000000000 -0400
+@@ -19,7 +19,11 @@ struct exec
+ 
+ #ifdef __KERNEL__
+ 
+-#define STACK_TOP	TASK_SIZE
++#ifdef CONFIG_PAX_SEGMEXEC
++#define __STACK_TOP ((current->mm->pax_flags & MF_PAX_SEGMEXEC)?TASK_SIZE/2:TASK_SIZE)
++#else
++#define __STACK_TOP TASK_SIZE
++#endif
+ 
+ #endif
+ 
+diff -urNp linux-2.6.17.4/include/asm-i386/auxvec.h linux-2.6.17.4/include/asm-i386/auxvec.h
+--- linux-2.6.17.4/include/asm-i386/auxvec.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/auxvec.h	2006-07-01 14:35:29.000000000 -0400
@@ -19181,5 +18967,4 @@
-diff --git a/include/asm-i386/checksum.h b/include/asm-i386/checksum.h
-index 67d3630c4e8953c74773ce17aaf1bf2c197c1930..24b4ffacc4bdd1a00bb65c243a26ebcee486d739 100644
---- a/include/asm-i386/checksum.h
-+++ b/include/asm-i386/checksum.h
-@@ -30,6 +30,9 @@ asmlinkage unsigned int csum_partial(const unsigned char * buff, int len, unsign
+diff -urNp linux-2.6.17.4/include/asm-i386/checksum.h linux-2.6.17.4/include/asm-i386/checksum.h
+--- linux-2.6.17.4/include/asm-i386/checksum.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/checksum.h	2006-07-01 19:36:05.000000000 -0400
+@@ -30,6 +30,9 @@ asmlinkage unsigned int csum_partial(con
@@ -19195 +18980 @@
-@@ -49,7 +52,7 @@ unsigned int csum_partial_copy_from_user(const unsigned char __user *src, unsign
+@@ -49,7 +52,7 @@ unsigned int csum_partial_copy_from_user
@@ -19204,4 +18989,3 @@
-diff --git a/include/asm-i386/desc.h b/include/asm-i386/desc.h
-index 89b8b82c82b30bb50695a3d1e63e38324444d31f..678eb2d4f446b704c3dc6c232e64f9c07871bd27 100644
---- a/include/asm-i386/desc.h
-+++ b/include/asm-i386/desc.h
+diff -urNp linux-2.6.17.4/include/asm-i386/desc.h linux-2.6.17.4/include/asm-i386/desc.h
+--- linux-2.6.17.4/include/asm-i386/desc.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/desc.h	2006-07-01 14:35:29.000000000 -0400
@@ -19282 +19066 @@
-@@ -50,7 +92,7 @@ static inline struct desc_struct *get_cpu_gdt_table(unsigned int cpu)
+@@ -50,7 +92,7 @@ static inline struct desc_struct *get_cp
@@ -19291 +19075 @@
-@@ -64,7 +106,7 @@ __asm__ __volatile__ ("movw %w3,0(%2)\n\t" \
+@@ -64,7 +106,7 @@ __asm__ __volatile__ ("movw %w3,0(%2)\n\
@@ -19300 +19084 @@
-@@ -72,11 +114,28 @@ static inline void __set_tss_desc(unsigned int cpu, unsigned int entry, void *ad
+@@ -72,11 +114,28 @@ static inline void __set_tss_desc(unsign
@@ -19330 +19114 @@
-@@ -90,7 +149,7 @@ static inline void set_ldt_desc(unsigned int cpu, void *addr, unsigned int size)
+@@ -90,7 +149,7 @@ static inline void set_ldt_desc(unsigned
@@ -19348 +19132 @@
-@@ -162,6 +221,22 @@ static inline unsigned long get_desc_base(unsigned long *desc)
+@@ -162,6 +221,22 @@ static inline unsigned long get_desc_bas
@@ -19371,5 +19155,4 @@
-diff --git a/include/asm-i386/elf.h b/include/asm-i386/elf.h
-index 4153d80e4d2b86535a6e55a6e72a30ba7b5b5699..8f809f00cbefa9c11a1f123dcc2a77d27ab2e696 100644
---- a/include/asm-i386/elf.h
-+++ b/include/asm-i386/elf.h
-@@ -71,7 +71,22 @@ typedef struct user_fxsr_struct elf_fpxregset_t;
+diff -urNp linux-2.6.17.4/include/asm-i386/elf.h linux-2.6.17.4/include/asm-i386/elf.h
+--- linux-2.6.17.4/include/asm-i386/elf.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/elf.h	2006-07-01 14:35:29.000000000 -0400
+@@ -71,7 +71,22 @@ typedef struct user_fxsr_struct elf_fpxr
@@ -19398 +19181 @@
-@@ -131,7 +146,14 @@ extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct
+@@ -131,7 +146,14 @@ extern int dump_task_extended_fpu (struc
@@ -19419,4 +19202,3 @@
-diff --git a/include/asm-i386/kmap_types.h b/include/asm-i386/kmap_types.h
-index 6886a0c3fedfde6ed82cce4d2ca988d561c6d244..81e7c149e22976072fe52b5d591dcc8e86b745b7 100644
---- a/include/asm-i386/kmap_types.h
-+++ b/include/asm-i386/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-i386/kmap_types.h linux-2.6.17.4/include/asm-i386/kmap_types.h
+--- linux-2.6.17.4/include/asm-i386/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/kmap_types.h	2006-07-01 14:35:29.000000000 -0400
@@ -19433,5 +19215,4 @@
-diff --git a/include/asm-i386/mach-default/apm.h b/include/asm-i386/mach-default/apm.h
-index 1f730b8bd1fd463af3d02d714812b7933703e261..8e6517877ec82d16d0163698d027deda869cc435 100644
---- a/include/asm-i386/mach-default/apm.h
-+++ b/include/asm-i386/mach-default/apm.h
-@@ -36,7 +36,7 @@ static inline void apm_bios_call_asm(u32 func, u32 ebx_in, u32 ecx_in,
+diff -urNp linux-2.6.17.4/include/asm-i386/mach-default/apm.h linux-2.6.17.4/include/asm-i386/mach-default/apm.h
+--- linux-2.6.17.4/include/asm-i386/mach-default/apm.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/mach-default/apm.h	2006-07-01 14:35:29.000000000 -0400
+@@ -36,7 +36,7 @@ static inline void apm_bios_call_asm(u32
@@ -19446 +19227 @@
-@@ -60,7 +60,7 @@ static inline u8 apm_bios_call_simple_asm(u32 func, u32 ebx_in,
+@@ -60,7 +60,7 @@ static inline u8 apm_bios_call_simple_as
@@ -19455,5 +19236,4 @@
-diff --git a/include/asm-i386/mach-default/do_timer.h b/include/asm-i386/mach-default/do_timer.h
-index 6312c3e798147d508c1c695c175559dd96dc8daf..56211414fc9595bc1aeb7a854e1133b6e5238036 100644
---- a/include/asm-i386/mach-default/do_timer.h
-+++ b/include/asm-i386/mach-default/do_timer.h
-@@ -18,7 +18,7 @@ static inline void do_timer_interrupt_hook(struct pt_regs *regs)
+diff -urNp linux-2.6.17.4/include/asm-i386/mach-default/do_timer.h linux-2.6.17.4/include/asm-i386/mach-default/do_timer.h
+--- linux-2.6.17.4/include/asm-i386/mach-default/do_timer.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/mach-default/do_timer.h	2006-07-01 14:35:29.000000000 -0400
+@@ -18,7 +18,7 @@ static inline void do_timer_interrupt_ho
@@ -19468,5 +19248,4 @@
-diff --git a/include/asm-i386/mach-visws/do_timer.h b/include/asm-i386/mach-visws/do_timer.h
-index 95568e6ca91cf3cff150c743ff9f0f87a070a4d9..92d638fc8b11ab3354a9876d6125baecfbe4770c 100644
---- a/include/asm-i386/mach-visws/do_timer.h
-+++ b/include/asm-i386/mach-visws/do_timer.h
-@@ -11,7 +11,7 @@ static inline void do_timer_interrupt_hook(struct pt_regs *regs)
+diff -urNp linux-2.6.17.4/include/asm-i386/mach-visws/do_timer.h linux-2.6.17.4/include/asm-i386/mach-visws/do_timer.h
+--- linux-2.6.17.4/include/asm-i386/mach-visws/do_timer.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/mach-visws/do_timer.h	2006-07-01 14:35:29.000000000 -0400
+@@ -11,7 +11,7 @@ static inline void do_timer_interrupt_ho
@@ -19481,5 +19260,4 @@
-diff --git a/include/asm-i386/mach-voyager/do_timer.h b/include/asm-i386/mach-voyager/do_timer.h
-index eaf518098981cc843e564d3ec1b650f17442256e..ae510e5d0d783c3d8604c402927a2696b04d088b 100644
---- a/include/asm-i386/mach-voyager/do_timer.h
-+++ b/include/asm-i386/mach-voyager/do_timer.h
-@@ -5,7 +5,7 @@ static inline void do_timer_interrupt_hook(struct pt_regs *regs)
+diff -urNp linux-2.6.17.4/include/asm-i386/mach-voyager/do_timer.h linux-2.6.17.4/include/asm-i386/mach-voyager/do_timer.h
+--- linux-2.6.17.4/include/asm-i386/mach-voyager/do_timer.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/mach-voyager/do_timer.h	2006-07-01 14:35:29.000000000 -0400
+@@ -5,7 +5,7 @@ static inline void do_timer_interrupt_ho
@@ -19494,4 +19272,3 @@
-diff --git a/include/asm-i386/mman.h b/include/asm-i386/mman.h
-index 8fd9d7ab7fafcbf143751bc3967d384b1c9f729a..bcda589d8e773563af2030b1008615216c34fff5 100644
---- a/include/asm-i386/mman.h
-+++ b/include/asm-i386/mman.h
+diff -urNp linux-2.6.17.4/include/asm-i386/mman.h linux-2.6.17.4/include/asm-i386/mman.h
+--- linux-2.6.17.4/include/asm-i386/mman.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/mman.h	2006-07-01 14:35:29.000000000 -0400
@@ -19509,27 +19286,4 @@
-diff --git a/include/asm-i386/mmu.h b/include/asm-i386/mmu.h
-index f431a0b86d4c46669e49b0fe4811a64017a27385..ec3ab25d4f8b9274d52cb6c47a3c9b1f69e9d676 100644
---- a/include/asm-i386/mmu.h
-+++ b/include/asm-i386/mmu.h
-@@ -12,6 +12,17 @@ typedef struct {
- 	int size;
- 	struct semaphore sem;
- 	void *ldt;
-+
-+#if defined(CONFIG_PAX_PAGEEXEC) || defined(CONFIG_PAX_SEGMEXEC)
-+	unsigned long user_cs_base;
-+	unsigned long user_cs_limit;
-+
-+#if defined(CONFIG_PAX_PAGEEXEC) && defined(CONFIG_SMP)
-+	cpumask_t cpu_user_cs_mask;
-+#endif
-+
-+#endif
-+
- } mm_context_t;
- 
- #endif
-diff --git a/include/asm-i386/mmu_context.h b/include/asm-i386/mmu_context.h
-index bf08218357ea70c06d67d7aeb7384f231fd47e35..0ee3c1703336c6bd67e5a8e5602198b8db3e7998 100644
---- a/include/asm-i386/mmu_context.h
-+++ b/include/asm-i386/mmu_context.h
-@@ -46,6 +46,13 @@ static inline void switch_mm(struct mm_struct *prev,
+diff -urNp linux-2.6.17.4/include/asm-i386/mmu_context.h linux-2.6.17.4/include/asm-i386/mmu_context.h
+--- linux-2.6.17.4/include/asm-i386/mmu_context.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/mmu_context.h	2006-07-01 14:35:29.000000000 -0400
+@@ -46,6 +46,13 @@ static inline void switch_mm(struct mm_s
@@ -19549 +19303 @@
-@@ -58,6 +65,12 @@ static inline void switch_mm(struct mm_struct *prev,
+@@ -58,6 +65,12 @@ static inline void switch_mm(struct mm_s
@@ -19562,4 +19316,24 @@
-diff --git a/include/asm-i386/module.h b/include/asm-i386/module.h
-index 424661d25bd320702f08c619c5404c6324647a08..61874a347aba8406e10b7f591ad3e78300d641c4 100644
---- a/include/asm-i386/module.h
-+++ b/include/asm-i386/module.h
+diff -urNp linux-2.6.17.4/include/asm-i386/mmu.h linux-2.6.17.4/include/asm-i386/mmu.h
+--- linux-2.6.17.4/include/asm-i386/mmu.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/mmu.h	2006-07-01 14:35:29.000000000 -0400
+@@ -12,6 +12,17 @@ typedef struct { 
+ 	int size;
+ 	struct semaphore sem;
+ 	void *ldt;
++
++#if defined(CONFIG_PAX_PAGEEXEC) || defined(CONFIG_PAX_SEGMEXEC)
++	unsigned long user_cs_base;
++	unsigned long user_cs_limit;
++
++#if defined(CONFIG_PAX_PAGEEXEC) && defined(CONFIG_SMP)
++	cpumask_t cpu_user_cs_mask;
++#endif
++
++#endif
++
+ } mm_context_t;
+ 
+ #endif
+diff -urNp linux-2.6.17.4/include/asm-i386/module.h linux-2.6.17.4/include/asm-i386/module.h
+--- linux-2.6.17.4/include/asm-i386/module.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/module.h	2006-07-01 15:39:05.000000000 -0400
@@ -19580,5 +19354,4 @@
-diff --git a/include/asm-i386/page.h b/include/asm-i386/page.h
-index 30f52a2263ba547e0bf2e4d5367d3ae9012fd5cd..19a8b9649f169bb2027781990d490fba4b1d0ca1 100644
---- a/include/asm-i386/page.h
-+++ b/include/asm-i386/page.h
-@@ -57,7 +57,6 @@ typedef struct { unsigned long long pgprot; } pgprot_t;
+diff -urNp linux-2.6.17.4/include/asm-i386/page.h linux-2.6.17.4/include/asm-i386/page.h
+--- linux-2.6.17.4/include/asm-i386/page.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/page.h	2006-07-01 14:35:29.000000000 -0400
+@@ -57,7 +57,6 @@ typedef struct { unsigned long long pgpr
@@ -19592 +19365 @@
-@@ -118,6 +117,15 @@ extern int page_is_ram(unsigned long pagenr);
+@@ -118,6 +117,15 @@ extern int page_is_ram(unsigned long pag
@@ -19608 +19381 @@
-@@ -137,6 +145,19 @@ extern int page_is_ram(unsigned long pagenr);
+@@ -137,6 +145,19 @@ extern int page_is_ram(unsigned long pag
@@ -19628,4 +19401,3 @@
-diff --git a/include/asm-i386/pgalloc.h b/include/asm-i386/pgalloc.h
-index 0380c3dc1f7e882244b1af6b22b600c6a96450c1..ce1600104eefe72179e8a10e60cbab471fcc8de7 100644
---- a/include/asm-i386/pgalloc.h
-+++ b/include/asm-i386/pgalloc.h
+diff -urNp linux-2.6.17.4/include/asm-i386/pgalloc.h linux-2.6.17.4/include/asm-i386/pgalloc.h
+--- linux-2.6.17.4/include/asm-i386/pgalloc.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/pgalloc.h	2006-07-01 21:49:34.000000000 -0400
@@ -19650,4 +19422,3 @@
-diff --git a/include/asm-i386/pgtable.h b/include/asm-i386/pgtable.h
-index 672c3f76b9df9344caacbbdbc64d308d929bc04e..b3aea180b00e94e14fbfc2349e68fba410612d12 100644
---- a/include/asm-i386/pgtable.h
-+++ b/include/asm-i386/pgtable.h
+diff -urNp linux-2.6.17.4/include/asm-i386/pgtable.h linux-2.6.17.4/include/asm-i386/pgtable.h
+--- linux-2.6.17.4/include/asm-i386/pgtable.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/pgtable.h	2006-07-01 14:35:29.000000000 -0400
@@ -19717 +19488 @@
-@@ -176,18 +191,18 @@ extern unsigned long long __PAGE_KERNEL, __PAGE_KERNEL_EXEC;
+@@ -176,18 +191,18 @@ extern unsigned long long __PAGE_KERNEL,
@@ -19742 +19513 @@
-@@ -431,6 +446,9 @@ extern void noexec_setup(const char *str);
+@@ -431,6 +446,9 @@ extern void noexec_setup(const char *str
@@ -19752,4 +19523,3 @@
-diff --git a/include/asm-i386/processor.h b/include/asm-i386/processor.h
-index 805f0dcda468d3d720b2e836d506870b0657d0ee..d5ddfe7d3c0e12c4bf406df17a2898c8794fee6a 100644
---- a/include/asm-i386/processor.h
-+++ b/include/asm-i386/processor.h
+diff -urNp linux-2.6.17.4/include/asm-i386/processor.h linux-2.6.17.4/include/asm-i386/processor.h
+--- linux-2.6.17.4/include/asm-i386/processor.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/processor.h	2006-07-01 14:35:29.000000000 -0400
@@ -19820 +19590 @@
-@@ -560,11 +570,7 @@ void show_trace(struct task_struct *task, unsigned long *stack);
+@@ -560,11 +570,7 @@ void show_trace(struct task_struct *task
@@ -19833 +19603 @@
-@@ -579,7 +585,7 @@ unsigned long get_wchan(struct task_struct *p);
+@@ -579,7 +585,7 @@ unsigned long get_wchan(struct task_stru
@@ -19842,4 +19612,3 @@
-diff --git a/include/asm-i386/ptrace.h b/include/asm-i386/ptrace.h
-index f324c53b6f9a8e96be3ada795ff90e3e296e6acd..32acf19cf549717d8686d80c47f61d5e44c26700 100644
---- a/include/asm-i386/ptrace.h
-+++ b/include/asm-i386/ptrace.h
+diff -urNp linux-2.6.17.4/include/asm-i386/ptrace.h linux-2.6.17.4/include/asm-i386/ptrace.h
+--- linux-2.6.17.4/include/asm-i386/ptrace.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/ptrace.h	2006-07-01 14:35:29.000000000 -0400
@@ -19869,4 +19638,3 @@
-diff --git a/include/asm-i386/system.h b/include/asm-i386/system.h
-index 19cc79c9a35db68f4fbe1e673b61238a2613e78b..be7fbf8a7b4ad3f3e2d0d3d9f68ba14c10fa3cc2 100644
---- a/include/asm-i386/system.h
-+++ b/include/asm-i386/system.h
+diff -urNp linux-2.6.17.4/include/asm-i386/system.h linux-2.6.17.4/include/asm-i386/system.h
+--- linux-2.6.17.4/include/asm-i386/system.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/system.h	2006-07-01 14:35:29.000000000 -0400
@@ -19881 +19649 @@
-@@ -151,7 +152,7 @@ static inline unsigned long get_limit(unsigned long segment)
+@@ -151,7 +152,7 @@ static inline unsigned long get_limit(un
@@ -19890 +19658 @@
-@@ -496,7 +497,7 @@ static inline void sched_cacheflush(void)
+@@ -496,7 +497,7 @@ static inline void sched_cacheflush(void
@@ -19899,4 +19667,3 @@
-diff --git a/include/asm-i386/uaccess.h b/include/asm-i386/uaccess.h
-index 371457b1ceb6de2b47e8fcf7d125f8e57488cfb5..096361076885e02b43aa7b0a300d693337f86b2b 100644
---- a/include/asm-i386/uaccess.h
-+++ b/include/asm-i386/uaccess.h
+diff -urNp linux-2.6.17.4/include/asm-i386/uaccess.h linux-2.6.17.4/include/asm-i386/uaccess.h
+--- linux-2.6.17.4/include/asm-i386/uaccess.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-i386/uaccess.h	2006-07-01 14:40:30.000000000 -0400
@@ -19981 +19748 @@
-@@ -333,8 +375,11 @@ struct __large_struct { unsigned long buf[100]; };
+@@ -333,8 +375,11 @@ struct __large_struct { unsigned long bu
@@ -19994 +19761 @@
-@@ -344,7 +389,8 @@ struct __large_struct { unsigned long buf[100]; };
+@@ -344,7 +389,8 @@ struct __large_struct { unsigned long bu
@@ -20026,5 +19793,4 @@
-diff --git a/include/asm-ia64/elf.h b/include/asm-ia64/elf.h
-index 446fce036fd929eedb87ffdf95917703a568a9ae..6286be824de21a1aa99a23274ff1d2b2fb19b7c0 100644
---- a/include/asm-ia64/elf.h
-+++ b/include/asm-ia64/elf.h
-@@ -163,6 +163,16 @@ typedef elf_greg_t elf_gregset_t[ELF_NGREG];
+diff -urNp linux-2.6.17.4/include/asm-ia64/elf.h linux-2.6.17.4/include/asm-ia64/elf.h
+--- linux-2.6.17.4/include/asm-ia64/elf.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-ia64/elf.h	2006-07-01 14:35:29.000000000 -0400
+@@ -163,6 +163,16 @@ typedef elf_greg_t elf_gregset_t[ELF_NGR
@@ -20047,4 +19813,3 @@
-diff --git a/include/asm-ia64/kmap_types.h b/include/asm-ia64/kmap_types.h
-index bc777525fa12fc284e971e987992fdcc79cbb227..b421ee123f18c8933e819d7c743156d42655b13b 100644
---- a/include/asm-ia64/kmap_types.h
-+++ b/include/asm-ia64/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-ia64/kmap_types.h linux-2.6.17.4/include/asm-ia64/kmap_types.h
+--- linux-2.6.17.4/include/asm-ia64/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-ia64/kmap_types.h	2006-07-02 00:07:40.000000000 -0400
@@ -20061,4 +19826,3 @@
-diff --git a/include/asm-ia64/page.h b/include/asm-ia64/page.h
-index 2087825eefa4f61c576b0b6478b2da15ff7cc230..589ddc6ab73895dfd3be05978c6e607477769ba0 100644
---- a/include/asm-ia64/page.h
-+++ b/include/asm-ia64/page.h
+diff -urNp linux-2.6.17.4/include/asm-ia64/page.h linux-2.6.17.4/include/asm-ia64/page.h
+--- linux-2.6.17.4/include/asm-ia64/page.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-ia64/page.h	2006-07-01 14:35:29.000000000 -0400
@@ -20079,4 +19843,3 @@
-diff --git a/include/asm-ia64/pgtable.h b/include/asm-ia64/pgtable.h
-index c0f8144f23497ae0f95804148f19206b170393c8..8cdc5cd31028568aec17abd6497501ee7ea35190 100644
---- a/include/asm-ia64/pgtable.h
-+++ b/include/asm-ia64/pgtable.h
+diff -urNp linux-2.6.17.4/include/asm-ia64/pgtable.h linux-2.6.17.4/include/asm-ia64/pgtable.h
+--- linux-2.6.17.4/include/asm-ia64/pgtable.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-ia64/pgtable.h	2006-07-01 14:35:29.000000000 -0400
@@ -20101,4 +19864,3 @@
-diff --git a/include/asm-ia64/processor.h b/include/asm-ia64/processor.h
-index b3bd58e806900053bc0e71870809ce86d7b1a16d..ab563de870378e65be12ac9c84c26076251af4ca 100644
---- a/include/asm-ia64/processor.h
-+++ b/include/asm-ia64/processor.h
+diff -urNp linux-2.6.17.4/include/asm-ia64/processor.h linux-2.6.17.4/include/asm-ia64/processor.h
+--- linux-2.6.17.4/include/asm-ia64/processor.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-ia64/processor.h	2006-07-01 14:35:29.000000000 -0400
@@ -20114,4 +19876,3 @@
-diff --git a/include/asm-ia64/ustack.h b/include/asm-ia64/ustack.h
-index da55c91246e363e1c05c582f02e88061ef750aff..55a4937e2cf67c67f2bb19249a3605cdc8522de1 100644
---- a/include/asm-ia64/ustack.h
-+++ b/include/asm-ia64/ustack.h
+diff -urNp linux-2.6.17.4/include/asm-ia64/ustack.h linux-2.6.17.4/include/asm-ia64/ustack.h
+--- linux-2.6.17.4/include/asm-ia64/ustack.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-ia64/ustack.h	2006-07-01 14:35:29.000000000 -0400
@@ -20126,4 +19887,3 @@
-diff --git a/include/asm-m32r/kmap_types.h b/include/asm-m32r/kmap_types.h
-index 7429591010b69288306a55026cfca3c5404d5931..f9a119f7e72706ce9e3e6982ce0450db4a91e527 100644
---- a/include/asm-m32r/kmap_types.h
-+++ b/include/asm-m32r/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-m32r/kmap_types.h linux-2.6.17.4/include/asm-m32r/kmap_types.h
+--- linux-2.6.17.4/include/asm-m32r/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-m32r/kmap_types.h	2006-07-02 00:07:40.000000000 -0400
@@ -20140,4 +19900,3 @@
-diff --git a/include/asm-m68k/kmap_types.h b/include/asm-m68k/kmap_types.h
-index c843c63d380161411f70e046e16c66705b9a6fac..949e1a9aef996ee72120424fed48f9868105fcf7 100644
---- a/include/asm-m68k/kmap_types.h
-+++ b/include/asm-m68k/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-m68k/kmap_types.h linux-2.6.17.4/include/asm-m68k/kmap_types.h
+--- linux-2.6.17.4/include/asm-m68k/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-m68k/kmap_types.h	2006-07-02 00:07:40.000000000 -0400
@@ -20152,4 +19911,3 @@
-diff --git a/include/asm-m68knommu/kmap_types.h b/include/asm-m68knommu/kmap_types.h
-index bfb6707575d1a878f9fbd98cf3627dcc28e18085..612b63c99b0aecee9aab7cf8b7c01536cb944fdd 100644
---- a/include/asm-m68knommu/kmap_types.h
-+++ b/include/asm-m68knommu/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-m68knommu/kmap_types.h linux-2.6.17.4/include/asm-m68knommu/kmap_types.h
+--- linux-2.6.17.4/include/asm-m68knommu/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-m68knommu/kmap_types.h	2006-07-02 00:07:41.000000000 -0400
@@ -20164,4 +19922,3 @@
-diff --git a/include/asm-mips/a.out.h b/include/asm-mips/a.out.h
-index 2b3dc3bed4dac632a85114034722d00f9aa51d3b..551f13791fd21947b12e13ccefeec714fd336176 100644
---- a/include/asm-mips/a.out.h
-+++ b/include/asm-mips/a.out.h
+diff -urNp linux-2.6.17.4/include/asm-mips/a.out.h linux-2.6.17.4/include/asm-mips/a.out.h
+--- linux-2.6.17.4/include/asm-mips/a.out.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-mips/a.out.h	2006-07-01 14:35:29.000000000 -0400
@@ -20181,5 +19938,4 @@
-diff --git a/include/asm-mips/elf.h b/include/asm-mips/elf.h
-index bdc9de2df1ef28d52644252ab060de9969f6ab2c..bd7d981ba0aaf360a881b6ab841dc8c8a78d5662 100644
---- a/include/asm-mips/elf.h
-+++ b/include/asm-mips/elf.h
-@@ -372,4 +372,15 @@ extern int dump_task_fpu(struct task_struct *, elf_fpregset_t *);
+diff -urNp linux-2.6.17.4/include/asm-mips/elf.h linux-2.6.17.4/include/asm-mips/elf.h
+--- linux-2.6.17.4/include/asm-mips/elf.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-mips/elf.h	2006-07-01 14:35:29.000000000 -0400
+@@ -372,4 +372,15 @@ extern int dump_task_fpu(struct task_str
@@ -20201,4 +19957,3 @@
-diff --git a/include/asm-mips/kmap_types.h b/include/asm-mips/kmap_types.h
-index 6886a0c3fedfde6ed82cce4d2ca988d561c6d244..81e7c149e22976072fe52b5d591dcc8e86b745b7 100644
---- a/include/asm-mips/kmap_types.h
-+++ b/include/asm-mips/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-mips/kmap_types.h linux-2.6.17.4/include/asm-mips/kmap_types.h
+--- linux-2.6.17.4/include/asm-mips/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-mips/kmap_types.h	2006-07-02 00:07:41.000000000 -0400
@@ -20215,5 +19970,4 @@
-diff --git a/include/asm-mips/page.h b/include/asm-mips/page.h
-index 4035ec79ecd494415bceccdc32f91d31e388aee6..38a380de984a72543fbb1962d898d053f039fb8f 100644
---- a/include/asm-mips/page.h
-+++ b/include/asm-mips/page.h
-@@ -151,6 +151,15 @@ typedef struct { unsigned long pgprot; } pgprot_t;
+diff -urNp linux-2.6.17.4/include/asm-mips/page.h linux-2.6.17.4/include/asm-mips/page.h
+--- linux-2.6.17.4/include/asm-mips/page.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-mips/page.h	2006-07-01 14:35:29.000000000 -0400
+@@ -151,6 +151,15 @@ typedef struct { unsigned long pgprot; }
@@ -20235,4 +19989,3 @@
-diff --git a/include/asm-parisc/a.out.h b/include/asm-parisc/a.out.h
-index 2a490cc9ec91541e100630a3e7b79de1cd24e059..fb618bc292b14950fccd15bd24a0b561fe89f7fc 100644
---- a/include/asm-parisc/a.out.h
-+++ b/include/asm-parisc/a.out.h
+diff -urNp linux-2.6.17.4/include/asm-parisc/a.out.h linux-2.6.17.4/include/asm-parisc/a.out.h
+--- linux-2.6.17.4/include/asm-parisc/a.out.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-parisc/a.out.h	2006-07-01 14:35:29.000000000 -0400
@@ -20248,5 +20001,4 @@
-diff --git a/include/asm-parisc/elf.h b/include/asm-parisc/elf.h
-index adea65fc43c904e5da19bd29e88741b8f2b2368e..8d948b85784ec09abcfd9ff83820048a592d6af9 100644
---- a/include/asm-parisc/elf.h
-+++ b/include/asm-parisc/elf.h
-@@ -337,6 +337,17 @@ struct pt_regs;	/* forward declaration... */
+diff -urNp linux-2.6.17.4/include/asm-parisc/elf.h linux-2.6.17.4/include/asm-parisc/elf.h
+--- linux-2.6.17.4/include/asm-parisc/elf.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-parisc/elf.h	2006-07-01 14:35:29.000000000 -0400
+@@ -337,6 +337,17 @@ struct pt_regs;	/* forward declaration..
@@ -20270,4 +20022,3 @@
-diff --git a/include/asm-parisc/kmap_types.h b/include/asm-parisc/kmap_types.h
-index 6886a0c3fedfde6ed82cce4d2ca988d561c6d244..81e7c149e22976072fe52b5d591dcc8e86b745b7 100644
---- a/include/asm-parisc/kmap_types.h
-+++ b/include/asm-parisc/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-parisc/kmap_types.h linux-2.6.17.4/include/asm-parisc/kmap_types.h
+--- linux-2.6.17.4/include/asm-parisc/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-parisc/kmap_types.h	2006-07-02 00:07:41.000000000 -0400
@@ -20284,4 +20035,3 @@
-diff --git a/include/asm-parisc/page.h b/include/asm-parisc/page.h
-index c0dd461fb8f10f2c5b52aa417d4bf7421407bb13..fb94ac5db793d6447d135d029a84629ea5d3e18b 100644
---- a/include/asm-parisc/page.h
-+++ b/include/asm-parisc/page.h
+diff -urNp linux-2.6.17.4/include/asm-parisc/page.h linux-2.6.17.4/include/asm-parisc/page.h
+--- linux-2.6.17.4/include/asm-parisc/page.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-parisc/page.h	2006-07-01 14:35:29.000000000 -0400
@@ -20304,4 +20054,3 @@
-diff --git a/include/asm-parisc/pgtable.h b/include/asm-parisc/pgtable.h
-index aec089eb8b85e6e49f8d30db30c260f56eb57eb9..f6f958689d943bab52c6a7f4d1de72f03049d4a9 100644
---- a/include/asm-parisc/pgtable.h
-+++ b/include/asm-parisc/pgtable.h
+diff -urNp linux-2.6.17.4/include/asm-parisc/pgtable.h linux-2.6.17.4/include/asm-parisc/pgtable.h
+--- linux-2.6.17.4/include/asm-parisc/pgtable.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-parisc/pgtable.h	2006-07-01 14:35:29.000000000 -0400
@@ -20326,4 +20075,3 @@
-diff --git a/include/asm-powerpc/a.out.h b/include/asm-powerpc/a.out.h
-index c7393a977364c3868d98efeaa64304a997defba1..30fbd0186c4abe46a696c6b50eff04098dcb07d8 100644
---- a/include/asm-powerpc/a.out.h
-+++ b/include/asm-powerpc/a.out.h
+diff -urNp linux-2.6.17.4/include/asm-powerpc/a.out.h linux-2.6.17.4/include/asm-powerpc/a.out.h
+--- linux-2.6.17.4/include/asm-powerpc/a.out.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-powerpc/a.out.h	2006-07-01 14:35:29.000000000 -0400
@@ -20345,5 +20093,4 @@
-diff --git a/include/asm-powerpc/elf.h b/include/asm-powerpc/elf.h
-index 94d228f9c6ac0a799e2b431f6464b5e124c1258e..55e741f75789b9057585a17d5ba554f15f38f34f 100644
---- a/include/asm-powerpc/elf.h
-+++ b/include/asm-powerpc/elf.h
-@@ -176,6 +176,26 @@ typedef elf_vrreg_t elf_vrregset_t32[ELF_NVRREG32];
+diff -urNp linux-2.6.17.4/include/asm-powerpc/elf.h linux-2.6.17.4/include/asm-powerpc/elf.h
+--- linux-2.6.17.4/include/asm-powerpc/elf.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-powerpc/elf.h	2006-07-01 14:35:29.000000000 -0400
+@@ -176,6 +176,26 @@ typedef elf_vrreg_t elf_vrregset_t32[ELF
@@ -20376,4 +20123,3 @@
-diff --git a/include/asm-powerpc/kmap_types.h b/include/asm-powerpc/kmap_types.h
-index b6bac6f61c16d60465b17da5cc77ba81e059ec5e..74d63c5429ead26adcd1c7265c27a6e8881bef1e 100644
---- a/include/asm-powerpc/kmap_types.h
-+++ b/include/asm-powerpc/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-powerpc/kmap_types.h linux-2.6.17.4/include/asm-powerpc/kmap_types.h
+--- linux-2.6.17.4/include/asm-powerpc/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-powerpc/kmap_types.h	2006-07-02 00:07:41.000000000 -0400
@@ -20388,4 +20134,3 @@
-diff --git a/include/asm-powerpc/page_64.h b/include/asm-powerpc/page_64.h
-index eab779c219958b18b82afd1ff5c55bc5de05f89b..94b937a4ba913c3117d9090049b4ea6ec59c7e1c 100644
---- a/include/asm-powerpc/page_64.h
-+++ b/include/asm-powerpc/page_64.h
+diff -urNp linux-2.6.17.4/include/asm-powerpc/page_64.h linux-2.6.17.4/include/asm-powerpc/page_64.h
+--- linux-2.6.17.4/include/asm-powerpc/page_64.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-powerpc/page_64.h	2006-07-01 14:35:29.000000000 -0400
@@ -20408,5 +20153,4 @@
-diff --git a/include/asm-ppc/page.h b/include/asm-ppc/page.h
-index 0fb68a0b0181c311eae08877d29809980639a76e..72f7a0ae9649497c2427256a719ad67f759ddaf5 100644
---- a/include/asm-ppc/page.h
-+++ b/include/asm-ppc/page.h
-@@ -175,6 +175,15 @@ extern __inline__ int get_order(unsigned long size)
+diff -urNp linux-2.6.17.4/include/asm-ppc/page.h linux-2.6.17.4/include/asm-ppc/page.h
+--- linux-2.6.17.4/include/asm-ppc/page.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-ppc/page.h	2006-07-01 14:35:29.000000000 -0400
+@@ -175,6 +175,15 @@ extern __inline__ int get_order(unsigned
@@ -20428,5 +20172,4 @@
-diff --git a/include/asm-ppc/pgtable.h b/include/asm-ppc/pgtable.h
-index 570b355162fae0bba5247e84c01407fe55e4ab88..34e509ebfc23b6a43064348231569ac641d28bda 100644
---- a/include/asm-ppc/pgtable.h
-+++ b/include/asm-ppc/pgtable.h
-@@ -441,11 +441,21 @@ extern unsigned long ioremap_bot, ioremap_base;
+diff -urNp linux-2.6.17.4/include/asm-ppc/pgtable.h linux-2.6.17.4/include/asm-ppc/pgtable.h
+--- linux-2.6.17.4/include/asm-ppc/pgtable.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-ppc/pgtable.h	2006-07-01 14:35:29.000000000 -0400
+@@ -441,11 +441,21 @@ extern unsigned long ioremap_bot, iorema
@@ -20457 +20200 @@
-@@ -457,21 +467,21 @@ extern unsigned long ioremap_bot, ioremap_base;
+@@ -457,21 +467,21 @@ extern unsigned long ioremap_bot, iorema
@@ -20489,4 +20232,3 @@
-diff --git a/include/asm-s390/kmap_types.h b/include/asm-s390/kmap_types.h
-index fd1574648223b5aaa3a9bb60255098a64b4db919..b5fabe7c834e05fb08f97201bb42fe9dc29fbf33 100644
---- a/include/asm-s390/kmap_types.h
-+++ b/include/asm-s390/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-s390/kmap_types.h linux-2.6.17.4/include/asm-s390/kmap_types.h
+--- linux-2.6.17.4/include/asm-s390/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-s390/kmap_types.h	2006-07-02 00:07:41.000000000 -0400
@@ -20501,4 +20243,3 @@
-diff --git a/include/asm-sh/kmap_types.h b/include/asm-sh/kmap_types.h
-index 2492ba07148f672a1c2224f51f1608dc91b48462..17156b29ab19373c9c96527446ef8a0f3e7fcb4e 100644
---- a/include/asm-sh/kmap_types.h
-+++ b/include/asm-sh/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-sh/kmap_types.h linux-2.6.17.4/include/asm-sh/kmap_types.h
+--- linux-2.6.17.4/include/asm-sh/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sh/kmap_types.h	2006-07-02 00:07:41.000000000 -0400
@@ -20515,5 +20256,4 @@
-diff --git a/include/asm-sparc/a.out.h b/include/asm-sparc/a.out.h
-index e4e83eb0161ed7e490a5237653420197bd598286..96f9c50481f860fe6cb11698e729fa0ac3afa23b 100644
---- a/include/asm-sparc/a.out.h
-+++ b/include/asm-sparc/a.out.h
-@@ -91,7 +91,7 @@ struct relocation_info /* used when header.a_machtype == M_SPARC */
+diff -urNp linux-2.6.17.4/include/asm-sparc/a.out.h linux-2.6.17.4/include/asm-sparc/a.out.h
+--- linux-2.6.17.4/include/asm-sparc/a.out.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sparc/a.out.h	2006-07-01 14:35:29.000000000 -0400
+@@ -91,7 +91,7 @@ struct relocation_info /* used when head
@@ -20528,4 +20268,3 @@
-diff --git a/include/asm-sparc/elf.h b/include/asm-sparc/elf.h
-index 4a71d7c1eacef14c39e669b1f37f7c0ad252300e..3fd80ebedd11f851b25ba6661b943488da7d9423 100644
---- a/include/asm-sparc/elf.h
-+++ b/include/asm-sparc/elf.h
+diff -urNp linux-2.6.17.4/include/asm-sparc/elf.h linux-2.6.17.4/include/asm-sparc/elf.h
+--- linux-2.6.17.4/include/asm-sparc/elf.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sparc/elf.h	2006-07-01 14:35:29.000000000 -0400
@@ -20550,4 +20289,3 @@
-diff --git a/include/asm-sparc/kmap_types.h b/include/asm-sparc/kmap_types.h
-index e215f7104974fb76957d66695185f9e925edc519..0f30004ef284b9aa7c99baab4905794c79c257af 100644
---- a/include/asm-sparc/kmap_types.h
-+++ b/include/asm-sparc/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-sparc/kmap_types.h linux-2.6.17.4/include/asm-sparc/kmap_types.h
+--- linux-2.6.17.4/include/asm-sparc/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sparc/kmap_types.h	2006-07-02 00:07:41.000000000 -0400
@@ -20562,4 +20300,3 @@
-diff --git a/include/asm-sparc/page.h b/include/asm-sparc/page.h
-index ec3274b7ddf4b347c2303f2331bdeb2c832978b9..6fa1b39507470f56bb147ea7b524482b1cb63891 100644
---- a/include/asm-sparc/page.h
-+++ b/include/asm-sparc/page.h
+diff -urNp linux-2.6.17.4/include/asm-sparc/page.h linux-2.6.17.4/include/asm-sparc/page.h
+--- linux-2.6.17.4/include/asm-sparc/page.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sparc/page.h	2006-07-01 14:35:29.000000000 -0400
@@ -20582,4 +20319,3 @@
-diff --git a/include/asm-sparc/pgtable.h b/include/asm-sparc/pgtable.h
-index 9eea8f4d41f059a21394449eb388898b3ec8681c..eb03ca3288dbcf00193b4d5e94e3671bbe9e6b60 100644
---- a/include/asm-sparc/pgtable.h
-+++ b/include/asm-sparc/pgtable.h
+diff -urNp linux-2.6.17.4/include/asm-sparc/pgtable.h linux-2.6.17.4/include/asm-sparc/pgtable.h
+--- linux-2.6.17.4/include/asm-sparc/pgtable.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sparc/pgtable.h	2006-07-01 14:35:29.000000000 -0400
@@ -20617,4 +20353,3 @@
-diff --git a/include/asm-sparc/pgtsrmmu.h b/include/asm-sparc/pgtsrmmu.h
-index edeb9811e7285fd35da7fa0d68246b5021725bd5..b4d2dced8daa9b81634ee0dca98675981c0c9811 100644
---- a/include/asm-sparc/pgtsrmmu.h
-+++ b/include/asm-sparc/pgtsrmmu.h
+diff -urNp linux-2.6.17.4/include/asm-sparc/pgtsrmmu.h linux-2.6.17.4/include/asm-sparc/pgtsrmmu.h
+--- linux-2.6.17.4/include/asm-sparc/pgtsrmmu.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sparc/pgtsrmmu.h	2006-07-01 14:35:29.000000000 -0400
@@ -20638,4 +20373,3 @@
-diff --git a/include/asm-sparc/uaccess.h b/include/asm-sparc/uaccess.h
-index 3cf132e1aa2548c19c62cc885d063129b7ed05d2..5e87854a33b2ed53fc286b6d05e5c6d7314cb914 100644
---- a/include/asm-sparc/uaccess.h
-+++ b/include/asm-sparc/uaccess.h
+diff -urNp linux-2.6.17.4/include/asm-sparc/uaccess.h linux-2.6.17.4/include/asm-sparc/uaccess.h
+--- linux-2.6.17.4/include/asm-sparc/uaccess.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sparc/uaccess.h	2006-07-01 14:35:29.000000000 -0400
@@ -20651,5 +20385,4 @@
-diff --git a/include/asm-sparc64/a.out.h b/include/asm-sparc64/a.out.h
-index 35cb5c9e0c92f1625a20714e06662af39576c4ea..3f3ce70b947581dae53cfc64fe163b3588c98ab3 100644
---- a/include/asm-sparc64/a.out.h
-+++ b/include/asm-sparc64/a.out.h
-@@ -98,7 +98,7 @@ struct relocation_info /* used when header.a_machtype == M_SPARC */
+diff -urNp linux-2.6.17.4/include/asm-sparc64/a.out.h linux-2.6.17.4/include/asm-sparc64/a.out.h
+--- linux-2.6.17.4/include/asm-sparc64/a.out.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sparc64/a.out.h	2006-07-01 14:35:29.000000000 -0400
+@@ -98,7 +98,7 @@ struct relocation_info /* used when head
@@ -20664,4 +20397,3 @@
-diff --git a/include/asm-sparc64/elf.h b/include/asm-sparc64/elf.h
-index 303d85e2f82ee003b1a6866b766ebb1731975d0d..bc367eb3782188d6fd1ff3e8bca02d8590ceb12e 100644
---- a/include/asm-sparc64/elf.h
-+++ b/include/asm-sparc64/elf.h
+diff -urNp linux-2.6.17.4/include/asm-sparc64/elf.h linux-2.6.17.4/include/asm-sparc64/elf.h
+--- linux-2.6.17.4/include/asm-sparc64/elf.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sparc64/elf.h	2006-07-01 14:35:29.000000000 -0400
@@ -20685,4 +20417,3 @@
-diff --git a/include/asm-sparc64/kmap_types.h b/include/asm-sparc64/kmap_types.h
-index 34c1d3d9a3b0cb30ae0d19502d88a6ee82069977..6993ca7c252ce8280b855a8813442b7d5f7f323c 100644
---- a/include/asm-sparc64/kmap_types.h
-+++ b/include/asm-sparc64/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-sparc64/kmap_types.h linux-2.6.17.4/include/asm-sparc64/kmap_types.h
+--- linux-2.6.17.4/include/asm-sparc64/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sparc64/kmap_types.h	2006-07-02 00:07:41.000000000 -0400
@@ -20697,4 +20428,3 @@
-diff --git a/include/asm-sparc64/page.h b/include/asm-sparc64/page.h
-index aabb219067243a353b41726297e61d9544b59187..c910a63aee058626e89c73a2ff998cebf1c1c73d 100644
---- a/include/asm-sparc64/page.h
-+++ b/include/asm-sparc64/page.h
+diff -urNp linux-2.6.17.4/include/asm-sparc64/page.h linux-2.6.17.4/include/asm-sparc64/page.h
+--- linux-2.6.17.4/include/asm-sparc64/page.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-sparc64/page.h	2006-07-01 14:35:29.000000000 -0400
@@ -20717,4 +20447,3 @@
-diff --git a/include/asm-v850/kmap_types.h b/include/asm-v850/kmap_types.h
-index 3288976b161f52b18a278a42d2d66980d78fe875..321e0b2d5e4fa77eded63e21628d1afb77fa551e 100644
---- a/include/asm-v850/kmap_types.h
-+++ b/include/asm-v850/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-v850/kmap_types.h linux-2.6.17.4/include/asm-v850/kmap_types.h
+--- linux-2.6.17.4/include/asm-v850/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-v850/kmap_types.h	2006-07-02 00:07:41.000000000 -0400
@@ -20729,4 +20458,3 @@
-diff --git a/include/asm-x86_64/a.out.h b/include/asm-x86_64/a.out.h
-index 7255cde065384d9508507c88ac522fedfc9d36b2..0e01ac4c788c19591014e16f1d198588bde7ab78 100644
---- a/include/asm-x86_64/a.out.h
-+++ b/include/asm-x86_64/a.out.h
+diff -urNp linux-2.6.17.4/include/asm-x86_64/a.out.h linux-2.6.17.4/include/asm-x86_64/a.out.h
+--- linux-2.6.17.4/include/asm-x86_64/a.out.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-x86_64/a.out.h	2006-07-01 14:35:29.000000000 -0400
@@ -20742,5 +20470,4 @@
-diff --git a/include/asm-x86_64/elf.h b/include/asm-x86_64/elf.h
-index b4f8f4a41a6e93fbebddbd3a399b1c932dd23387..41d5e1c6bc8bba0888313cca044ab0b012e9a27a 100644
---- a/include/asm-x86_64/elf.h
-+++ b/include/asm-x86_64/elf.h
-@@ -90,6 +90,17 @@ typedef struct user_i387_struct elf_fpregset_t;
+diff -urNp linux-2.6.17.4/include/asm-x86_64/elf.h linux-2.6.17.4/include/asm-x86_64/elf.h
+--- linux-2.6.17.4/include/asm-x86_64/elf.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-x86_64/elf.h	2006-07-01 14:35:29.000000000 -0400
+@@ -90,6 +90,17 @@ typedef struct user_i387_struct elf_fpre
@@ -20764,4 +20491,3 @@
-diff --git a/include/asm-x86_64/ia32.h b/include/asm-x86_64/ia32.h
-index e6b7f2234e439ccdac3400be1e49d2cd624f1d61..a6ba46c0555370852b2d9b98d0125b8b30cb0f4e 100644
---- a/include/asm-x86_64/ia32.h
-+++ b/include/asm-x86_64/ia32.h
+diff -urNp linux-2.6.17.4/include/asm-x86_64/ia32.h linux-2.6.17.4/include/asm-x86_64/ia32.h
+--- linux-2.6.17.4/include/asm-x86_64/ia32.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-x86_64/ia32.h	2006-07-01 14:35:29.000000000 -0400
@@ -20783,4 +20509,3 @@
-diff --git a/include/asm-x86_64/kmap_types.h b/include/asm-x86_64/kmap_types.h
-index 7486338c6cea86763f9d7e69eecc90e65a6fa251..557717302802f305e32b34ac0b8df3a862c4fc27 100644
---- a/include/asm-x86_64/kmap_types.h
-+++ b/include/asm-x86_64/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-x86_64/kmap_types.h linux-2.6.17.4/include/asm-x86_64/kmap_types.h
+--- linux-2.6.17.4/include/asm-x86_64/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-x86_64/kmap_types.h	2006-07-02 00:07:41.000000000 -0400
@@ -20795,5 +20520,4 @@
-diff --git a/include/asm-x86_64/page.h b/include/asm-x86_64/page.h
-index 408185bac35108cbf9d3b433f662f823c124b373..208af3bdbe1289745d866f4ef34c496090300d1d 100644
---- a/include/asm-x86_64/page.h
-+++ b/include/asm-x86_64/page.h
-@@ -134,6 +134,15 @@ typedef struct { unsigned long pgprot; } pgprot_t;
+diff -urNp linux-2.6.17.4/include/asm-x86_64/page.h linux-2.6.17.4/include/asm-x86_64/page.h
+--- linux-2.6.17.4/include/asm-x86_64/page.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-x86_64/page.h	2006-07-01 14:35:29.000000000 -0400
+@@ -134,6 +134,15 @@ typedef struct { unsigned long pgprot; }
@@ -20815,4 +20539,3 @@
-diff --git a/include/asm-x86_64/pgalloc.h b/include/asm-x86_64/pgalloc.h
-index 43d4c333a8b19a0c9f9a9a5a8bb218638f551a51..ad42c316f52235e8a046d19cb0d7573bb2bf88fc 100644
---- a/include/asm-x86_64/pgalloc.h
-+++ b/include/asm-x86_64/pgalloc.h
+diff -urNp linux-2.6.17.4/include/asm-x86_64/pgalloc.h linux-2.6.17.4/include/asm-x86_64/pgalloc.h
+--- linux-2.6.17.4/include/asm-x86_64/pgalloc.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-x86_64/pgalloc.h	2006-07-01 14:35:29.000000000 -0400
@@ -20828,5 +20551,4 @@
-diff --git a/include/asm-x86_64/pgtable.h b/include/asm-x86_64/pgtable.h
-index 31e83c3bd022b315a82799ed4113436954f43a48..d6902be8cdbc9dcbb25985375824427628e26494 100644
---- a/include/asm-x86_64/pgtable.h
-+++ b/include/asm-x86_64/pgtable.h
-@@ -180,6 +180,10 @@ static inline pte_t ptep_get_and_clear_full(struct mm_struct *mm, unsigned long
+diff -urNp linux-2.6.17.4/include/asm-x86_64/pgtable.h linux-2.6.17.4/include/asm-x86_64/pgtable.h
+--- linux-2.6.17.4/include/asm-x86_64/pgtable.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-x86_64/pgtable.h	2006-07-01 14:35:29.000000000 -0400
+@@ -180,6 +180,10 @@ static inline pte_t ptep_get_and_clear_f
@@ -20843 +20565 @@
-@@ -268,7 +272,13 @@ static inline pte_t pfn_pte(unsigned long page_nr, pgprot_t pgprot)
+@@ -268,7 +272,13 @@ static inline pte_t pfn_pte(unsigned lon
@@ -20858 +20580 @@
-@@ -276,12 +286,26 @@ static inline int pte_file(pte_t pte)		{ return pte_val(pte) & _PAGE_FILE; }
+@@ -276,12 +286,26 @@ static inline int pte_file(pte_t pte)		{
@@ -20887,5 +20609,4 @@
-diff --git a/include/asm-x86_64/system.h b/include/asm-x86_64/system.h
-index 3975989802280ff1ad2ffc7322a68611ad2d5793..58c08d1d0c088b63b295f366bb45a131887a33e7 100644
---- a/include/asm-x86_64/system.h
-+++ b/include/asm-x86_64/system.h
-@@ -366,6 +366,6 @@ static inline unsigned long __cmpxchg(volatile void *ptr, unsigned long old,
+diff -urNp linux-2.6.17.4/include/asm-x86_64/system.h linux-2.6.17.4/include/asm-x86_64/system.h
+--- linux-2.6.17.4/include/asm-x86_64/system.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-x86_64/system.h	2006-07-01 14:35:29.000000000 -0400
+@@ -366,6 +366,6 @@ static inline unsigned long __cmpxchg(vo
@@ -20899,4 +20620,3 @@
-diff --git a/include/asm-xtensa/kmap_types.h b/include/asm-xtensa/kmap_types.h
-index 9e822d2e3bcecf69871eb65acdf81655c02e1124..ec535f19b4ee8640d6b81f61c3e1ef6e56022c29 100644
---- a/include/asm-xtensa/kmap_types.h
-+++ b/include/asm-xtensa/kmap_types.h
+diff -urNp linux-2.6.17.4/include/asm-xtensa/kmap_types.h linux-2.6.17.4/include/asm-xtensa/kmap_types.h
+--- linux-2.6.17.4/include/asm-xtensa/kmap_types.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/asm-xtensa/kmap_types.h	2006-07-02 00:07:41.000000000 -0400
@@ -20911,4 +20631,3 @@
-diff --git a/include/linux/a.out.h b/include/linux/a.out.h
-index f913cc3e1b0da141d273522c751e4003cfc7ec18..da5ac9eaeaab1838f5cdb989f6500be079b918aa 100644
---- a/include/linux/a.out.h
-+++ b/include/linux/a.out.h
+diff -urNp linux-2.6.17.4/include/linux/a.out.h linux-2.6.17.4/include/linux/a.out.h
+--- linux-2.6.17.4/include/linux/a.out.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/a.out.h	2006-07-01 14:35:29.000000000 -0400
@@ -20947,4 +20666,3 @@
-diff --git a/include/linux/binfmts.h b/include/linux/binfmts.h
-index c1e82c51444320f0970162fa76b2065ab3727bf7..f25910c9479e8a8cc0e3051046f60e0d11c98670 100644
---- a/include/linux/binfmts.h
-+++ b/include/linux/binfmts.h
+diff -urNp linux-2.6.17.4/include/linux/binfmts.h linux-2.6.17.4/include/linux/binfmts.h
+--- linux-2.6.17.4/include/linux/binfmts.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/binfmts.h	2006-07-01 14:35:29.000000000 -0400
@@ -20973 +20691 @@
-@@ -87,5 +88,8 @@ extern void compute_creds(struct linux_binprm *binprm);
+@@ -87,5 +88,8 @@ extern void compute_creds(struct linux_b
@@ -20982,5 +20700,4 @@
-diff --git a/include/linux/capability.h b/include/linux/capability.h
-index 6548b35ab9f685d3f7a215cea8b2bfc557a1ac17..ca2f1010f1e72e2aea8ddaaffa54142036e5dd71 100644
---- a/include/linux/capability.h
-+++ b/include/linux/capability.h
-@@ -358,6 +358,7 @@ static inline kernel_cap_t cap_invert(kernel_cap_t c)
+diff -urNp linux-2.6.17.4/include/linux/capability.h linux-2.6.17.4/include/linux/capability.h
+--- linux-2.6.17.4/include/linux/capability.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/capability.h	2006-07-01 15:49:14.000000000 -0400
+@@ -358,6 +358,7 @@ static inline kernel_cap_t cap_invert(ke
@@ -20994,4 +20711,3 @@
-diff --git a/include/linux/elf.h b/include/linux/elf.h
-index d3bfacb2449642f751e182977c23e482b85a8ab8..11c8adbd652bbe25f708d20f62d73ab37c1138e9 100644
---- a/include/linux/elf.h
-+++ b/include/linux/elf.h
+diff -urNp linux-2.6.17.4/include/linux/elf.h linux-2.6.17.4/include/linux/elf.h
+--- linux-2.6.17.4/include/linux/elf.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/elf.h	2006-07-01 14:35:29.000000000 -0400
@@ -21080,5 +20796,3 @@
-diff --git a/include/linux/gracl.h b/include/linux/gracl.h
-new file mode 100644
-index 0000000000000000000000000000000000000000..4f9de9dfe07eaadf3dd814117328485a343f2048
---- /dev/null
-+++ b/include/linux/gracl.h
+diff -urNp linux-2.6.17.4/include/linux/gracl.h linux-2.6.17.4/include/linux/gracl.h
+--- linux-2.6.17.4/include/linux/gracl.h	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/include/linux/gracl.h	2006-07-01 15:39:05.000000000 -0400
@@ -21402,5 +21116,3 @@
-diff --git a/include/linux/gralloc.h b/include/linux/gralloc.h
-new file mode 100644
-index 0000000000000000000000000000000000000000..35865f3ad088d10a01ef9e214ce1483152938200
---- /dev/null
-+++ b/include/linux/gralloc.h
+diff -urNp linux-2.6.17.4/include/linux/gralloc.h linux-2.6.17.4/include/linux/gralloc.h
+--- linux-2.6.17.4/include/linux/gralloc.h	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/include/linux/gralloc.h	2006-07-01 15:39:05.000000000 -0400
@@ -21416,5 +21128,3 @@
-diff --git a/include/linux/grdefs.h b/include/linux/grdefs.h
-new file mode 100644
-index 0000000000000000000000000000000000000000..c0e1b179eccbbaac1887205db00ef777a63f59a2
---- /dev/null
-+++ b/include/linux/grdefs.h
+diff -urNp linux-2.6.17.4/include/linux/grdefs.h linux-2.6.17.4/include/linux/grdefs.h
+--- linux-2.6.17.4/include/linux/grdefs.h	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/include/linux/grdefs.h	2006-07-01 15:39:05.000000000 -0400
@@ -21553,5 +21263,3 @@
-diff --git a/include/linux/grinternal.h b/include/linux/grinternal.h
-new file mode 100644
-index 0000000000000000000000000000000000000000..fc6279ca4496faa70809d8ed80ca7c34db711429
---- /dev/null
-+++ b/include/linux/grinternal.h
+diff -urNp linux-2.6.17.4/include/linux/grinternal.h linux-2.6.17.4/include/linux/grinternal.h
+--- linux-2.6.17.4/include/linux/grinternal.h	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/include/linux/grinternal.h	2006-07-01 20:22:15.000000000 -0400
@@ -21770,5 +21478,3 @@
-diff --git a/include/linux/grmsg.h b/include/linux/grmsg.h
-new file mode 100644
-index 0000000000000000000000000000000000000000..e230f65b535327e3912522e4d8ff9a0e7602bee4
---- /dev/null
-+++ b/include/linux/grmsg.h
+diff -urNp linux-2.6.17.4/include/linux/grmsg.h linux-2.6.17.4/include/linux/grmsg.h
+--- linux-2.6.17.4/include/linux/grmsg.h	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/include/linux/grmsg.h	2006-07-01 15:39:05.000000000 -0400
@@ -21884,5 +21590,3 @@
-diff --git a/include/linux/grsecurity.h b/include/linux/grsecurity.h
-new file mode 100644
-index 0000000000000000000000000000000000000000..9f913f835ad6fea49ff27d46b88b326c4cead8ee
---- /dev/null
-+++ b/include/linux/grsecurity.h
+diff -urNp linux-2.6.17.4/include/linux/grsecurity.h linux-2.6.17.4/include/linux/grsecurity.h
+--- linux-2.6.17.4/include/linux/grsecurity.h	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/include/linux/grsecurity.h	2006-07-01 15:39:05.000000000 -0400
@@ -22086,5 +21790,4 @@
-diff --git a/include/linux/highmem.h b/include/linux/highmem.h
-index 892c4ea1b4254a63d6540f948229a6f8164282e1..6d9c3c6638e97ac4d4876adb15d7be0c2dbb5a0e 100644
---- a/include/linux/highmem.h
-+++ b/include/linux/highmem.h
-@@ -70,9 +70,9 @@ alloc_zeroed_user_highpage(struct vm_area_struct *vma, unsigned long vaddr)
+diff -urNp linux-2.6.17.4/include/linux/highmem.h linux-2.6.17.4/include/linux/highmem.h
+--- linux-2.6.17.4/include/linux/highmem.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/highmem.h	2006-07-01 14:35:29.000000000 -0400
+@@ -70,9 +70,9 @@ alloc_zeroed_user_highpage(struct vm_are
@@ -22102,4 +21805,18 @@
-diff --git a/include/linux/mm.h b/include/linux/mm.h
-index 1154684209a4458d1507702e1c4a778d942eda94..e66cf2752810debde83ed56675d44ded203a613b 100644
---- a/include/linux/mm.h
-+++ b/include/linux/mm.h
+diff -urNp linux-2.6.17.4/include/linux/mman.h linux-2.6.17.4/include/linux/mman.h
+--- linux-2.6.17.4/include/linux/mman.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/mman.h	2006-07-01 14:35:29.000000000 -0400
+@@ -59,6 +59,11 @@ static inline unsigned long
+ calc_vm_flag_bits(unsigned long flags)
+ {
+ 	return _calc_vm_trans(flags, MAP_GROWSDOWN,  VM_GROWSDOWN ) |
++
++#ifdef CONFIG_PAX_SEGMEXEC
++	       _calc_vm_trans(flags, MAP_MIRROR, VM_MIRROR) |
++#endif
++
+ 	       _calc_vm_trans(flags, MAP_DENYWRITE,  VM_DENYWRITE ) |
+ 	       _calc_vm_trans(flags, MAP_EXECUTABLE, VM_EXECUTABLE) |
+ 	       _calc_vm_trans(flags, MAP_LOCKED,     VM_LOCKED    );
+diff -urNp linux-2.6.17.4/include/linux/mm.h linux-2.6.17.4/include/linux/mm.h
+--- linux-2.6.17.4/include/linux/mm.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/mm.h	2006-07-01 14:35:29.000000000 -0400
@@ -22158 +21875 @@
-@@ -167,6 +203,18 @@ extern unsigned int kobjsize(const void *objp);
+@@ -167,6 +203,18 @@ extern unsigned int kobjsize(const void 
@@ -22189,20 +21906,3 @@
-diff --git a/include/linux/mman.h b/include/linux/mman.h
-index 18a5689ef748c569b43dfbaf9fe3bcde0243fc31..2a95c116dac48da1e58ff7775c036169d8d392e9 100644
---- a/include/linux/mman.h
-+++ b/include/linux/mman.h
-@@ -59,6 +59,11 @@ static inline unsigned long
- calc_vm_flag_bits(unsigned long flags)
- {
- 	return _calc_vm_trans(flags, MAP_GROWSDOWN,  VM_GROWSDOWN ) |
-+
-+#ifdef CONFIG_PAX_SEGMEXEC
-+	       _calc_vm_trans(flags, MAP_MIRROR, VM_MIRROR) |
-+#endif
-+
- 	       _calc_vm_trans(flags, MAP_DENYWRITE,  VM_DENYWRITE ) |
- 	       _calc_vm_trans(flags, MAP_EXECUTABLE, VM_EXECUTABLE) |
- 	       _calc_vm_trans(flags, MAP_LOCKED,     VM_LOCKED    );
-diff --git a/include/linux/module.h b/include/linux/module.h
-index eaec13ddd6670bb8f9d41ef68a3faf3c7d06a5bb..8ffd85314b6940d69f6c33cd9c7cd00475e26986 100644
---- a/include/linux/module.h
-+++ b/include/linux/module.h
+diff -urNp linux-2.6.17.4/include/linux/module.h linux-2.6.17.4/include/linux/module.h
+--- linux-2.6.17.4/include/linux/module.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/module.h	2006-07-01 14:35:29.000000000 -0400
@@ -22230,5 +21930,4 @@
-diff --git a/include/linux/moduleloader.h b/include/linux/moduleloader.h
-index eb1033957486670348f892b4d93117958af76c0a..06529f3addd580e3986a05007ecfee4644ce883c 100644
---- a/include/linux/moduleloader.h
-+++ b/include/linux/moduleloader.h
-@@ -17,9 +17,21 @@ int module_frob_arch_sections(Elf_Ehdr *hdr,
+diff -urNp linux-2.6.17.4/include/linux/moduleloader.h linux-2.6.17.4/include/linux/moduleloader.h
+--- linux-2.6.17.4/include/linux/moduleloader.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/moduleloader.h	2006-07-01 14:35:29.000000000 -0400
+@@ -17,9 +17,21 @@ int module_frob_arch_sections(Elf_Ehdr *
@@ -22256,5 +21955,4 @@
-diff --git a/include/linux/random.h b/include/linux/random.h
-index 5d6456bcdebac8e4099809369407583bf04b8d69..288dbde79795eb1f9e982381b5d3cdf833656310 100644
---- a/include/linux/random.h
-+++ b/include/linux/random.h
-@@ -62,6 +62,8 @@ extern __u32 secure_tcpv6_sequence_number(__u32 *saddr, __u32 *daddr,
+diff -urNp linux-2.6.17.4/include/linux/random.h linux-2.6.17.4/include/linux/random.h
+--- linux-2.6.17.4/include/linux/random.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/random.h	2006-07-01 14:35:29.000000000 -0400
+@@ -62,6 +62,8 @@ extern __u32 secure_tcpv6_sequence_numbe
@@ -22269,4 +21967,3 @@
-diff --git a/include/linux/sched.h b/include/linux/sched.h
-index 29b7d4f87d207a69a1b8a2c0167416f1332f030d..f4abfb496a50f54010d3177a348fce08a773fcf1 100644
---- a/include/linux/sched.h
-+++ b/include/linux/sched.h
+diff -urNp linux-2.6.17.4/include/linux/sched.h linux-2.6.17.4/include/linux/sched.h
+--- linux-2.6.17.4/include/linux/sched.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/sched.h	2006-07-01 15:52:11.000000000 -0400
@@ -22350 +22047 @@
-@@ -1393,6 +1440,12 @@ extern void arch_pick_mmap_layout(struct mm_struct *mm);
+@@ -1393,6 +1440,12 @@ extern void arch_pick_mmap_layout(struct
@@ -22363,5 +22060,4 @@
-diff --git a/include/linux/shm.h b/include/linux/shm.h
-index a2c896ad0befa6819dbae3e1ffd47b1679597346..5f7f8ce28939f864c8de5ec62ef2ef583481f269 100644
---- a/include/linux/shm.h
-+++ b/include/linux/shm.h
-@@ -86,6 +86,10 @@ struct shmid_kernel /* private to the kernel */
+diff -urNp linux-2.6.17.4/include/linux/shm.h linux-2.6.17.4/include/linux/shm.h
+--- linux-2.6.17.4/include/linux/shm.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/shm.h	2006-07-01 15:39:05.000000000 -0400
+@@ -86,6 +86,10 @@ struct shmid_kernel /* private to the ke
@@ -22378,4 +22074,3 @@
-diff --git a/include/linux/sysctl.h b/include/linux/sysctl.h
-index 76eaeff76f82dc03f3f42d33d3f3a13983268e9e..a262891a9c83a8f776269e4d35e0d560c2321d2a 100644
---- a/include/linux/sysctl.h
-+++ b/include/linux/sysctl.h
+diff -urNp linux-2.6.17.4/include/linux/sysctl.h linux-2.6.17.4/include/linux/sysctl.h
+--- linux-2.6.17.4/include/linux/sysctl.h	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/include/linux/sysctl.h	2006-07-01 17:17:21.000000000 -0400
@@ -22404,4 +22099,3 @@
-diff --git a/init/Kconfig b/init/Kconfig
-index 3b36a1d536564e742d9d0b8d93f6db11d5a19c83..a663f0f7ba5d2510122a4055b0f9368b1a2a5c8a 100644
---- a/init/Kconfig
-+++ b/init/Kconfig
+diff -urNp linux-2.6.17.4/init/Kconfig linux-2.6.17.4/init/Kconfig
+--- linux-2.6.17.4/init/Kconfig	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/init/Kconfig	2006-07-01 15:39:05.000000000 -0400
@@ -22416,5 +22110,4 @@
-diff --git a/init/main.c b/init/main.c
-index f715b9b897538cb04dc94fa900bd8c3f5d6e26e7..bc7eef78bdb0fcb84ac3f539ed0c94f2ffe71fe9 100644
---- a/init/main.c
-+++ b/init/main.c
-@@ -100,6 +100,7 @@ static inline void mark_rodata_ro(void) { }
+diff -urNp linux-2.6.17.4/init/main.c linux-2.6.17.4/init/main.c
+--- linux-2.6.17.4/init/main.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/init/main.c	2006-07-01 15:39:05.000000000 -0400
+@@ -100,6 +100,7 @@ static inline void mark_rodata_ro(void) 
@@ -22453,4 +22146,3 @@
-diff --git a/ipc/msg.c b/ipc/msg.c
-index 7d1340ccb16b7d333cbbc9d1b2177943d3d63737..a240808fdf150fe93a0b470d678f1466fdb6078e 100644
---- a/ipc/msg.c
-+++ b/ipc/msg.c
+diff -urNp linux-2.6.17.4/ipc/msg.c linux-2.6.17.4/ipc/msg.c
+--- linux-2.6.17.4/ipc/msg.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/ipc/msg.c	2006-07-01 15:57:13.000000000 -0400
@@ -22465 +22157 @@
-@@ -237,6 +238,9 @@ asmlinkage long sys_msgget (key_t key, int msgflg)
+@@ -237,6 +238,9 @@ asmlinkage long sys_msgget (key_t key, i
@@ -22475 +22167 @@
-@@ -495,6 +499,8 @@ asmlinkage long sys_msgctl (int msqid, int cmd, struct msqid_ds __user *buf)
+@@ -495,6 +499,8 @@ asmlinkage long sys_msgctl (int msqid, i
@@ -22484,4 +22176,3 @@
-diff --git a/ipc/sem.c b/ipc/sem.c
-index 7919f8ece6bac8c89cd255b367fa8dfcb722fca5..1c53bcdeb80d781d3138774486ee5a69f8ca8517 100644
---- a/ipc/sem.c
-+++ b/ipc/sem.c
+diff -urNp linux-2.6.17.4/ipc/sem.c linux-2.6.17.4/ipc/sem.c
+--- linux-2.6.17.4/ipc/sem.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/ipc/sem.c	2006-07-01 15:58:48.000000000 -0400
@@ -22496 +22187 @@
-@@ -247,6 +248,9 @@ asmlinkage long sys_semget (key_t key, int nsems, int semflg)
+@@ -247,6 +248,9 @@ asmlinkage long sys_semget (key_t key, i
@@ -22506 +22197 @@
-@@ -840,6 +844,8 @@ static int semctl_down(int semid, int semnum, int cmd, int version, union semun
+@@ -840,6 +844,8 @@ static int semctl_down(int semid, int se
@@ -22515,4 +22206,3 @@
-diff --git a/ipc/shm.c b/ipc/shm.c
-index 8098968519026406191014b4cb64ee870e2a721c..62403c2c2e8d7991a40ea2fd476546be9050eadd 100644
---- a/ipc/shm.c
-+++ b/ipc/shm.c
+diff -urNp linux-2.6.17.4/ipc/shm.c linux-2.6.17.4/ipc/shm.c
+--- linux-2.6.17.4/ipc/shm.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/ipc/shm.c	2006-07-01 17:20:01.000000000 -0400
@@ -22527 +22217 @@
-@@ -56,6 +57,14 @@ static void shm_close (struct vm_area_struct *shmd);
+@@ -56,6 +57,14 @@ static void shm_close (struct vm_area_st
@@ -22542 +22232 @@
-@@ -149,6 +158,17 @@ static void shm_close (struct vm_area_struct *shmd)
+@@ -149,6 +158,17 @@ static void shm_close (struct vm_area_st
@@ -22560 +22250 @@
-@@ -248,6 +268,9 @@ static int newseg (key_t key, int shmflg, size_t size)
+@@ -248,6 +268,9 @@ static int newseg (key_t key, int shmflg
@@ -22570 +22260 @@
-@@ -302,6 +325,8 @@ asmlinkage long sys_shmget (key_t key, size_t size, int shmflg)
+@@ -302,6 +325,8 @@ asmlinkage long sys_shmget (key_t key, s
@@ -22579 +22269 @@
-@@ -615,6 +640,8 @@ asmlinkage long sys_shmctl (int shmid, int cmd, struct shmid_ds __user *buf)
+@@ -615,6 +640,8 @@ asmlinkage long sys_shmctl (int shmid, i
@@ -22588 +22278 @@
-@@ -763,9 +790,27 @@ long do_shmat(int shmid, char __user *shmaddr, int shmflg, ulong *raddr)
+@@ -763,9 +790,27 @@ long do_shmat(int shmid, char __user *sh
@@ -22616 +22306 @@
-@@ -935,3 +980,24 @@ static int sysvipc_shm_proc_show(struct seq_file *s, void *it)
+@@ -935,3 +980,24 @@ static int sysvipc_shm_proc_show(struct 
@@ -22641,4 +22331,3 @@
-diff --git a/kernel/capability.c b/kernel/capability.c
-index 1a4d8a40d3f9e120f204b59c060cd3e46232e70f..b5dd34a15f325532c778af8507f320873cc662a5 100644
---- a/kernel/capability.c
-+++ b/kernel/capability.c
+diff -urNp linux-2.6.17.4/kernel/capability.c linux-2.6.17.4/kernel/capability.c
+--- linux-2.6.17.4/kernel/capability.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/capability.c	2006-07-01 16:13:52.000000000 -0400
@@ -22685,4 +22374,3 @@
-diff --git a/kernel/configs.c b/kernel/configs.c
-index 009e1ebdcb88e57b62d64daafb4be1be9468a514..be936f4494c6eedd2870bb382b2fb87093ed2ad6 100644
---- a/kernel/configs.c
-+++ b/kernel/configs.c
+diff -urNp linux-2.6.17.4/kernel/configs.c linux-2.6.17.4/kernel/configs.c
+--- linux-2.6.17.4/kernel/configs.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/configs.c	2006-07-01 15:39:05.000000000 -0400
@@ -22706,4 +22394,3 @@
-diff --git a/kernel/exit.c b/kernel/exit.c
-index ccf791ba865be25407e8580d0ac05fe01eb2eaa9..f00252db2474ac295a3c14fd250947809bacd91b 100644
---- a/kernel/exit.c
-+++ b/kernel/exit.c
+diff -urNp linux-2.6.17.4/kernel/exit.c linux-2.6.17.4/kernel/exit.c
+--- linux-2.6.17.4/kernel/exit.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/exit.c	2006-07-01 18:18:30.000000000 -0400
@@ -22722 +22409 @@
-@@ -115,6 +120,7 @@ static void __exit_signal(struct task_struct *tsk)
+@@ -115,6 +120,7 @@ static void __exit_signal(struct task_st
@@ -22773 +22460 @@
-@@ -905,9 +933,14 @@ fastcall NORET_TYPE void do_exit(long code)
+@@ -905,9 +933,14 @@ fastcall NORET_TYPE void do_exit(long co
@@ -22788,4 +22475,3 @@
-diff --git a/kernel/fork.c b/kernel/fork.c
-index ac8100e3088a1f6d99d8ad640a70a3de5ec96e5e..a17da64066b33769518b67174b84cdb368ed2b5e 100644
---- a/kernel/fork.c
-+++ b/kernel/fork.c
+diff -urNp linux-2.6.17.4/kernel/fork.c linux-2.6.17.4/kernel/fork.c
+--- linux-2.6.17.4/kernel/fork.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/fork.c	2006-07-01 17:17:06.000000000 -0400
@@ -22800 +22486 @@
-@@ -198,8 +199,8 @@ static inline int dup_mmap(struct mm_struct *mm, struct mm_struct *oldmm)
+@@ -198,8 +199,8 @@ static inline int dup_mmap(struct mm_str
@@ -22811 +22497 @@
-@@ -324,7 +325,7 @@ static struct mm_struct * mm_init(struct mm_struct * mm)
+@@ -324,7 +325,7 @@ static struct mm_struct * mm_init(struct
@@ -22820 +22506 @@
-@@ -956,6 +957,9 @@ static task_t *copy_process(unsigned long clone_flags,
+@@ -956,6 +957,9 @@ static task_t *copy_process(unsigned lon
@@ -22830 +22516 @@
-@@ -1066,6 +1070,8 @@ static task_t *copy_process(unsigned long clone_flags,
+@@ -1066,6 +1070,8 @@ static task_t *copy_process(unsigned lon
@@ -22839 +22525 @@
-@@ -1192,6 +1198,8 @@ static task_t *copy_process(unsigned long clone_flags,
+@@ -1192,6 +1198,8 @@ static task_t *copy_process(unsigned lon
@@ -22857,5 +22543,4 @@
-diff --git a/kernel/futex.c b/kernel/futex.c
-index 5699c512057b087a14633b357a618d4528d4a032..f8e893a55ff4b0b369979620f055984e1675ffdf 100644
---- a/kernel/futex.c
-+++ b/kernel/futex.c
-@@ -151,6 +151,11 @@ static int get_futex_key(unsigned long uaddr, union futex_key *key)
+diff -urNp linux-2.6.17.4/kernel/futex.c linux-2.6.17.4/kernel/futex.c
+--- linux-2.6.17.4/kernel/futex.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/futex.c	2006-07-01 14:35:29.000000000 -0400
+@@ -151,6 +151,11 @@ static int get_futex_key(unsigned long u
@@ -22873,5 +22558,4 @@
-diff --git a/kernel/kallsyms.c b/kernel/kallsyms.c
-index 39277dd6bf90911916db77f2370e2db3a6e070f4..62c0a3e811933fec3ee2fe5261a3fa6868fe9468 100644
---- a/kernel/kallsyms.c
-+++ b/kernel/kallsyms.c
-@@ -301,7 +301,6 @@ static unsigned long get_ksymbol_core(struct kallsym_iter *iter)
+diff -urNp linux-2.6.17.4/kernel/kallsyms.c linux-2.6.17.4/kernel/kallsyms.c
+--- linux-2.6.17.4/kernel/kallsyms.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/kallsyms.c	2006-07-01 15:39:05.000000000 -0400
+@@ -301,7 +301,6 @@ static unsigned long get_ksymbol_core(st
@@ -22885 +22569 @@
-@@ -380,7 +379,7 @@ static int kallsyms_open(struct inode *inode, struct file *file)
+@@ -380,7 +379,7 @@ static int kallsyms_open(struct inode *i
@@ -22910,5 +22594,4 @@
-diff --git a/kernel/kprobes.c b/kernel/kprobes.c
-index 1fbf466a29aab6ca0dfe1cf6e5d6ac16fba546d8..a3330fbf8bed628173752f096d935776106e10d4 100644
---- a/kernel/kprobes.c
-+++ b/kernel/kprobes.c
-@@ -106,7 +106,7 @@ kprobe_opcode_t __kprobes *get_insn_slot(void)
+diff -urNp linux-2.6.17.4/kernel/kprobes.c linux-2.6.17.4/kernel/kprobes.c
+--- linux-2.6.17.4/kernel/kprobes.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/kprobes.c	2006-07-01 14:35:29.000000000 -0400
+@@ -106,7 +106,7 @@ kprobe_opcode_t __kprobes *get_insn_slot
@@ -22923,4 +22606,3 @@
-diff --git a/kernel/module.c b/kernel/module.c
-index bbe04862e1b09113dd12dd49749f551cd9fbeecf..38bf7358844018338d20b0aa5af4417273a64a41 100644
---- a/kernel/module.c
-+++ b/kernel/module.c
+diff -urNp linux-2.6.17.4/kernel/module.c linux-2.6.17.4/kernel/module.c
+--- linux-2.6.17.4/kernel/module.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/module.c	2006-07-01 15:39:05.000000000 -0400
@@ -22952 +22634 @@
-@@ -594,6 +601,9 @@ sys_delete_module(const char __user *name_user, unsigned int flags)
+@@ -594,6 +601,9 @@ sys_delete_module(const char __user *nam
@@ -22962 +22644 @@
-@@ -1058,13 +1068,15 @@ static void free_module(struct module *mod)
+@@ -1058,13 +1068,15 @@ static void free_module(struct module *m
@@ -22980 +22662 @@
-@@ -1221,11 +1233,14 @@ static void layout_sections(struct module *mod,
+@@ -1221,11 +1233,14 @@ static void layout_sections(struct modul
@@ -22997 +22679 @@
-@@ -1239,12 +1254,15 @@ static void layout_sections(struct module *mod,
+@@ -1239,12 +1254,15 @@ static void layout_sections(struct modul
@@ -23016 +22698 @@
-@@ -1419,6 +1437,10 @@ static struct module *load_module(void __user *umod,
+@@ -1419,6 +1437,10 @@ static struct module *load_module(void _
@@ -23027 +22709 @@
-@@ -1568,21 +1590,57 @@ static struct module *load_module(void __user *umod,
+@@ -1568,21 +1590,57 @@ static struct module *load_module(void _
@@ -23041,3 +22723 @@
- 
--	ptr = module_alloc(mod->init_size);
--	if (!ptr && mod->init_size) {
++
@@ -23046,2 +22726 @@
- 		err = -ENOMEM;
--		goto free_core;
++		err = -ENOMEM;
@@ -23049,3 +22728 @@
- 	}
--	memset(ptr, 0, mod->init_size);
--	mod->module_init = ptr;
++	}
@@ -23072 +22749,3 @@
-+
+ 
+-	ptr = module_alloc(mod->init_size);
+-	if (!ptr && mod->init_size) {
@@ -23075 +22754,2 @@
-+		err = -ENOMEM;
+ 		err = -ENOMEM;
+-		goto free_core;
@@ -23077 +22757,3 @@
-+	}
+ 	}
+-	memset(ptr, 0, mod->init_size);
+-	mod->module_init = ptr;
@@ -23093 +22775 @@
-@@ -1592,17 +1650,44 @@ static struct module *load_module(void __user *umod,
+@@ -1592,17 +1650,44 @@ static struct module *load_module(void _
@@ -23102,4 +22783,0 @@
--
--		if (sechdrs[i].sh_type != SHT_NOBITS)
--			memcpy(dest, (void *)sechdrs[i].sh_addr,
--			       sechdrs[i].sh_size);
@@ -23128 +22806,4 @@
-+
+ 
+-		if (sechdrs[i].sh_type != SHT_NOBITS)
+-			memcpy(dest, (void *)sechdrs[i].sh_addr,
+-			       sechdrs[i].sh_size);
@@ -23148 +22829 @@
-@@ -1623,8 +1708,18 @@ static struct module *load_module(void __user *umod,
+@@ -1623,8 +1708,18 @@ static struct module *load_module(void _
@@ -23167 +22848 @@
-@@ -1666,11 +1761,20 @@ static struct module *load_module(void __user *umod,
+@@ -1666,11 +1761,20 @@ static struct module *load_module(void _
@@ -23188 +22869 @@
-@@ -1684,14 +1788,31 @@ static struct module *load_module(void __user *umod,
+@@ -1684,14 +1788,31 @@ static struct module *load_module(void _
@@ -23220 +22901 @@
-@@ -1705,12 +1826,12 @@ static struct module *load_module(void __user *umod,
+@@ -1705,12 +1826,12 @@ static struct module *load_module(void _
@@ -23239 +22920 @@
-@@ -1748,9 +1869,13 @@ static struct module *load_module(void __user *umod,
+@@ -1748,9 +1869,13 @@ static struct module *load_module(void _
@@ -23283 +22964 @@
-@@ -1870,10 +2000,14 @@ static const char *get_ksymbol(struct module *mod,
+@@ -1870,10 +2000,14 @@ static const char *get_ksymbol(struct mo
@@ -23302 +22983 @@
-@@ -1914,8 +2048,10 @@ const char *module_address_lookup(unsigned long addr,
+@@ -1914,8 +2048,10 @@ const char *module_address_lookup(unsign
@@ -23315 +22996 @@
-@@ -1926,7 +2062,7 @@ const char *module_address_lookup(unsigned long addr,
+@@ -1926,7 +2062,7 @@ const char *module_address_lookup(unsign
@@ -23324 +23005 @@
-@@ -1937,7 +2073,7 @@ struct module *module_get_kallsym(unsigned int symnum,
+@@ -1937,7 +2073,7 @@ struct module *module_get_kallsym(unsign
@@ -23333 +23014 @@
-@@ -2014,7 +2150,7 @@ static int m_show(struct seq_file *m, void *p)
+@@ -2014,7 +2150,7 @@ static int m_show(struct seq_file *m, vo
@@ -23342 +23023 @@
-@@ -2023,7 +2159,7 @@ static int m_show(struct seq_file *m, void *p)
+@@ -2023,7 +2159,7 @@ static int m_show(struct seq_file *m, vo
@@ -23351 +23032 @@
-@@ -2071,9 +2207,13 @@ struct module *__module_text_address(unsigned long addr)
+@@ -2071,9 +2207,13 @@ struct module *__module_text_address(uns
@@ -23367,4 +23048,3 @@
-diff --git a/kernel/pid.c b/kernel/pid.c
-index eeb836b65ca4ec887e6dc83c73e73004ac066978..1a88c7e5efc3396539ae677269b2b3478be37ab7 100644
---- a/kernel/pid.c
-+++ b/kernel/pid.c
+diff -urNp linux-2.6.17.4/kernel/pid.c linux-2.6.17.4/kernel/pid.c
+--- linux-2.6.17.4/kernel/pid.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/pid.c	2006-07-01 16:26:41.000000000 -0400
@@ -23390 +23070 @@
-@@ -269,7 +272,14 @@ struct task_struct * fastcall pid_task(struct pid *pid, enum pid_type type)
+@@ -269,7 +272,14 @@ struct task_struct * fastcall pid_task(s
@@ -23406,4 +23086,3 @@
-diff --git a/kernel/posix-cpu-timers.c b/kernel/posix-cpu-timers.c
-index d38d9ec3276c3069c1259744496e9d2a05fef117..4da2094a01f79ddd23d1e0f5d1b7414557688e25 100644
---- a/kernel/posix-cpu-timers.c
-+++ b/kernel/posix-cpu-timers.c
+diff -urNp linux-2.6.17.4/kernel/posix-cpu-timers.c linux-2.6.17.4/kernel/posix-cpu-timers.c
+--- linux-2.6.17.4/kernel/posix-cpu-timers.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/posix-cpu-timers.c	2006-07-01 15:39:05.000000000 -0400
@@ -23418 +23097 @@
-@@ -1125,6 +1126,7 @@ static void check_process_timers(struct task_struct *tsk,
+@@ -1125,6 +1126,7 @@ static void check_process_timers(struct 
@@ -23426,4 +23105,3 @@
-diff --git a/kernel/printk.c b/kernel/printk.c
-index c056f3324432c31152063de1ca820fbcd2f3d92a..9a7a5801295de01a907238deeda892fcd65d0284 100644
---- a/kernel/printk.c
-+++ b/kernel/printk.c
+diff -urNp linux-2.6.17.4/kernel/printk.c linux-2.6.17.4/kernel/printk.c
+--- linux-2.6.17.4/kernel/printk.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/printk.c	2006-07-01 15:39:05.000000000 -0400
@@ -23438 +23116 @@
-@@ -185,6 +186,11 @@ int do_syslog(int type, char __user *buf, int len)
+@@ -185,6 +186,11 @@ int do_syslog(int type, char __user *buf
@@ -23450,4 +23128,3 @@
-diff --git a/kernel/ptrace.c b/kernel/ptrace.c
-index 921c22ad16e40e898b2cdceda7db6ea13babb36f..9d837741991c5169bccb1c84ba20e4f22731f50e 100644
---- a/kernel/ptrace.c
-+++ b/kernel/ptrace.c
+diff -urNp linux-2.6.17.4/kernel/ptrace.c linux-2.6.17.4/kernel/ptrace.c
+--- linux-2.6.17.4/kernel/ptrace.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/ptrace.c	2006-07-01 15:39:05.000000000 -0400
@@ -23462 +23139 @@
-@@ -127,10 +128,10 @@ static int may_attach(struct task_struct *task)
+@@ -127,10 +128,10 @@ static int may_attach(struct task_struct
@@ -23475 +23152 @@
-@@ -515,6 +516,11 @@ asmlinkage long sys_ptrace(long request, long pid, long addr, long data)
+@@ -515,6 +516,11 @@ asmlinkage long sys_ptrace(long request,
@@ -23487,4 +23164,3 @@
-diff --git a/kernel/resource.c b/kernel/resource.c
-index e3080fcc66a3b1237e30326782eed2a8fd184323..02d16405e5f834afc429896ab4a59ecc5d4a421b 100644
---- a/kernel/resource.c
-+++ b/kernel/resource.c
+diff -urNp linux-2.6.17.4/kernel/resource.c linux-2.6.17.4/kernel/resource.c
+--- linux-2.6.17.4/kernel/resource.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/resource.c	2006-07-01 15:39:05.000000000 -0400
@@ -23519,4 +23195,3 @@
-diff --git a/kernel/sched.c b/kernel/sched.c
-index c13f1bd2df7d3cd483c47fd76a8163d90ed3cd44..402335eceb4c0f27956765c55cb10a630837a419 100644
---- a/kernel/sched.c
-+++ b/kernel/sched.c
+diff -urNp linux-2.6.17.4/kernel/sched.c linux-2.6.17.4/kernel/sched.c
+--- linux-2.6.17.4/kernel/sched.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/sched.c	2006-07-01 16:15:48.000000000 -0400
@@ -23541,4 +23216,3 @@
-diff --git a/kernel/signal.c b/kernel/signal.c
-index e5f8aea78ffebd71a1322ca8279321aac3b077e6..c6ba7fd5f34537bf1b7abb85848c0137eeaad342 100644
---- a/kernel/signal.c
-+++ b/kernel/signal.c
+diff -urNp linux-2.6.17.4/kernel/signal.c linux-2.6.17.4/kernel/signal.c
+--- linux-2.6.17.4/kernel/signal.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/signal.c	2006-07-01 15:39:05.000000000 -0400
@@ -23553 +23227 @@
-@@ -577,16 +578,18 @@ static int check_kill_permission(int sig, struct siginfo *info,
+@@ -577,16 +578,18 @@ static int check_kill_permission(int sig
@@ -23584 +23258 @@
-@@ -809,6 +812,10 @@ force_sig_info(int sig, struct siginfo *info, struct task_struct *t)
+@@ -809,6 +812,10 @@ force_sig_info(int sig, struct siginfo *
@@ -23595,4 +23269,3 @@
-diff --git a/kernel/sys.c b/kernel/sys.c
-index 59273f7631b737330b5be1cfebe55f4662c23f47..233bd3aa58f4609b42bbce133d810ce99f9f10ef 100644
---- a/kernel/sys.c
-+++ b/kernel/sys.c
+diff -urNp linux-2.6.17.4/kernel/sys.c linux-2.6.17.4/kernel/sys.c
+--- linux-2.6.17.4/kernel/sys.c	2006-07-01 19:07:27.000000000 -0400
++++ linux-2.6.17.4/kernel/sys.c	2006-07-01 19:07:41.000000000 -0400
@@ -23607 +23280 @@
-@@ -442,6 +443,12 @@ static int set_one_prio(struct task_struct *p, int niceval, int error)
+@@ -442,6 +443,12 @@ static int set_one_prio(struct task_stru
@@ -23620 +23293 @@
-@@ -831,6 +838,9 @@ asmlinkage long sys_setregid(gid_t rgid, gid_t egid)
+@@ -831,6 +838,9 @@ asmlinkage long sys_setregid(gid_t rgid,
@@ -23640 +23313 @@
-@@ -901,6 +914,9 @@ static int set_user(uid_t new_ruid, int dumpclear)
+@@ -901,6 +914,9 @@ static int set_user(uid_t new_ruid, int 
@@ -23660 +23333 @@
-@@ -1109,8 +1128,10 @@ asmlinkage long sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid)
+@@ -1109,8 +1128,10 @@ asmlinkage long sys_setresgid(gid_t rgid
@@ -23672,5 +23345,4 @@
-diff --git a/kernel/sysctl.c b/kernel/sysctl.c
-index e82726faeeffb4850cc49cc6e112cf28b143d4cb..6d64188ee6b8806c63f932c4ce1ea556b29296b8 100644
---- a/kernel/sysctl.c
-+++ b/kernel/sysctl.c
-@@ -54,6 +54,14 @@ extern int proc_nr_files(ctl_table *table, int write, struct file *filp,
+diff -urNp linux-2.6.17.4/kernel/sysctl.c linux-2.6.17.4/kernel/sysctl.c
+--- linux-2.6.17.4/kernel/sysctl.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/sysctl.c	2006-07-01 18:27:47.000000000 -0400
+@@ -54,6 +54,14 @@ extern int proc_nr_files(ctl_table *tabl
@@ -23761,4 +23433,3 @@
-diff --git a/kernel/time.c b/kernel/time.c
-index b00ddc71cedb860f5793978a13868e4de5862f0f..8b5a4635eca32af805343a17a530a2b3769bf0ba 100644
---- a/kernel/time.c
-+++ b/kernel/time.c
+diff -urNp linux-2.6.17.4/kernel/time.c linux-2.6.17.4/kernel/time.c
+--- linux-2.6.17.4/kernel/time.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/kernel/time.c	2006-07-01 15:39:05.000000000 -0400
@@ -23773 +23444 @@
-@@ -93,6 +94,9 @@ asmlinkage long sys_stime(time_t __user *tptr)
+@@ -93,6 +94,9 @@ asmlinkage long sys_stime(time_t __user 
@@ -23783 +23454 @@
-@@ -199,6 +203,8 @@ asmlinkage long sys_settimeofday(struct timeval __user *tv,
+@@ -199,6 +203,8 @@ asmlinkage long sys_settimeofday(struct 
@@ -23792,5 +23463,3 @@
-diff --git a/localversion-grsec b/localversion-grsec
-new file mode 100644
-index 0000000000000000000000000000000000000000..7cd6065beb8d6e5457afdf0c5f79c1ca740fcb7e
---- /dev/null
-+++ b/localversion-grsec
+diff -urNp linux-2.6.17.4/localversion-grsec linux-2.6.17.4/localversion-grsec
+--- linux-2.6.17.4/localversion-grsec	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/localversion-grsec	2006-07-01 15:39:05.000000000 -0400
@@ -23799,4 +23468,15 @@
-diff --git a/mm/filemap.c b/mm/filemap.c
-index fd57442186cbec1b55654639415af850ba352a2f..850c38f86ff0ac22e05c34c9484c4adb20c366a5 100644
---- a/mm/filemap.c
-+++ b/mm/filemap.c
+diff -urNp linux-2.6.17.4/Makefile linux-2.6.17.4/Makefile
+--- linux-2.6.17.4/Makefile	2006-07-01 19:07:27.000000000 -0400
++++ linux-2.6.17.4/Makefile	2006-07-01 19:07:41.000000000 -0400
+@@ -518,7 +518,7 @@ export MODLIB
+ 
+ 
+ ifeq ($(KBUILD_EXTMOD),)
+-core-y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/
++core-y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/ grsecurity/
+ 
+ vmlinux-dirs	:= $(patsubst %/,%,$(filter %/, $(init-y) $(init-m) \
+ 		     $(core-y) $(core-m) $(drivers-y) $(drivers-m) \
+diff -urNp linux-2.6.17.4/mm/filemap.c linux-2.6.17.4/mm/filemap.c
+--- linux-2.6.17.4/mm/filemap.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/filemap.c	2006-07-01 15:59:49.000000000 -0400
@@ -23811 +23491 @@
-@@ -1650,7 +1651,13 @@ int generic_file_mmap(struct file * file, struct vm_area_struct * vma)
+@@ -1650,7 +1651,13 @@ int generic_file_mmap(struct file * file
@@ -23826 +23506 @@
-@@ -1872,6 +1879,7 @@ inline int generic_write_checks(struct file *file, loff_t *pos, size_t *count, i
+@@ -1872,6 +1879,7 @@ inline int generic_write_checks(struct f
@@ -23834,4 +23514,3 @@
-diff --git a/mm/madvise.c b/mm/madvise.c
-index 4e196155a0c3635801bd0f8dcff0b18ce1bbcf37..7b7a4b20fccb137d4b69b12668bcda3c7369d0c1 100644
---- a/mm/madvise.c
-+++ b/mm/madvise.c
+diff -urNp linux-2.6.17.4/mm/madvise.c linux-2.6.17.4/mm/madvise.c
+--- linux-2.6.17.4/mm/madvise.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/madvise.c	2006-07-01 14:35:29.000000000 -0400
@@ -23885,4 +23564,3 @@
-diff --git a/mm/memory.c b/mm/memory.c
-index 0ec7bc644271cf6ee2b88b7d32cc7987c5ea6dc6..f2fe054d09ebb216b68172c18a1f729ee7705484 100644
---- a/mm/memory.c
-+++ b/mm/memory.c
+diff -urNp linux-2.6.17.4/mm/memory.c linux-2.6.17.4/mm/memory.c
+--- linux-2.6.17.4/mm/memory.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/memory.c	2006-07-01 15:39:05.000000000 -0400
@@ -23897 +23575 @@
-@@ -320,6 +321,11 @@ int __pte_alloc(struct mm_struct *mm, pmd_t *pmd, unsigned long address)
+@@ -320,6 +321,11 @@ int __pte_alloc(struct mm_struct *mm, pm
@@ -23909 +23587 @@
-@@ -327,8 +333,19 @@ int __pte_alloc_kernel(pmd_t *pmd, unsigned long address)
+@@ -327,8 +333,19 @@ int __pte_alloc_kernel(pmd_t *pmd, unsig
@@ -23930 +23608 @@
-@@ -1421,6 +1438,88 @@ static inline void cow_user_page(struct page *dst, struct page *src, unsigned lo
+@@ -1421,6 +1438,88 @@ static inline void cow_user_page(struct 
@@ -24032 +23710 @@
-@@ -1761,6 +1866,7 @@ int vmtruncate(struct inode * inode, loff_t offset)
+@@ -1761,6 +1866,7 @@ int vmtruncate(struct inode * inode, lof
@@ -24053 +23731 @@
-@@ -2012,6 +2124,12 @@ static int do_anonymous_page(struct mm_struct *mm, struct vm_area_struct *vma,
+@@ -2012,6 +2124,12 @@ static int do_anonymous_page(struct mm_s
@@ -24079 +23757 @@
-@@ -2246,6 +2370,12 @@ static inline int handle_pte_fault(struct mm_struct *mm,
+@@ -2246,6 +2370,12 @@ static inline int handle_pte_fault(struc
@@ -24092 +23770 @@
-@@ -2268,6 +2398,49 @@ int __handle_mm_fault(struct mm_struct *mm, struct vm_area_struct *vma,
+@@ -2268,6 +2398,49 @@ int __handle_mm_fault(struct mm_struct *
@@ -24142,5 +23820,4 @@
-diff --git a/mm/mempolicy.c b/mm/mempolicy.c
-index 8778f58880c41c55cab9a2de035e960379b0cfe4..5d280b41988a1af04e3818a48afe21ce7e4df991 100644
---- a/mm/mempolicy.c
-+++ b/mm/mempolicy.c
-@@ -346,6 +346,12 @@ check_range(struct mm_struct *mm, unsigned long start, unsigned long end,
+diff -urNp linux-2.6.17.4/mm/mempolicy.c linux-2.6.17.4/mm/mempolicy.c
+--- linux-2.6.17.4/mm/mempolicy.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/mempolicy.c	2006-07-01 14:35:29.000000000 -0400
+@@ -346,6 +346,12 @@ check_range(struct mm_struct *mm, unsign
@@ -24159,4 +23836,3 @@
-diff --git a/mm/mlock.c b/mm/mlock.c
-index b90c59573abf5da8bd00dcc7b224796ce66befc5..4bc81cf925b8c9ce8d0a03e32324bc0ce5ea7169 100644
---- a/mm/mlock.c
-+++ b/mm/mlock.c
+diff -urNp linux-2.6.17.4/mm/mlock.c linux-2.6.17.4/mm/mlock.c
+--- linux-2.6.17.4/mm/mlock.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/mlock.c	2006-07-01 15:39:05.000000000 -0400
@@ -24250 +23926 @@
-@@ -30,7 +101,7 @@ static int mlock_fixup(struct vm_area_struct *vma, struct vm_area_struct **prev,
+@@ -30,7 +101,7 @@ static int mlock_fixup(struct vm_area_st
@@ -24259 +23935 @@
-@@ -41,31 +112,9 @@ static int mlock_fixup(struct vm_area_struct *vma, struct vm_area_struct **prev,
+@@ -41,31 +112,9 @@ static int mlock_fixup(struct vm_area_st
@@ -24292 +23968 @@
-@@ -84,6 +133,17 @@ static int do_mlock(unsigned long start, size_t len, int on)
+@@ -84,6 +133,17 @@ static int do_mlock(unsigned long start,
@@ -24310 +23986 @@
-@@ -141,6 +201,7 @@ asmlinkage long sys_mlock(unsigned long start, size_t len)
+@@ -141,6 +201,7 @@ asmlinkage long sys_mlock(unsigned long 
@@ -24343,4 +24019,3 @@
-diff --git a/mm/mmap.c b/mm/mmap.c
-index e6ee12344b139274325a1db834da1de6cf334da1..53654fa6b20cb96ce2f0a7eef69b1f9c88fa9de7 100644
---- a/mm/mmap.c
-+++ b/mm/mmap.c
+diff -urNp linux-2.6.17.4/mm/mmap.c linux-2.6.17.4/mm/mmap.c
+--- linux-2.6.17.4/mm/mmap.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/mmap.c	2006-07-01 15:39:05.000000000 -0400
@@ -24364 +24039 @@
-@@ -240,6 +243,7 @@ asmlinkage unsigned long sys_brk(unsigned long brk)
+@@ -240,6 +243,7 @@ asmlinkage unsigned long sys_brk(unsigne
@@ -24372 +24047 @@
-@@ -628,11 +632,17 @@ again:			remove_next = 1 + (end > next->vm_end);
+@@ -628,11 +632,17 @@ again:			remove_next = 1 + (end > next->
@@ -24406 +24081 @@
-@@ -875,9 +882,54 @@ void vm_stat_account(struct mm_struct *mm, unsigned long flags,
+@@ -875,10 +882,55 @@ void vm_stat_account(struct mm_struct *m
@@ -24412,7 +24087,7 @@
-+			unsigned long len, unsigned long prot,
-+			unsigned long flags, unsigned long pgoff);
-+
-+unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
-+			unsigned long len, unsigned long prot,
-+			unsigned long flags, unsigned long pgoff)
-+{
++			unsigned long len, unsigned long prot,
++			unsigned long flags, unsigned long pgoff);
++
+ unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
+ 			unsigned long len, unsigned long prot,
+ 			unsigned long flags, unsigned long pgoff)
+ {
@@ -24454,3 +24129,3 @@
- unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
- 			unsigned long len, unsigned long prot,
- 			unsigned long flags, unsigned long pgoff)
++unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
++			unsigned long len, unsigned long prot,
++			unsigned long flags, unsigned long pgoff)
@@ -24458 +24133 @@
- {
++{
@@ -24461 +24136,2 @@
-@@ -889,6 +941,28 @@ unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
+ 	struct inode *inode;
+@@ -889,6 +941,28 @@ unsigned long do_mmap_pgoff(struct file 
@@ -24490 +24166 @@
-@@ -929,7 +1003,7 @@ unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
+@@ -929,7 +1003,7 @@ unsigned long do_mmap_pgoff(struct file 
@@ -24499 +24175 @@
-@@ -940,6 +1014,24 @@ unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
+@@ -940,6 +1014,24 @@ unsigned long do_mmap_pgoff(struct file 
@@ -24524 +24200 @@
-@@ -952,6 +1044,7 @@ unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
+@@ -952,6 +1044,7 @@ unsigned long do_mmap_pgoff(struct file 
@@ -24532 +24208 @@
-@@ -999,6 +1092,11 @@ unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
+@@ -999,6 +1092,11 @@ unsigned long do_mmap_pgoff(struct file 
@@ -24544 +24220 @@
-@@ -1010,14 +1108,17 @@ unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
+@@ -1010,14 +1108,17 @@ unsigned long do_mmap_pgoff(struct file 
@@ -24601 +24277 @@
-@@ -1178,6 +1295,10 @@ arch_get_unmapped_area(struct file *filp, unsigned long addr,
+@@ -1178,6 +1295,10 @@ arch_get_unmapped_area(struct file *filp
@@ -24612 +24288 @@
-@@ -1188,7 +1309,7 @@ arch_get_unmapped_area(struct file *filp, unsigned long addr,
+@@ -1188,7 +1309,7 @@ arch_get_unmapped_area(struct file *filp
@@ -24633 +24309 @@
-@@ -1227,7 +1347,7 @@ void arch_unmap_area(struct mm_struct *mm, unsigned long addr)
+@@ -1227,7 +1347,7 @@ void arch_unmap_area(struct mm_struct *m
@@ -24642 +24318 @@
-@@ -1245,12 +1365,16 @@ arch_get_unmapped_area_topdown(struct file *filp, const unsigned long addr0,
+@@ -1245,12 +1365,16 @@ arch_get_unmapped_area_topdown(struct fi
@@ -24684 +24360 @@
-@@ -1330,8 +1462,10 @@ void arch_unmap_area_topdown(struct mm_struct *mm, unsigned long addr)
+@@ -1330,8 +1462,10 @@ void arch_unmap_area_topdown(struct mm_s
@@ -24696 +24372 @@
-@@ -1464,6 +1598,7 @@ static int acct_stack_growth(struct vm_area_struct * vma, unsigned long size, un
+@@ -1464,6 +1598,7 @@ static int acct_stack_growth(struct vm_a
@@ -24704 +24380 @@
-@@ -1473,6 +1608,7 @@ static int acct_stack_growth(struct vm_area_struct * vma, unsigned long size, un
+@@ -1473,6 +1608,7 @@ static int acct_stack_growth(struct vm_a
@@ -24712 +24388 @@
-@@ -1590,13 +1726,49 @@ int expand_stack(struct vm_area_struct *vma, unsigned long address)
+@@ -1590,13 +1726,49 @@ int expand_stack(struct vm_area_struct *
@@ -24762 +24438 @@
-@@ -1758,8 +1930,25 @@ int split_vma(struct mm_struct * mm, struct vm_area_struct * vma,
+@@ -1758,7 +1930,24 @@ int split_vma(struct mm_struct * mm, str
@@ -24769,2 +24445,2 @@
- int do_munmap(struct mm_struct *mm, unsigned long start, size_t len)
- {
++int do_munmap(struct mm_struct *mm, unsigned long start, size_t len)
++{
@@ -24782 +24458 @@
-+int do_munmap(struct mm_struct *mm, unsigned long start, size_t len)
+ int do_munmap(struct mm_struct *mm, unsigned long start, size_t len)
@@ -24784 +24460 @@
-+{
+ {
@@ -24787,2 +24463 @@
- 
-@@ -1812,6 +2001,8 @@ int do_munmap(struct mm_struct *mm, unsigned long start, size_t len)
+@@ -1812,6 +2001,8 @@ int do_munmap(struct mm_struct *mm, unsi
@@ -24797 +24472 @@
-@@ -1824,6 +2015,12 @@ asmlinkage long sys_munmap(unsigned long addr, size_t len)
+@@ -1824,6 +2015,12 @@ asmlinkage long sys_munmap(unsigned long
@@ -24810 +24485 @@
-@@ -1845,11 +2042,35 @@ static inline void verify_mm_writelocked(struct mm_struct *mm)
+@@ -1845,11 +2042,35 @@ static inline void verify_mm_writelocked
@@ -24847 +24522 @@
-@@ -1857,7 +2078,12 @@ unsigned long do_brk(unsigned long addr, unsigned long len)
+@@ -1857,7 +2078,12 @@ unsigned long do_brk(unsigned long addr,
@@ -24861 +24536 @@
-@@ -1869,6 +2095,7 @@ unsigned long do_brk(unsigned long addr, unsigned long len)
+@@ -1869,6 +2095,7 @@ unsigned long do_brk(unsigned long addr,
@@ -24869 +24544 @@
-@@ -1882,12 +2109,12 @@ unsigned long do_brk(unsigned long addr, unsigned long len)
+@@ -1882,12 +2109,12 @@ unsigned long do_brk(unsigned long addr,
@@ -24884 +24559 @@
-@@ -1902,6 +2129,18 @@ unsigned long do_brk(unsigned long addr, unsigned long len)
+@@ -1902,6 +2129,18 @@ unsigned long do_brk(unsigned long addr,
@@ -24903 +24578 @@
-@@ -1921,6 +2160,13 @@ unsigned long do_brk(unsigned long addr, unsigned long len)
+@@ -1921,6 +2160,13 @@ unsigned long do_brk(unsigned long addr,
@@ -24925 +24600 @@
-@@ -2061,7 +2308,7 @@ int may_expand_vm(struct mm_struct *mm, unsigned long npages)
+@@ -2061,7 +2308,7 @@ int may_expand_vm(struct mm_struct *mm, 
@@ -24934,4 +24609,3 @@
-diff --git a/mm/mprotect.c b/mm/mprotect.c
-index 4c14d4289b61a69406140bfa9d0e1cf5919d99c7..30ea2bb0a10a4b28f8ad20ea379f2dfcd244b76c 100644
---- a/mm/mprotect.c
-+++ b/mm/mprotect.c
+diff -urNp linux-2.6.17.4/mm/mprotect.c linux-2.6.17.4/mm/mprotect.c
+--- linux-2.6.17.4/mm/mprotect.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/mprotect.c	2006-07-01 16:02:13.000000000 -0400
@@ -24957 +24631 @@
-@@ -98,6 +105,94 @@ static void change_protection(struct vm_area_struct *vma,
+@@ -98,6 +105,94 @@ static void change_protection(struct vm_
@@ -25052 +24726 @@
-@@ -114,6 +209,7 @@ mprotect_fixup(struct vm_area_struct *vma, struct vm_area_struct **pprev,
+@@ -114,6 +209,7 @@ mprotect_fixup(struct vm_area_struct *vm
@@ -25060 +24734 @@
-@@ -132,6 +228,12 @@ mprotect_fixup(struct vm_area_struct *vma, struct vm_area_struct **pprev,
+@@ -132,6 +228,12 @@ mprotect_fixup(struct vm_area_struct *vm
@@ -25143 +24817 @@
-@@ -198,6 +363,17 @@ sys_mprotect(unsigned long start, size_t len, unsigned long prot)
+@@ -198,6 +363,17 @@ sys_mprotect(unsigned long start, size_t
@@ -25161 +24835 @@
-@@ -238,6 +414,16 @@ sys_mprotect(unsigned long start, size_t len, unsigned long prot)
+@@ -238,6 +414,16 @@ sys_mprotect(unsigned long start, size_t
@@ -25178 +24852 @@
-@@ -251,6 +437,12 @@ sys_mprotect(unsigned long start, size_t len, unsigned long prot)
+@@ -251,6 +437,12 @@ sys_mprotect(unsigned long start, size_t
@@ -25191 +24865 @@
-@@ -274,6 +466,9 @@ sys_mprotect(unsigned long start, size_t len, unsigned long prot)
+@@ -274,6 +466,9 @@ sys_mprotect(unsigned long start, size_t
@@ -25201,5 +24875,4 @@
-diff --git a/mm/mremap.c b/mm/mremap.c
-index 1903bdf65e428d88e5bf124243d99ee7ab7c51e3..912564428179bbf840a5b7e14365fc8cb6361a88 100644
---- a/mm/mremap.c
-+++ b/mm/mremap.c
-@@ -106,6 +106,12 @@ static void move_ptes(struct vm_area_struct *vma, pmd_t *old_pmd,
+diff -urNp linux-2.6.17.4/mm/mremap.c linux-2.6.17.4/mm/mremap.c
+--- linux-2.6.17.4/mm/mremap.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/mremap.c	2006-07-01 14:35:30.000000000 -0400
+@@ -106,6 +106,12 @@ static void move_ptes(struct vm_area_str
@@ -25218 +24891 @@
-@@ -253,6 +259,7 @@ unsigned long do_mremap(unsigned long addr,
+@@ -253,6 +259,7 @@ unsigned long do_mremap(unsigned long ad
@@ -25226 +24899 @@
-@@ -271,6 +278,15 @@ unsigned long do_mremap(unsigned long addr,
+@@ -271,6 +278,15 @@ unsigned long do_mremap(unsigned long ad
@@ -25242 +24915 @@
-@@ -278,16 +294,13 @@ unsigned long do_mremap(unsigned long addr,
+@@ -278,16 +294,13 @@ unsigned long do_mremap(unsigned long ad
@@ -25261 +24934 @@
-@@ -321,6 +334,14 @@ unsigned long do_mremap(unsigned long addr,
+@@ -321,6 +334,14 @@ unsigned long do_mremap(unsigned long ad
@@ -25276 +24949 @@
-@@ -354,7 +375,7 @@ unsigned long do_mremap(unsigned long addr,
+@@ -354,7 +375,7 @@ unsigned long do_mremap(unsigned long ad
@@ -25285 +24958 @@
-@@ -372,6 +393,7 @@ unsigned long do_mremap(unsigned long addr,
+@@ -372,6 +393,7 @@ unsigned long do_mremap(unsigned long ad
@@ -25293 +24966 @@
-@@ -382,8 +404,8 @@ unsigned long do_mremap(unsigned long addr,
+@@ -382,8 +404,8 @@ unsigned long do_mremap(unsigned long ad
@@ -25303 +24976 @@
-@@ -393,7 +415,12 @@ unsigned long do_mremap(unsigned long addr,
+@@ -393,7 +415,12 @@ unsigned long do_mremap(unsigned long ad
@@ -25316,5 +24989,4 @@
-diff --git a/mm/page_alloc.c b/mm/page_alloc.c
-index 253a450c400df06898de5d864ff2c8863c560043..62b22cd93df70985a8ebcf97a5e4ed904a6e3b1f 100644
---- a/mm/page_alloc.c
-+++ b/mm/page_alloc.c
-@@ -334,7 +334,7 @@ static inline int page_is_buddy(struct page *page, int order)
+diff -urNp linux-2.6.17.4/mm/page_alloc.c linux-2.6.17.4/mm/page_alloc.c
+--- linux-2.6.17.4/mm/page_alloc.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/page_alloc.c	2006-07-01 14:35:30.000000000 -0400
+@@ -334,7 +334,7 @@ static inline int page_is_buddy(struct p
@@ -25329 +25001 @@
-@@ -345,6 +345,11 @@ static inline void __free_one_page(struct page *page,
+@@ -345,6 +345,11 @@ static inline void __free_one_page(struc
@@ -25341,5 +25013,4 @@
-diff --git a/mm/rmap.c b/mm/rmap.c
-index 1963e269314dcabae535545b978f7a544b7e96e5..7e31a5fbf14b47af5415a4409649a4a4c8cca0c2 100644
---- a/mm/rmap.c
-+++ b/mm/rmap.c
-@@ -106,6 +106,19 @@ int anon_vma_prepare(struct vm_area_struct *vma)
+diff -urNp linux-2.6.17.4/mm/rmap.c linux-2.6.17.4/mm/rmap.c
+--- linux-2.6.17.4/mm/rmap.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/rmap.c	2006-07-01 14:35:30.000000000 -0400
+@@ -106,6 +106,19 @@ int anon_vma_prepare(struct vm_area_stru
@@ -25365,5 +25036,4 @@
-diff --git a/mm/shmem.c b/mm/shmem.c
-index 1e43c8a865ba76924170f34471f32ad5a3cbdfdb..0f0451f9142b9f7d19de4982d0cd9418399eb4e7 100644
---- a/mm/shmem.c
-+++ b/mm/shmem.c
-@@ -2245,7 +2245,7 @@ static struct file_system_type tmpfs_fs_type = {
+diff -urNp linux-2.6.17.4/mm/shmem.c linux-2.6.17.4/mm/shmem.c
+--- linux-2.6.17.4/mm/shmem.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/shmem.c	2006-07-01 17:36:01.000000000 -0400
+@@ -2245,7 +2245,7 @@ static struct file_system_type tmpfs_fs_
@@ -25378,5 +25048,4 @@
-diff --git a/mm/tiny-shmem.c b/mm/tiny-shmem.c
-index f9d6a9cc91c4bc806700c6119f45e34283abdeb7..0f80d28b3d779837ebc1a0f56fa789980c76777d 100644
---- a/mm/tiny-shmem.c
-+++ b/mm/tiny-shmem.c
-@@ -27,7 +27,7 @@ static struct file_system_type tmpfs_fs_type = {
+diff -urNp linux-2.6.17.4/mm/tiny-shmem.c linux-2.6.17.4/mm/tiny-shmem.c
+--- linux-2.6.17.4/mm/tiny-shmem.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/tiny-shmem.c	2006-07-01 17:37:07.000000000 -0400
+@@ -27,7 +27,7 @@ static struct file_system_type tmpfs_fs_
@@ -25391,5 +25060,4 @@
-diff --git a/mm/vmalloc.c b/mm/vmalloc.c
-index c0504f1e34ebdbd2003ba8aaa63287f366b100cb..14c3a85de926f404ffa3e70148e8755b18a64400 100644
---- a/mm/vmalloc.c
-+++ b/mm/vmalloc.c
-@@ -193,6 +193,8 @@ struct vm_struct *__get_vm_area_node(unsigned long size, unsigned long flags,
+diff -urNp linux-2.6.17.4/mm/vmalloc.c linux-2.6.17.4/mm/vmalloc.c
+--- linux-2.6.17.4/mm/vmalloc.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/mm/vmalloc.c	2006-07-01 14:35:30.000000000 -0400
+@@ -193,6 +193,8 @@ struct vm_struct *__get_vm_area_node(uns
@@ -25404 +25072 @@
-@@ -204,8 +206,6 @@ struct vm_struct *__get_vm_area_node(unsigned long size, unsigned long flags,
+@@ -204,8 +206,6 @@ struct vm_struct *__get_vm_area_node(uns
@@ -25413,4 +25081,3 @@
-diff --git a/net/ipv4/inet_connection_sock.c b/net/ipv4/inet_connection_sock.c
-index 9a01bb81f8bf99f5d4202e7e459b88d597170621..b6014cfa39684e50dfa895597eab26e6690d5683 100644
---- a/net/ipv4/inet_connection_sock.c
-+++ b/net/ipv4/inet_connection_sock.c
+diff -urNp linux-2.6.17.4/net/ipv4/inet_connection_sock.c linux-2.6.17.4/net/ipv4/inet_connection_sock.c
+--- linux-2.6.17.4/net/ipv4/inet_connection_sock.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/net/ipv4/inet_connection_sock.c	2006-07-01 15:39:05.000000000 -0400
@@ -25425,4 +25092,3 @@
-diff --git a/net/ipv4/inet_hashtables.c b/net/ipv4/inet_hashtables.c
-index ee9b5515b9aea20fb28d61be5aedc04321f20676..cc89c1be53b1dfa1ead9652c230ef854640bc9a8 100644
---- a/net/ipv4/inet_hashtables.c
-+++ b/net/ipv4/inet_hashtables.c
+diff -urNp linux-2.6.17.4/net/ipv4/inet_hashtables.c linux-2.6.17.4/net/ipv4/inet_hashtables.c
+--- linux-2.6.17.4/net/ipv4/inet_hashtables.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/net/ipv4/inet_hashtables.c	2006-07-01 15:39:05.000000000 -0400
@@ -25453,48 +25119,3 @@
-diff --git a/net/ipv4/netfilter/Kconfig b/net/ipv4/netfilter/Kconfig
-index d4072533da218e66c8651e9495c50ea9a35a1445..6080b82aed427025456e71872f691ed30297a252 100644
---- a/net/ipv4/netfilter/Kconfig
-+++ b/net/ipv4/netfilter/Kconfig
-@@ -314,6 +314,21 @@ config IP_NF_MATCH_HASHLIMIT
- 	  destination IP' or `500pps from any given source IP'  with a single
- 	  IPtables rule.
- 
-+config IP_NF_MATCH_STEALTH
-+	tristate "stealth match support"
-+	depends on IP_NF_IPTABLES
-+	help
-+	  Enabling this option will drop all syn packets coming to unserved tcp
-+	  ports as well as all packets coming to unserved udp ports.  If you
-+	  are using your system to route any type of packets (ie. via NAT)
-+	  you should put this module at the end of your ruleset, since it will
-+	  drop packets that aren't going to ports that are listening on your
-+	  machine itself, it doesn't take into account that the packet might be
-+	  destined for someone on your internal network if you're using NAT for
-+	  instance.
-+
-+	  To compile it as a module, choose M here.  If unsure, say N.
-+
- # `filter', generic and specific targets
- config IP_NF_FILTER
- 	tristate "Packet filtering"
-@@ -614,4 +629,3 @@ config IP_NF_ARP_MANGLE
- 	  hardware and network addresses.
- 
- endmenu
--
-diff --git a/net/ipv4/netfilter/Makefile b/net/ipv4/netfilter/Makefile
-index 461cb1eb5de79cfe6050b7291ff12d86110054c1..3a78bdfd953ab6f5add720f2d32916cf71ab9ed6 100644
---- a/net/ipv4/netfilter/Makefile
-+++ b/net/ipv4/netfilter/Makefile
-@@ -61,6 +61,7 @@ obj-$(CONFIG_IP_NF_MATCH_DSCP) += ipt_dscp.o
- obj-$(CONFIG_IP_NF_MATCH_AH) += ipt_ah.o
- obj-$(CONFIG_IP_NF_MATCH_TTL) += ipt_ttl.o
- obj-$(CONFIG_IP_NF_MATCH_ADDRTYPE) += ipt_addrtype.o
-+obj-$(CONFIG_IP_NF_MATCH_STEALTH) += ipt_stealth.o
- 
- # targets
- obj-$(CONFIG_IP_NF_TARGET_REJECT) += ipt_REJECT.o
-diff --git a/net/ipv4/netfilter/ipt_stealth.c b/net/ipv4/netfilter/ipt_stealth.c
-new file mode 100644
-index 0000000000000000000000000000000000000000..3455540ff476299156c6420ebb67869343412ae0
---- /dev/null
-+++ b/net/ipv4/netfilter/ipt_stealth.c
+diff -urNp linux-2.6.17.4/net/ipv4/netfilter/ipt_stealth.c linux-2.6.17.4/net/ipv4/netfilter/ipt_stealth.c
+--- linux-2.6.17.4/net/ipv4/netfilter/ipt_stealth.c	1969-12-31 19:00:00.000000000 -0500
++++ linux-2.6.17.4/net/ipv4/netfilter/ipt_stealth.c	2006-07-01 15:39:05.000000000 -0400
@@ -25614,4 +25235,44 @@
-diff --git a/net/ipv4/tcp_ipv4.c b/net/ipv4/tcp_ipv4.c
-index 672950e54c498a2cddf1f86b3321363be991e3ef..badc0c6b021623747da2ec83af1a5ef1bd4c239d 100644
---- a/net/ipv4/tcp_ipv4.c
-+++ b/net/ipv4/tcp_ipv4.c
+diff -urNp linux-2.6.17.4/net/ipv4/netfilter/Kconfig linux-2.6.17.4/net/ipv4/netfilter/Kconfig
+--- linux-2.6.17.4/net/ipv4/netfilter/Kconfig	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/net/ipv4/netfilter/Kconfig	2006-07-01 15:39:05.000000000 -0400
+@@ -314,6 +314,21 @@ config IP_NF_MATCH_HASHLIMIT
+ 	  destination IP' or `500pps from any given source IP'  with a single
+ 	  IPtables rule.
+ 
++config IP_NF_MATCH_STEALTH
++	tristate "stealth match support"
++	depends on IP_NF_IPTABLES
++	help
++	  Enabling this option will drop all syn packets coming to unserved tcp
++	  ports as well as all packets coming to unserved udp ports.  If you
++	  are using your system to route any type of packets (ie. via NAT)
++	  you should put this module at the end of your ruleset, since it will
++	  drop packets that aren't going to ports that are listening on your
++	  machine itself, it doesn't take into account that the packet might be
++	  destined for someone on your internal network if you're using NAT for
++	  instance.
++
++	  To compile it as a module, choose M here.  If unsure, say N.
++
+ # `filter', generic and specific targets
+ config IP_NF_FILTER
+ 	tristate "Packet filtering"
+@@ -614,4 +629,3 @@ config IP_NF_ARP_MANGLE
+ 	  hardware and network addresses.
+ 
+ endmenu
+-
+diff -urNp linux-2.6.17.4/net/ipv4/netfilter/Makefile linux-2.6.17.4/net/ipv4/netfilter/Makefile
+--- linux-2.6.17.4/net/ipv4/netfilter/Makefile	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/net/ipv4/netfilter/Makefile	2006-07-01 16:20:22.000000000 -0400
+@@ -61,6 +61,7 @@ obj-$(CONFIG_IP_NF_MATCH_DSCP) += ipt_ds
+ obj-$(CONFIG_IP_NF_MATCH_AH) += ipt_ah.o
+ obj-$(CONFIG_IP_NF_MATCH_TTL) += ipt_ttl.o
+ obj-$(CONFIG_IP_NF_MATCH_ADDRTYPE) += ipt_addrtype.o
++obj-$(CONFIG_IP_NF_MATCH_STEALTH) += ipt_stealth.o
+ 
+ # targets
+ obj-$(CONFIG_IP_NF_TARGET_REJECT) += ipt_REJECT.o
+diff -urNp linux-2.6.17.4/net/ipv4/tcp_ipv4.c linux-2.6.17.4/net/ipv4/tcp_ipv4.c
+--- linux-2.6.17.4/net/ipv4/tcp_ipv4.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/net/ipv4/tcp_ipv4.c	2006-07-01 15:39:05.000000000 -0400
@@ -25626,4 +25287,3 @@
-diff --git a/net/ipv4/udp.c b/net/ipv4/udp.c
-index 3f93292b0ad8549366ce57938170e08116de1faf..63e73c1ae950ebe9ce41dc67131cc68659300631 100644
---- a/net/ipv4/udp.c
-+++ b/net/ipv4/udp.c
+diff -urNp linux-2.6.17.4/net/ipv4/udp.c linux-2.6.17.4/net/ipv4/udp.c
+--- linux-2.6.17.4/net/ipv4/udp.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/net/ipv4/udp.c	2006-07-01 15:39:05.000000000 -0400
@@ -25651 +25311 @@
-@@ -266,8 +273,7 @@ static struct sock *udp_v4_lookup_longway(u32 saddr, u16 sport,
+@@ -266,8 +273,7 @@ static struct sock *udp_v4_lookup_longwa
@@ -25661 +25321 @@
-@@ -542,9 +548,16 @@ int udp_sendmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg,
+@@ -542,9 +548,16 @@ int udp_sendmsg(struct kiocb *iocb, stru
@@ -25690,4 +25350,3 @@
-diff --git a/net/socket.c b/net/socket.c
-index 02948b622bd2e938bfc6d02e44f2d13ae2b9f874..8539a51e69b256384b96227049f2f38a09befe62 100644
---- a/net/socket.c
-+++ b/net/socket.c
+diff -urNp linux-2.6.17.4/net/socket.c linux-2.6.17.4/net/socket.c
+--- linux-2.6.17.4/net/socket.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/net/socket.c	2006-07-01 17:37:11.000000000 -0400
@@ -25724 +25383 @@
-@@ -341,7 +357,7 @@ static struct super_block *sockfs_get_sb(struct file_system_type *fs_type,
+@@ -341,7 +357,7 @@ static struct super_block *sockfs_get_sb
@@ -25733 +25392 @@
-@@ -1240,6 +1256,16 @@ asmlinkage long sys_socket(int family, int type, int protocol)
+@@ -1240,6 +1256,16 @@ asmlinkage long sys_socket(int family, i
@@ -25750 +25409 @@
-@@ -1335,16 +1361,25 @@ asmlinkage long sys_bind(int fd, struct sockaddr __user *umyaddr, int addrlen)
+@@ -1335,16 +1361,25 @@ asmlinkage long sys_bind(int fd, struct 
@@ -25776 +25435 @@
-@@ -1368,10 +1403,17 @@ asmlinkage long sys_listen(int fd, int backlog)
+@@ -1368,10 +1403,17 @@ asmlinkage long sys_listen(int fd, int b
@@ -25794 +25453 @@
-@@ -1408,6 +1450,13 @@ asmlinkage long sys_accept(int fd, struct sockaddr __user *upeer_sockaddr, int _
+@@ -1408,6 +1450,13 @@ asmlinkage long sys_accept(int fd, struc
@@ -25808 +25467 @@
-@@ -1449,6 +1498,7 @@ asmlinkage long sys_accept(int fd, struct sockaddr __user *upeer_sockaddr, int _
+@@ -1449,6 +1498,7 @@ asmlinkage long sys_accept(int fd, struc
@@ -25816 +25475 @@
-@@ -1477,6 +1527,7 @@ asmlinkage long sys_connect(int fd, struct sockaddr __user *uservaddr, int addrl
+@@ -1477,6 +1527,7 @@ asmlinkage long sys_connect(int fd, stru
@@ -25824 +25483 @@
-@@ -1486,6 +1537,13 @@ asmlinkage long sys_connect(int fd, struct sockaddr __user *uservaddr, int addrl
+@@ -1486,6 +1537,13 @@ asmlinkage long sys_connect(int fd, stru
@@ -25838 +25497 @@
-@@ -1740,6 +1798,7 @@ asmlinkage long sys_shutdown(int fd, int how)
+@@ -1740,6 +1798,7 @@ asmlinkage long sys_shutdown(int fd, int
@@ -25846,4 +25505,3 @@
-diff --git a/net/unix/af_unix.c b/net/unix/af_unix.c
-index d901465ce0135093276d55adabbb7691591097c3..0d2802284def74e14471baa13ddd3e2ba55fd186 100644
---- a/net/unix/af_unix.c
-+++ b/net/unix/af_unix.c
+diff -urNp linux-2.6.17.4/net/unix/af_unix.c linux-2.6.17.4/net/unix/af_unix.c
+--- linux-2.6.17.4/net/unix/af_unix.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/net/unix/af_unix.c	2006-07-01 15:39:05.000000000 -0400
@@ -25858 +25516 @@
-@@ -680,6 +681,11 @@ static struct sock *unix_find_other(struct sockaddr_un *sunname, int len,
+@@ -680,6 +681,11 @@ static struct sock *unix_find_other(stru
@@ -25870 +25528 @@
-@@ -703,6 +709,13 @@ static struct sock *unix_find_other(struct sockaddr_un *sunname, int len,
+@@ -703,6 +709,13 @@ static struct sock *unix_find_other(stru
@@ -25884 +25542 @@
-@@ -781,9 +794,18 @@ static int unix_bind(struct socket *sock, struct sockaddr *uaddr, int addr_len)
+@@ -781,9 +794,18 @@ static int unix_bind(struct socket *sock
@@ -25903 +25561 @@
-@@ -801,6 +823,10 @@ static int unix_bind(struct socket *sock, struct sockaddr *uaddr, int addr_len)
+@@ -801,6 +823,10 @@ static int unix_bind(struct socket *sock
@@ -25914,4 +25572,94 @@
-diff --git a/security/Kconfig b/security/Kconfig
-index 34f593410d57cb12070a154bc0fa0b272467dfeb..61660f812e8b7adcb4e08ba2ff2b1c7fc80134d9 100644
---- a/security/Kconfig
-+++ b/security/Kconfig
+diff -urNp linux-2.6.17.4/security/commoncap.c linux-2.6.17.4/security/commoncap.c
+--- linux-2.6.17.4/security/commoncap.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/security/commoncap.c	2006-07-01 15:39:05.000000000 -0400
+@@ -24,6 +24,7 @@
+ #include <linux/ptrace.h>
+ #include <linux/xattr.h>
+ #include <linux/hugetlb.h>
++#include <linux/grsecurity.h>
+ 
+ int cap_netlink_send(struct sock *sk, struct sk_buff *skb)
+ {
+@@ -45,7 +46,15 @@ EXPORT_SYMBOL(cap_netlink_recv);
+ int cap_capable (struct task_struct *tsk, int cap)
+ {
+ 	/* Derived from include/linux/sched.h:capable. */
+-	if (cap_raised(tsk->cap_effective, cap))
++	if (cap_raised (tsk->cap_effective, cap) && gr_task_is_capable(tsk, cap))
++		return 0;
++	return -EPERM;
++}
++
++int cap_capable_nolog (struct task_struct *tsk, int cap)
++{
++	/* Derived from include/linux/sched.h:capable. */
++	if (cap_raised (tsk->cap_effective, cap))
+ 		return 0;
+ 	return -EPERM;
+ }
+@@ -164,8 +173,11 @@ void cap_bprm_apply_creds (struct linux_
+ 		}
+ 	}
+ 
+-	current->suid = current->euid = current->fsuid = bprm->e_uid;
+-	current->sgid = current->egid = current->fsgid = bprm->e_gid;
++	if (!gr_check_user_change(-1, bprm->e_uid, bprm->e_uid))
++		current->suid = current->euid = current->fsuid = bprm->e_uid;
++
++	if (!gr_check_group_change(-1, bprm->e_gid, bprm->e_gid))
++		current->sgid = current->egid = current->fsgid = bprm->e_gid;
+ 
+ 	/* For init, we want to retain the capabilities set
+ 	 * in the init_task struct. Thus we skip the usual
+@@ -176,6 +188,8 @@ void cap_bprm_apply_creds (struct linux_
+ 		    cap_intersect (new_permitted, bprm->cap_effective);
+ 	}
+ 
++	gr_handle_chroot_caps(current);
++
+ 	/* AUD: Audit candidate if current->cap_effective is set */
+ 
+ 	current->keep_capabilities = 0;
+@@ -321,12 +335,13 @@ int cap_vm_enough_memory(long pages)
+ {
+ 	int cap_sys_admin = 0;
+ 
+-	if (cap_capable(current, CAP_SYS_ADMIN) == 0)
++	if (cap_capable_nolog(current, CAP_SYS_ADMIN) == 0)
+ 		cap_sys_admin = 1;
+ 	return __vm_enough_memory(pages, cap_sys_admin);
+ }
+ 
+ EXPORT_SYMBOL(cap_capable);
++EXPORT_SYMBOL(cap_capable_nolog);
+ EXPORT_SYMBOL(cap_settime);
+ EXPORT_SYMBOL(cap_ptrace);
+ EXPORT_SYMBOL(cap_capget);
+diff -urNp linux-2.6.17.4/security/dummy.c linux-2.6.17.4/security/dummy.c
+--- linux-2.6.17.4/security/dummy.c	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/security/dummy.c	2006-07-01 15:39:05.000000000 -0400
+@@ -29,6 +29,7 @@
+ #include <linux/hugetlb.h>
+ #include <linux/ptrace.h>
+ #include <linux/file.h>
++#include <linux/grsecurity.h>
+ 
+ static int dummy_ptrace (struct task_struct *parent, struct task_struct *child)
+ {
+@@ -139,8 +140,11 @@ static void dummy_bprm_apply_creds (stru
+ 		}
+ 	}
+ 
+-	current->suid = current->euid = current->fsuid = bprm->e_uid;
+-	current->sgid = current->egid = current->fsgid = bprm->e_gid;
++	if (!gr_check_user_change(-1, bprm->e_uid, bprm->e_uid))
++		current->suid = current->euid = current->fsuid = bprm->e_uid;
++
++	if (!gr_check_group_change(-1, bprm->e_gid, bprm->e_gid))
++		current->sgid = current->egid = current->fsgid = bprm->e_gid;
+ 
+ 	dummy_capget(current, &current->cap_effective, &current->cap_inheritable, &current->cap_permitted);
+ }
+diff -urNp linux-2.6.17.4/security/Kconfig linux-2.6.17.4/security/Kconfig
+--- linux-2.6.17.4/security/Kconfig	2006-06-30 13:37:38.000000000 -0400
++++ linux-2.6.17.4/security/Kconfig	2006-07-01 19:05:34.000000000 -0400
@@ -26372,93 +26119,0 @@
-diff --git a/security/commoncap.c b/security/commoncap.c
-index 841eb4e5c62b6e91b0e799802791289366bfb45d..c4abedcf68fe674a72c04d94844ff27321bb22ac 100644
---- a/security/commoncap.c
-+++ b/security/commoncap.c
-@@ -24,6 +24,7 @@
- #include <linux/ptrace.h>
- #include <linux/xattr.h>
- #include <linux/hugetlb.h>
-+#include <linux/grsecurity.h>
- 
- int cap_netlink_send(struct sock *sk, struct sk_buff *skb)
- {
-@@ -45,7 +46,15 @@ EXPORT_SYMBOL(cap_netlink_recv);
- int cap_capable (struct task_struct *tsk, int cap)
- {
- 	/* Derived from include/linux/sched.h:capable. */
--	if (cap_raised(tsk->cap_effective, cap))
-+	if (cap_raised (tsk->cap_effective, cap) && gr_task_is_capable(tsk, cap))
-+		return 0;
-+	return -EPERM;
-+}
-+
-+int cap_capable_nolog (struct task_struct *tsk, int cap)
-+{
-+	/* Derived from include/linux/sched.h:capable. */
-+	if (cap_raised (tsk->cap_effective, cap))
- 		return 0;
- 	return -EPERM;
- }
-@@ -164,8 +173,11 @@ void cap_bprm_apply_creds (struct linux_binprm *bprm, int unsafe)
- 		}
- 	}
- 
--	current->suid = current->euid = current->fsuid = bprm->e_uid;
--	current->sgid = current->egid = current->fsgid = bprm->e_gid;
-+	if (!gr_check_user_change(-1, bprm->e_uid, bprm->e_uid))
-+		current->suid = current->euid = current->fsuid = bprm->e_uid;
-+
-+	if (!gr_check_group_change(-1, bprm->e_gid, bprm->e_gid))
-+		current->sgid = current->egid = current->fsgid = bprm->e_gid;
- 
- 	/* For init, we want to retain the capabilities set
- 	 * in the init_task struct. Thus we skip the usual
-@@ -176,6 +188,8 @@ void cap_bprm_apply_creds (struct linux_binprm *bprm, int unsafe)
- 		    cap_intersect (new_permitted, bprm->cap_effective);
- 	}
- 
-+	gr_handle_chroot_caps(current);
-+
- 	/* AUD: Audit candidate if current->cap_effective is set */
- 
- 	current->keep_capabilities = 0;
-@@ -321,12 +335,13 @@ int cap_vm_enough_memory(long pages)
- {
- 	int cap_sys_admin = 0;
- 
--	if (cap_capable(current, CAP_SYS_ADMIN) == 0)
-+	if (cap_capable_nolog(current, CAP_SYS_ADMIN) == 0)
- 		cap_sys_admin = 1;
- 	return __vm_enough_memory(pages, cap_sys_admin);
- }
- 
- EXPORT_SYMBOL(cap_capable);
-+EXPORT_SYMBOL(cap_capable_nolog);
- EXPORT_SYMBOL(cap_settime);
- EXPORT_SYMBOL(cap_ptrace);
- EXPORT_SYMBOL(cap_capget);
-diff --git a/security/dummy.c b/security/dummy.c
-index 8ccccccc12acd78f72395dabd4f1c4aade37e784..55860e9afab6b6e31e17c2edd0056cba171c4cfe 100644
---- a/security/dummy.c
-+++ b/security/dummy.c
-@@ -29,6 +29,7 @@
- #include <linux/hugetlb.h>
- #include <linux/ptrace.h>
- #include <linux/file.h>
-+#include <linux/grsecurity.h>
- 
- static int dummy_ptrace (struct task_struct *parent, struct task_struct *child)
- {
-@@ -139,8 +140,11 @@ static void dummy_bprm_apply_creds (struct linux_binprm *bprm, int unsafe)
- 		}
- 	}
- 
--	current->suid = current->euid = current->fsuid = bprm->e_uid;
--	current->sgid = current->egid = current->fsgid = bprm->e_gid;
-+	if (!gr_check_user_change(-1, bprm->e_uid, bprm->e_uid))
-+		current->suid = current->euid = current->fsuid = bprm->e_uid;
-+
-+	if (!gr_check_group_change(-1, bprm->e_gid, bprm->e_gid))
-+		current->sgid = current->egid = current->fsgid = bprm->e_gid;
- 
- 	dummy_capget(current, &current->cap_effective, &current->cap_inheritable, &current->cap_permitted);
- }
